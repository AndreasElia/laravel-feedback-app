(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_gripeless_pico_dist_index_js"],{

/***/ "./node_modules/@gripeless/pico/dist/clone.js":
/*!****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/clone.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cloneBody": () => (/* binding */ cloneBody)
/* harmony export */ });
/* harmony import */ var fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fp-ts/es6/Array */ "./node_modules/fp-ts/es6/Array.js");
// Mark <canvas>, <input> and <textarea> elements with
// unique id's so that their state can be later copied into
// a clone
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (undefined && undefined.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var PICO_CLONE_ID_KEY = 'picocloneid';
var id = function () {
    return Math.random()
        .toString(32)
        .substring(2);
};
function isHTMLElement(element) {
    return element instanceof HTMLElement;
}
function isHTMLOrSVGElement(element) {
    return (element instanceof HTMLElement ||
        element instanceof SVGElement);
}
var defaultNaN = function (defaultTo) { return function (value) {
    return isNaN(value) ? defaultTo : value;
}; };
// Even though this function uses `querySelectorAll('*')` it's relatively
// fast - on a page with 25k nodes (youtube) it executes in 10-15ms
var getScrolledElements = function ($target) {
    return Array.from($target.querySelectorAll('*'))
        .filter(function ($el) { return $el.scrollTop !== 0 || $el.scrollLeft !== 0; })
        .filter(isHTMLElement);
};
var attachCloneID = function ($target) {
    var e_1, _a;
    try {
        for (var _b = __values(__spread($target.querySelectorAll('input'), $target.querySelectorAll('textarea'), $target.querySelectorAll('canvas'), getScrolledElements($target))), _c = _b.next(); !_c.done; _c = _b.next()) {
            var $element = _c.value;
            $element.dataset[PICO_CLONE_ID_KEY] = id();
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
};
var removeCloneID = function ($target) {
    var e_2, _a;
    try {
        for (var _b = __values($target.querySelectorAll("[data-" + PICO_CLONE_ID_KEY + "]")), _c = _b.next(); !_c.done; _c = _b.next()) {
            var $element = _c.value;
            if (!($element instanceof HTMLElement)) {
                console.warn('Element that had a pico clone id attached was not an HTMLElement during cleanup', $element);
                continue;
            }
            $element.removeAttribute("data-" + PICO_CLONE_ID_KEY);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
};
var cloneCanvases = function (container) {
    var e_3, _a;
    var _loop_1 = function ($clonedCanvas) {
        var cloneId = $clonedCanvas.dataset[PICO_CLONE_ID_KEY];
        if (cloneId === undefined) {
            console.warn('Failed to get clone id from cloned canvas', $clonedCanvas);
            return "continue";
        }
        var $originalCanvas = Array.from(container.parentWindow.document.querySelectorAll('canvas')).find(function ($original) {
            return $original.dataset[PICO_CLONE_ID_KEY] === cloneId;
        });
        if ($originalCanvas === undefined) {
            console.warn('Failed to find original canvas for cloned canvas', $clonedCanvas);
            return "continue";
        }
        var $replacementImg = container.parentWindow.document.createElement('img');
        // Since we're changing the element's name the "canvas"
        // will be untargetable by css, therefore we need to
        // clone all the style properties over manually in this
        // particular case.
        $replacementImg.style.cssText = container.parentWindow.window.getComputedStyle($originalCanvas).cssText;
        $replacementImg.src = $originalCanvas.toDataURL();
        var parent_1 = $clonedCanvas.parentNode;
        if (!parent_1) {
            console.warn('Failed to get parent of node', $clonedCanvas);
            return "continue";
        }
        parent_1.replaceChild($replacementImg, $clonedCanvas);
    };
    try {
        for (var _b = __values(container.tree.html.querySelectorAll('canvas')), _c = _b.next(); !_c.done; _c = _b.next()) {
            var $clonedCanvas = _c.value;
            _loop_1($clonedCanvas);
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return container;
};
// Input values set by JS don't get copied when performing a recursive
// `Node.cloneNode`, we need to set the attributes ourselves.
var cloneInputs = function (container) {
    var e_4, _a;
    var _loop_2 = function ($clonedInputOrTextarea) {
        var cloneId = $clonedInputOrTextarea.dataset[PICO_CLONE_ID_KEY];
        if (cloneId === undefined) {
            console.warn('Failed to get clone id from cloned input or textarea', $clonedInputOrTextarea);
            return "continue";
        }
        var $originalInputOrTextarea = __spread(container.parentWindow.document.querySelectorAll('input'), container.parentWindow.document.querySelectorAll('textarea')).find(function ($original) {
            return $original.dataset[PICO_CLONE_ID_KEY] === cloneId;
        });
        if ($originalInputOrTextarea === undefined) {
            console.warn('Failed to find original input or textarea for cloned input or textarea', $clonedInputOrTextarea);
            return "continue";
        }
        if ($originalInputOrTextarea instanceof
            HTMLInputElement &&
            $clonedInputOrTextarea instanceof HTMLInputElement) {
            if (($clonedInputOrTextarea.type === 'checkbox' ||
                $clonedInputOrTextarea.type === 'radio') &&
                $originalInputOrTextarea.checked) {
                // <input type="checkbox | radio" />
                $clonedInputOrTextarea.setAttribute('checked', 'checked');
            }
            else if (
            // <input type="number | text | range" />
            ['number', 'text', 'range'].indexOf($clonedInputOrTextarea.type) !== -1) {
                $clonedInputOrTextarea.setAttribute('value', $originalInputOrTextarea.value);
            }
        }
        else if ($originalInputOrTextarea instanceof
            HTMLTextAreaElement &&
            $clonedInputOrTextarea instanceof HTMLTextAreaElement) {
            // <textarea>
            var contents = container.parentWindow.document.createTextNode($originalInputOrTextarea.value);
            $clonedInputOrTextarea.innerHTML = '';
            $clonedInputOrTextarea.appendChild(contents);
        }
    };
    try {
        for (var _b = __values(__spread(container.tree.html.querySelectorAll('input'), container.tree.html.querySelectorAll('textarea'))), _c = _b.next(); !_c.done; _c = _b.next()) {
            var $clonedInputOrTextarea = _c.value;
            _loop_2($clonedInputOrTextarea);
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return container;
};
var cloneElementScroll = function (container, $clone) {
    var e_5, _a;
    var cloneId = $clone.dataset[PICO_CLONE_ID_KEY];
    if (cloneId === undefined) {
        console.warn('Failed to get clone id from cloned scrolled element', $clone);
        return;
    }
    var $original = container.parentWindow.document.querySelector("[data-" + PICO_CLONE_ID_KEY + " = \"" + cloneId + "\"]");
    if (!($original instanceof HTMLElement)) {
        console.warn('Failed to find original element for scrolled element', $clone);
        return;
    }
    $clone.style.position =
        $clone.style.position === 'absolute'
            ? 'absolute'
            : 'relative';
    $clone.style.overflow = 'hidden';
    $clone.style.width = $original.offsetWidth + 'px';
    $clone.style.height = $original.offsetHeight + 'px';
    var $clonedChildren = Array.from($clone.children).filter(isHTMLOrSVGElement);
    var $originalChildren = Array.from($original.children).filter(isHTMLOrSVGElement);
    if ($clonedChildren.length !== $originalChildren.length) {
        console.warn('Scrolled element has a different amount of children ' +
            'than its clone, skipping scroll emulation', $original);
        return;
    }
    var $$zippedChildren = (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.zip)($originalChildren, $clonedChildren);
    var scrollTopRemaining = $original.scrollTop;
    var scrollLeftRemaining = $original.scrollLeft;
    var lastChild;
    try {
        for (var $$zippedChildren_1 = __values($$zippedChildren), $$zippedChildren_1_1 = $$zippedChildren_1.next(); !$$zippedChildren_1_1.done; $$zippedChildren_1_1 = $$zippedChildren_1.next()) {
            var _b = __read($$zippedChildren_1_1.value, 2), $originalChild = _b[0], $clonedChild = _b[1];
            var originalChildStyles = container.parentWindow.window.getComputedStyle($originalChild);
            // Handle absolutely positioned children
            if (container.parentWindow.window.getComputedStyle($original).position === 'relative' &&
                originalChildStyles.position === 'absolute') {
                $clonedChild.style.top =
                    defaultNaN(0)(parseInt(originalChildStyles.top)) -
                        $original.scrollTop +
                        'px';
                $clonedChild.style.left =
                    defaultNaN(0)(parseInt(originalChildStyles.left)) -
                        $original.scrollLeft +
                        'px';
                // Since all relative children are now absolute, increment z-index
                // of all previously absolute children by 1 so that they're
                // still visible over
                $clonedChild.style.zIndex = (defaultNaN(0)(parseInt(originalChildStyles.zIndex)) + 1).toString();
                continue;
            }
            $clonedChild.style.position = 'absolute';
            $clonedChild.style.width = originalChildStyles.width;
            $clonedChild.style.height = originalChildStyles.height;
            if (typeof lastChild !== 'undefined') {
                var lastChildBoundingRect = lastChild.getBoundingClientRect();
                scrollTopRemaining -=
                    $originalChild.getBoundingClientRect().top -
                        lastChildBoundingRect.top;
                scrollLeftRemaining -=
                    $originalChild.getBoundingClientRect().left -
                        lastChildBoundingRect.left;
            }
            $clonedChild.style.top = -scrollTopRemaining + 'px';
            $clonedChild.style.left = -scrollLeftRemaining + 'px';
            lastChild = $originalChild;
            // const cloneChildBoundingRect = $originalChild.getBoundingClientRect()
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if ($$zippedChildren_1_1 && !$$zippedChildren_1_1.done && (_a = $$zippedChildren_1.return)) _a.call($$zippedChildren_1);
        }
        finally { if (e_5) throw e_5.error; }
    }
};
var cloneScrolls = function (container) {
    var e_6, _a;
    try {
        for (var _b = __values(getScrolledElements(container.parentWindow.html)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var $original = _c.value;
            var cloneId = $original.dataset[PICO_CLONE_ID_KEY];
            if (cloneId === undefined) {
                console.warn('Failed to get clone id from scrolled element', $original);
                continue;
            }
            var $cloned = container.tree.html.querySelector("[data-" + PICO_CLONE_ID_KEY + " = \"" + cloneId + "\"]");
            if (!($cloned instanceof HTMLElement)) {
                console.warn('Failed to find cloned element for original scrolled element', $original);
                continue;
            }
            cloneElementScroll(container, $cloned);
        }
    }
    catch (e_6_1) { e_6 = { error: e_6_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_6) throw e_6.error; }
    }
    // The above code doesn't process <html> scroll since it usually gets
    // special treatment in browsers, a simple `translate` will do
    container.tree.html.style.transform += " translate(-" + container.parentWindow.html.scrollLeft + "px, -" + container.parentWindow.html.scrollTop + "px)";
    return container;
};
var removeNodesMatchingSelectors = function (selectors) { return function ($node) {
    if ($node instanceof Element) {
        selectors.forEach(function (selector) {
            var e_7, _a;
            try {
                for (var _b = __values($node.querySelectorAll(selector)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var $child = _c.value;
                    $child.remove();
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        });
    }
}; };
// (ugly)
var cloneBody = function (ignoredSelectors) { return function (container) {
    attachCloneID(container.parentWindow.html);
    container.tree.html.className =
        container.parentWindow.html.className;
    container.tree.html.style.cssText =
        container.parentWindow.html.style.cssText;
    // Fix for `rem` units
    container.tree.svg.style.fontSize = container.parentWindow.window.getComputedStyle(container.parentWindow.html).fontSize;
    var $clonedBody = container.parentWindow.body.cloneNode(true);
    removeNodesMatchingSelectors(ignoredSelectors)($clonedBody);
    container.tree.html.appendChild($clonedBody);
    cloneInputs(container);
    cloneCanvases(container);
    cloneScrolls(container);
    if ($clonedBody instanceof HTMLBodyElement) {
        container.tree.html.style.margin = '0';
    }
    removeCloneID(container.parentWindow.html);
    return container;
}; };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/container.js":
/*!********************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/container.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTree": () => (/* binding */ createTree),
/* harmony export */   "createContainer": () => (/* binding */ createContainer)
/* harmony export */ });
/* harmony import */ var fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fp-ts/es6/Either */ "./node_modules/fp-ts/es6/Either.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ "./node_modules/@gripeless/pico/dist/element.js");
/* harmony import */ var _window_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./window-info */ "./node_modules/@gripeless/pico/dist/window-info.js");




var getBackgroundColor = function ($window, $element) {
    var backgroundColor = $window.getComputedStyle($element).backgroundColor;
    return backgroundColor === 'transparent' ||
        backgroundColor === 'rgba(0, 0, 0, 0)'
        ? 'white'
        : backgroundColor;
};
var createTree = function (windowInfo) {
    var _a = windowInfo.window, width = _a.innerWidth, height = _a.innerHeight;
    var h = (0,_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(windowInfo.document);
    var s = (0,_element__WEBPACK_IMPORTED_MODULE_0__.createSVGElement)(windowInfo.document);
    var $iframe = h('iframe', {
        width: width + 'px',
        height: height + 'px'
    });
    var $svg = s('svg', {
        width: width + 'px',
        height: height + 'px'
    });
    $svg.style.backgroundColor = getBackgroundColor(windowInfo.window, windowInfo.body);
    var $foreignObject = s('foreignObject', {
        x: '0',
        y: '0',
        width: width + 'px',
        height: height + 'px'
    });
    var $newHtml = h('html');
    $newHtml.setAttribute('xmlns', _element__WEBPACK_IMPORTED_MODULE_0__.xhtmlNS);
    var $newHead = h('head');
    $newHtml.appendChild($newHead);
    $newHtml.appendChild($newHead);
    $foreignObject.appendChild($newHtml);
    $svg.appendChild($foreignObject);
    $iframe.appendChild($svg);
    return {
        html: $newHtml,
        head: $newHead,
        svg: $svg
    };
};
var createContainer = function ($window) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_2__.pipe)((0,_window_info__WEBPACK_IMPORTED_MODULE_1__.getWindowInfo)($window), (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_3__.map)(function (parentWindow) { return ({
        parentWindow: parentWindow,
        tree: createTree(parentWindow)
    }); }));
};


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/download.js":
/*!*******************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/download.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "download": () => (/* binding */ download),
/* harmony export */   "responseToText": () => (/* binding */ responseToText),
/* harmony export */   "responseToBlob": () => (/* binding */ responseToBlob),
/* harmony export */   "blobToDataURL": () => (/* binding */ blobToDataURL),
/* harmony export */   "downloadErrorToDetailedError": () => (/* binding */ downloadErrorToDetailedError)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ "./node_modules/@gripeless/pico/dist/error.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/@gripeless/pico/dist/noop.js");



var download = function (url) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (reject, resolve) {
        fetch(url, { cache: 'force-cache' })
            .then(function (response) {
            if (response.ok) {
                resolve(response);
            }
            else {
                reject({
                    _tag: 'HTTPError',
                    url: url,
                    status: response.status,
                    statusText: response.statusText
                });
            }
        })
            .catch(function (error) {
            reject({
                _tag: 'NetworkError',
                url: url
            });
        });
        return _noop__WEBPACK_IMPORTED_MODULE_2__.noop;
    });
};
var responseToText = function (response) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (reject, resolve) {
        response
            .text()
            .then(resolve)
            .catch(function (error) {
            return reject({
                error: error,
                reason: "Failed to convert response to text (" + response.url + ")"
            });
        });
        return _noop__WEBPACK_IMPORTED_MODULE_2__.noop;
    });
};
var responseToBlob = function (response) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (reject, resolve) {
        response
            .blob()
            .then(resolve)
            .catch(function (error) {
            return reject({
                error: error,
                reason: "Failed to convert response to text (" + response.url + ")"
            });
        });
        return _noop__WEBPACK_IMPORTED_MODULE_2__.noop;
    });
};
var blobToDataURL = function (blob) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (reject, resolve) {
        var reader = new FileReader();
        reader.onloadend = function () {
            return typeof reader.result === 'string'
                ? resolve(reader.result)
                : reject((0,_error__WEBPACK_IMPORTED_MODULE_1__.err)("Got invalid type when reading blob (" + typeof reader.result + ")"));
        };
        reader.onerror = function () {
            return reject((0,_error__WEBPACK_IMPORTED_MODULE_1__.err)('Failed to load data url for blob'));
        };
        reader.readAsDataURL(blob);
        return reader.abort;
    });
};
var downloadErrorToDetailedError = function (downloadError) {
    var reason = "Failed to download resource at " + downloadError.url + " " +
        (downloadError._tag === 'NetworkError'
            ? '(Network Error, most likely a CORS issue)'
            : "(Status: " + downloadError.status + " - " + downloadError.statusText + ")");
    return {
        reason: reason,
        error: new Error(reason)
    };
};


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/element.js":
/*!******************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/element.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "svgNS": () => (/* binding */ svgNS),
/* harmony export */   "xhtmlNS": () => (/* binding */ xhtmlNS),
/* harmony export */   "createSVGElement": () => (/* binding */ createSVGElement),
/* harmony export */   "createElement": () => (/* binding */ createElement)
/* harmony export */ });
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var svgNS = 'http://www.w3.org/2000/svg';
var xhtmlNS = 'http://www.w3.org/1999/xhtml';
var createSVGElement = function ($document) { return function (tagName, options) {
    if (options === void 0) { options = {}; }
    var $el = $document.createElementNS(svgNS, tagName);
    Object.entries(options).forEach(function (_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        return $el.setAttribute(key, value);
    });
    return $el;
}; };
var createElement = function ($document) { return function (tagName, properties) {
    if (properties === void 0) { properties = {}; }
    var $el = $document.createElement(tagName);
    Object.assign($el, properties);
    return $el;
}; };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/error-stack.js":
/*!**********************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/error-stack.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "empty": () => (/* binding */ empty),
/* harmony export */   "fromEithers": () => (/* binding */ fromEithers),
/* harmony export */   "fromError": () => (/* binding */ fromError),
/* harmony export */   "fromErrors": () => (/* binding */ fromErrors),
/* harmony export */   "concat": () => (/* binding */ concat),
/* harmony export */   "fold": () => (/* binding */ fold),
/* harmony export */   "value": () => (/* binding */ value),
/* harmony export */   "errors": () => (/* binding */ errors)
/* harmony export */ });
/* harmony import */ var fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fp-ts/es6/Array */ "./node_modules/fp-ts/es6/Array.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");


var ErrorStack$ = Symbol();
var empty = function (value) { return ({
    _tag: ErrorStack$,
    errors: [],
    value: value
}); };
var fromEithers = function (value) { return function (eithers) { return ({
    _tag: ErrorStack$,
    errors: (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.lefts)(eithers),
    value: value
}); }; };
var fromError = function (value) { return function (error) { return fromErrors(value)([error]); }; };
var fromErrors = function (value) { return function (errors) { return ({
    _tag: ErrorStack$,
    errors: errors,
    value: value
}); }; };
var concat = function (stack, error) { return ({
    _tag: ErrorStack$,
    errors: stack.errors.concat(error),
    value: stack.value
}); };
var fold = function (foldValueFn, initValue) { return function (stacks) { return ({
    _tag: ErrorStack$,
    errors: (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_1__.pipe)(stacks, (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.map)(function (s) { return s.errors; }), fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.flatten),
    value: (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_1__.pipe)(stacks, (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.map)(function (s) { return s.value; }), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_0__.reduce)(initValue, foldValueFn))
}); }; };
var value = function (stack) { return stack.value; };
var errors = function (stack) { return stack.errors; };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/error.js":
/*!****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "err": () => (/* binding */ err)
/* harmony export */ });
var err = function (reason) { return ({
    reason: reason,
    error: new Error(reason)
}); };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/export.js":
/*!*****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/export.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "containerToCanvas": () => (/* binding */ containerToCanvas),
/* harmony export */   "containerToSVGBlob": () => (/* binding */ containerToSVGBlob),
/* harmony export */   "containerToPngBlob": () => (/* binding */ containerToPngBlob),
/* harmony export */   "containerToPngDataURL": () => (/* binding */ containerToPngDataURL),
/* harmony export */   "createObjectURL": () => (/* binding */ createObjectURL)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! fp-ts-fluture/es6/Future */ "./node_modules/fp-ts-fluture/es6/Future.js");
/* harmony import */ var fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! fp-ts/es6/Either */ "./node_modules/fp-ts/es6/Either.js");
/* harmony import */ var fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! fp-ts/es6/function */ "./node_modules/fp-ts/es6/function.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ "./node_modules/@gripeless/pico/dist/element.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error */ "./node_modules/@gripeless/pico/dist/error.js");
/* harmony import */ var _future__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future */ "./node_modules/@gripeless/pico/dist/future.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./noop */ "./node_modules/@gripeless/pico/dist/noop.js");









var serializeSVGToDataURL = function ($svg) {
    return 'data:image/svg+xml;charset=utf-8,' +
        window.encodeURIComponent(new XMLSerializer().serializeToString($svg));
};
var canvasToPngBlob = function ($canvas) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (rej, res) {
        try {
            $canvas.toBlob(function (maybeBlob) {
                if (maybeBlob === null) {
                    return rej((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)('Failed to get blob from canvas ' +
                        '(the returned blob is null)'));
                }
                res(maybeBlob);
            }, 'image/png', 1);
        }
        catch (_a) {
            rej((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)('Failed to get blob from canvas ' +
                '(the canvas is most likely tainted)'));
        }
        return _noop__WEBPACK_IMPORTED_MODULE_4__.noop;
    });
};
var canvasToPngDataURL = function ($canvas) {
    try {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_5__.right)($canvas.toDataURL('image/png', 1));
    }
    catch (_a) {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_5__.left)((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)('Failed to get data url from canvas ' +
            '(the canvas is most likely tainted)'));
    }
};
var containerToCanvas = function (container) {
    var scalingRatio = container.parentWindow.window.devicePixelRatio || 1;
    var $canvas = (0,_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(container.parentWindow.document)('canvas', {
        width: container.parentWindow.window.innerWidth *
            scalingRatio,
        height: container.parentWindow.window.innerHeight *
            scalingRatio
    });
    var ctx = $canvas.getContext('2d');
    if (ctx === null) {
        return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.reject)((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)('Failed to obtain 2d canvas context'));
    }
    return (0,_future__WEBPACK_IMPORTED_MODULE_3__.timeout)(2000)((0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (rej, res) {
        var $img = new Image();
        $img.onerror = function () {
            return rej((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)("Failed to load exported <img> onto canvas"));
        };
        $img.onload = function () {
            ctx.setTransform(scalingRatio, 0, 0, scalingRatio, 0, 0);
            ctx.drawImage($img, 0, 0);
            res($canvas);
        };
        $img.src = serializeSVGToDataURL(container.tree.svg);
        return $img.remove;
    }));
};
var dataURLToBlob = function (dataURL) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (rej, res) {
        fetch(dataURL)
            .then(function (x) { return x.blob(); })
            .then(res)
            .catch(function () {
            return rej((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)("Failed to convert dataURL to blob (" + dataURL + ")"));
        });
        return _noop__WEBPACK_IMPORTED_MODULE_4__.noop;
    });
};
var containerToSVGBlob = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_6__.pipe)(serializeSVGToDataURL(container.tree.svg), dataURLToBlob);
};
var containerToPngBlob = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_6__.pipe)(containerToCanvas(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(canvasToPngBlob));
};
var containerToPngDataURL = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_6__.pipe)(containerToCanvas(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)((0,fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_7__.flow)(canvasToPngDataURL, fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__.fromEither)));
};
// Type safe wrapper for URL.createObjectURL. Also because this
// function creates a reference in a global object URL store,
// this function is technically impure.
var createObjectURL = function (object) {
    try {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_5__.right)(URL.createObjectURL(object));
    }
    catch (_a) {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_5__.left)((0,_error__WEBPACK_IMPORTED_MODULE_2__.err)('Failed to create result object URL'));
    }
};


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/future.js":
/*!*****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/future.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeout": () => (/* binding */ timeout)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ "./node_modules/@gripeless/pico/dist/error.js");


var timeout = function (ms) { return function (fl) {
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.race)((0,fluture__WEBPACK_IMPORTED_MODULE_0__.Future)(function (rej) {
        var timeout = setTimeout(function () {
            return rej((0,_error__WEBPACK_IMPORTED_MODULE_1__.err)("Timed out waiting for promise (" + ms + "ms)"));
        }, ms);
        return function () { return clearTimeout(timeout); };
    }))(fl);
}; };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultOptions": () => (/* binding */ defaultOptions),
/* harmony export */   "objectURLFluture": () => (/* binding */ objectURLFluture),
/* harmony export */   "svgObjectURLFluture": () => (/* binding */ svgObjectURLFluture),
/* harmony export */   "dataURLFluture": () => (/* binding */ dataURLFluture),
/* harmony export */   "objectURL": () => (/* binding */ objectURL),
/* harmony export */   "svgObjectURL": () => (/* binding */ svgObjectURL),
/* harmony export */   "dataURL": () => (/* binding */ dataURL)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! fp-ts-fluture/es6/Future */ "./node_modules/fp-ts-fluture/es6/Future.js");
/* harmony import */ var fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! fp-ts/es6/function */ "./node_modules/fp-ts/es6/function.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");
/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clone */ "./node_modules/@gripeless/pico/dist/clone.js");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./container */ "./node_modules/@gripeless/pico/dist/container.js");
/* harmony import */ var _error_stack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./error-stack */ "./node_modules/@gripeless/pico/dist/error-stack.js");
/* harmony import */ var _export__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./export */ "./node_modules/@gripeless/pico/dist/export.js");
/* harmony import */ var _inline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./inline */ "./node_modules/@gripeless/pico/dist/inline.js");
/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./options */ "./node_modules/@gripeless/pico/dist/options.js");










var defaultOptions = _options__WEBPACK_IMPORTED_MODULE_6__.defaults;
var generateExport = function ($window, options) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)(
    // Create container where we'll store extracted
    // information about the window (which could fail) in
    (0,_container__WEBPACK_IMPORTED_MODULE_2__.createContainer)($window), fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__.fromEither, 
    // Clone existing window data into a container,
    // including filling out <input>'s, copying <canvas>
    // elements, etc.  mapEither(cloneBody),
    (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)((0,_clone__WEBPACK_IMPORTED_MODULE_1__.cloneBody)(options.ignore)), 
    // Inline external stylesheets, images, fonts as data
    // URL's inside of the copied tree
    (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_inline__WEBPACK_IMPORTED_MODULE_5__.inlineExternalResources));
};
var objectURLFluture = function ($window, options) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)(generateExport($window, options), 
    // Export tree into a png object URL and return it
    // together with all accumulated errors
    (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(function (_a) {
        var container = _a.value, errors = _a.errors;
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)((0,_export__WEBPACK_IMPORTED_MODULE_4__.containerToPngBlob)(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)((0,fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_9__.flow)(_export__WEBPACK_IMPORTED_MODULE_4__.createObjectURL, fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__.fromEither)), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (objectURL) {
            return (0,_error_stack__WEBPACK_IMPORTED_MODULE_3__.fromErrors)(objectURL)(errors);
        }));
    }));
};
var svgObjectURLFluture = function ($window, options) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)(generateExport($window, options), 
    // Export tree into a object URL containing SVG data and
    // return it together with all accumulated errors
    (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(function (_a) {
        var container = _a.value, errors = _a.errors;
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)((0,_export__WEBPACK_IMPORTED_MODULE_4__.containerToSVGBlob)(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)((0,fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_9__.flow)(_export__WEBPACK_IMPORTED_MODULE_4__.createObjectURL, fp_ts_fluture_es6_Future__WEBPACK_IMPORTED_MODULE_8__.fromEither)), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (objectURL) {
            return (0,_error_stack__WEBPACK_IMPORTED_MODULE_3__.fromErrors)(objectURL)(errors);
        }));
    }));
};
var dataURLFluture = function ($window, options) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)(generateExport($window, options), 
    // Export tree into a png object URL and return it
    // together with all accumulated errors
    (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(function (_a) {
        var container = _a.value, errors = _a.errors;
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)((0,_export__WEBPACK_IMPORTED_MODULE_4__.containerToPngDataURL)(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (objectURL) {
            return (0,_error_stack__WEBPACK_IMPORTED_MODULE_3__.fromErrors)(objectURL)(errors);
        }));
    }));
};
var promisifyExport = function (fn) { return function ($window, partialOptions) {
    if (partialOptions === void 0) { partialOptions = {}; }
    return new Promise(function (res, rej) {
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_7__.pipe)(fn($window, (0,_options__WEBPACK_IMPORTED_MODULE_6__.normalize)(partialOptions)), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.fork)(function (x) { return rej(x.error); })(res));
    });
}; };
var objectURL = promisifyExport(objectURLFluture);
var svgObjectURL = promisifyExport(svgObjectURLFluture);
var dataURL = promisifyExport(dataURLFluture);


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/inline.js":
/*!*****************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/inline.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inlineExternalResources": () => (/* binding */ inlineExternalResources)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fp-ts/es6/Array */ "./node_modules/fp-ts/es6/Array.js");
/* harmony import */ var fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fp-ts/es6/Either */ "./node_modules/fp-ts/es6/Either.js");
/* harmony import */ var fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! fp-ts/es6/function */ "./node_modules/fp-ts/es6/function.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");
/* harmony import */ var _download__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./download */ "./node_modules/@gripeless/pico/dist/download.js");
/* harmony import */ var _error_stack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error-stack */ "./node_modules/@gripeless/pico/dist/error-stack.js");
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};







var parallelAll = (0,fluture__WEBPACK_IMPORTED_MODULE_0__.parallel)(Infinity);
function isCSSStyleSheet(sheet) {
    return sheet instanceof CSSStyleSheet;
}
// Takes a non-global, non-sticky RegExp object with exactly one capturing
// group
var replaceAllAsync = function (regex, replaceFn) { return function (input) {
    if (regex.global || regex.sticky) {
        throw new TypeError('Only non-global and non-sticky ' +
            "(without the /g or /y flags) regex' can be used");
    }
    var result = regex.exec(input);
    if (result === null) {
        return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty)(input));
    }
    var theWholeMatch = result[0];
    var firstGroup = result[1];
    if (typeof result[1] !== 'string') {
        return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty)(input));
    }
    var start = input.substring(0, result.index);
    var middleF = (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(replaceFn(firstGroup), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.coalesce)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromError)(firstGroup))(_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty));
    var endF = replaceAllAsync(regex, replaceFn)(input.substring(result.index + theWholeMatch.length));
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)((0,fluture__WEBPACK_IMPORTED_MODULE_0__.both)(middleF)(endF), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (_a) {
        var _b = __read(_a, 2), middle = _b[0], end = _b[1];
        return (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromErrors)(start + middle.value + end.value)((0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.flatten)([middle.errors, end.errors]));
    }));
}; };
var processStyleSheetText = function (baseURL) { return function (styleSheetText) {
    var $stylesheetStyle = document.createElement('style');
    $stylesheetStyle.appendChild(document.createTextNode(styleSheetText));
    var $fakeDocument = document.implementation.createHTMLDocument();
    $fakeDocument.head.appendChild($stylesheetStyle);
    var sheet = $stylesheetStyle.sheet;
    if (!(sheet instanceof CSSStyleSheet)) {
        var reason = 'Failed to initialize CSSStyleSheet';
        return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.reject)({
            reason: reason,
            error: new Error(reason)
        });
    }
    return inlineURLsFromCSSRuleList(sheet.cssRules, baseURL);
}; };
var URL_REGEX = /url\(['"]?(.+?)['"]?\)/;
var inlineStyleSheetTextURLs = function (baseURL) {
    return replaceAllAsync(URL_REGEX, function (url) {
        if (url.indexOf('data:') === 0) {
            // Skip data urls
            return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)("url(\"" + url + "\")");
        }
        var absoluteURL = new URL(url, baseURL).toString();
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)((0,_download__WEBPACK_IMPORTED_MODULE_1__.download)(absoluteURL), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.mapRej)(_download__WEBPACK_IMPORTED_MODULE_1__.downloadErrorToDetailedError), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.responseToBlob), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.blobToDataURL), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (dataURL) { return "url(" + dataURL + ")"; }));
    });
};
var inlineURLsFromCSSRule = function (baseURL) { return function (rule) {
    // https://developer.mozilla.org/en-US/docs/Web/CSS/url()
    // "The url() function can be included as a value for background,
    // background-image, list-style, list-style-image, content, cursor,
    // border, border-image, border-image-source, mask, mask-image, src as
    // part of a @font-face block, and @counter-style/symbol"
    if (rule instanceof CSSStyleRule) {
        // We go through only the allowed properties individually rather
        // than doing a single big rule.cssText.replace(blahblah) because
        // there can be special cases like `content`, where a property
        // that's just the url() call should be replaced but when it's a
        // url() call inside of a string it should not which makes using a
        // regex-only solution unreasonable.
        //
        // 1. Find all url() calls from `rule.style[x]`
        // 2. Fetch the resources under the url()'s
        // 3. Replace with base64 fetched contents using
        //    `rule.style.setProperty`
        //
        // Modifying rule.style[x] doesn't actually update the base css
        // text, which is a shame - instead we're going to update the
        // rule.style text and then return cssText, which DOES get updated.
        var rulesThatNeedTheirURLCallsInlined = [
            'background',
            'backgroundImage',
            'listStyle',
            'listStyleImage',
            'content',
            'cursor',
            'border',
            'borderImage',
            'borderImageSource',
            'mask',
            'maskImage'
        ];
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(rulesThatNeedTheirURLCallsInlined.map(function (ruleName) {
            var ruleStyle = rule.style[ruleName];
            if (ruleStyle === '' ||
                ruleStyle === undefined) {
                return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)([]);
            }
            return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(inlineStyleSheetTextURLs(baseURL)(ruleStyle), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (_a) {
                var errors = _a.errors, value = _a.value;
                // fp gods please spare me again
                rule.style[ruleName] = value;
                return errors;
            }));
        }), parallelAll, (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.flatten), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (e) {
            // Needs to be a thunk to let the rule.cssText update
            return (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromErrors)(rule.cssText)(e);
        }));
    }
    else if (rule instanceof CSSFontFaceRule) {
        // Setting `src` in a @font-face declaration is not supported in
        // Firefox, we unfortunately have to replace things manually
        return inlineStyleSheetTextURLs(baseURL)(rule.cssText);
    }
    else if (rule instanceof CSSMediaRule) {
        if (window.matchMedia(rule.media.mediaText).matches) {
            return inlineURLsFromCSSRuleList(rule.cssRules, baseURL);
        }
        else {
            return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty)(''));
        }
    }
    else if (rule instanceof CSSImportRule) {
        // Download the referenced stylesheet recursively
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)((0,_download__WEBPACK_IMPORTED_MODULE_1__.download)(rule.href), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.mapRej)(_download__WEBPACK_IMPORTED_MODULE_1__.downloadErrorToDetailedError), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.responseToText), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(processStyleSheetText(rule.href)));
    }
    else if (rule instanceof CSSPageRule) {
        // Library is not used in print contexts - safe to ignore.
        return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty)(rule.cssText));
    }
    return (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.empty)(rule.cssText));
}; };
var inlineURLsFromCSSRuleList = function (cssRules, baseURL) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(Array.from(cssRules), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)(inlineURLsFromCSSRule(baseURL)), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)((0,fluture__WEBPACK_IMPORTED_MODULE_0__.coalesce)(function (x) {
        return (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromErrors)('')([x]);
    })(fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_5__.identity)), parallelAll, (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fold)(function (a, b) { return a + "\n" + b; }, '')));
};
// Cross-origin stylesheets cannot be read from directly, download any
// stylesheet that's not inline.
var extractStylesFromCSSStyleSheet = function (baseURL) { return function (styleSheet) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(styleSheet.href
        ? (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)((0,_download__WEBPACK_IMPORTED_MODULE_1__.download)(styleSheet.href), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.mapRej)(_download__WEBPACK_IMPORTED_MODULE_1__.downloadErrorToDetailedError), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.responseToText))
        : (0,fluture__WEBPACK_IMPORTED_MODULE_0__.resolve)(Array.from(styleSheet.cssRules)
            .map(function (rule) { return rule.cssText; })
            .join('\n')), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(processStyleSheetText(styleSheet.href || baseURL)));
}; };
var extractStylesFromStyleSheets = function (styleSheets, baseURL) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(Array.from(styleSheets), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.filter)(isCSSStyleSheet), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)(extractStylesFromCSSStyleSheet(baseURL)), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)((0,fluture__WEBPACK_IMPORTED_MODULE_0__.coalesce)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromError)(''))(fp_ts_es6_function__WEBPACK_IMPORTED_MODULE_5__.identity)), parallelAll);
};
var inlineExternalStylesheets = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(extractStylesFromStyleSheets(container.parentWindow.document.styleSheets, container.parentWindow.window.location.href), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (stacks) {
        var e_1, _a;
        try {
            for (var _b = __values((0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(stacks, (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)(_error_stack__WEBPACK_IMPORTED_MODULE_2__.value))), _c = _b.next(); !_c.done; _c = _b.next()) {
                var styleContents = _c.value;
                var $style = container.parentWindow.document.createElement('style');
                $style.appendChild(container.parentWindow.document.createTextNode(styleContents));
                container.tree.head.appendChild($style);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var errors = (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(stacks, (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)(_error_stack__WEBPACK_IMPORTED_MODULE_2__.errors), fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.flatten);
        return (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromErrors)(container)(errors);
    }));
};
// Inline all images on the page (improvement: can only
// inline *visible* images for potentially less network
// strain if cache doesn't work)
var inlineImages = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(Array.from(container.tree.html.querySelectorAll('img')), (0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.map)(function ($image) {
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)((0,_download__WEBPACK_IMPORTED_MODULE_1__.download)($image.src), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.mapRej)(_download__WEBPACK_IMPORTED_MODULE_1__.downloadErrorToDetailedError), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.responseToBlob), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(_download__WEBPACK_IMPORTED_MODULE_1__.blobToDataURL), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (dataURL) {
            // please don't hurt me fp gods
            $image.src = dataURL;
            return dataURL;
        }), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.coalesce)(fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_6__.left)(fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_6__.right));
    }), parallelAll, (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromEithers)(container)));
};
var inlineExternalResources = function (container) {
    return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(inlineImages(container), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.chain)(function (stack) {
        // Improvement: `errorStack.chain`
        return (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_3__.pipe)(inlineExternalStylesheets((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.value)(stack)), (0,fluture__WEBPACK_IMPORTED_MODULE_0__.map)(function (secondStack) {
            return (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.fromErrors)((0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.value)(secondStack))((0,fp_ts_es6_Array__WEBPACK_IMPORTED_MODULE_4__.flatten)([
                (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.errors)(stack),
                (0,_error_stack__WEBPACK_IMPORTED_MODULE_2__.errors)(secondStack)
            ]));
        }));
    }));
};


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/noop.js":
/*!***************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/noop.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "noop": () => (/* binding */ noop)
/* harmony export */ });
var noop = function () { };


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/options.js":
/*!******************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/options.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaults": () => (/* binding */ defaults),
/* harmony export */   "normalize": () => (/* binding */ normalize)
/* harmony export */ });
var defaults = {
    ignore: []
};
var normalize = function (options) {
    return Object.assign({}, defaults, options);
};


/***/ }),

/***/ "./node_modules/@gripeless/pico/dist/window-info.js":
/*!**********************************************************!*\
  !*** ./node_modules/@gripeless/pico/dist/window-info.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getWindowInfo": () => (/* binding */ getWindowInfo)
/* harmony export */ });
/* harmony import */ var fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fp-ts/es6/Either */ "./node_modules/fp-ts/es6/Either.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "./node_modules/@gripeless/pico/dist/error.js");


var getWindowInfo = function ($window) {
    var $document = $window.document;
    var $head = $document.head;
    var $body = $document.body;
    var $html = $document.querySelector('html');
    if (!($html instanceof HTMLHtmlElement)) {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__.left)((0,_error__WEBPACK_IMPORTED_MODULE_0__.err)('Failed to get HTMLHtmlElement'));
    }
    if (!($body instanceof HTMLBodyElement)) {
        return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__.left)((0,_error__WEBPACK_IMPORTED_MODULE_0__.err)('Failed to get HTMLBodyElement'));
    }
    // const $canvas = $document.createElement('canvas')
    // const ctx = $canvas.getContext('2d')
    // const $iframe = $document.createElement('iframe')
    // const $svg = $document.createElementNS(svgNS, 'svg')
    return (0,fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__.right)({
        window: $window,
        document: $document,
        html: $html,
        head: $head,
        body: $body
    });
};


/***/ }),

/***/ "./node_modules/fluture/index.js":
/*!***************************************!*\
  !*** ./node_modules/fluture/index.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.Future),
/* harmony export */   "Future": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.Future),
/* harmony export */   "isFuture": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.isFuture),
/* harmony export */   "isNever": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.isNever),
/* harmony export */   "never": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.never),
/* harmony export */   "reject": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.reject),
/* harmony export */   "resolve": () => (/* reexport safe */ _src_future_js__WEBPACK_IMPORTED_MODULE_0__.resolve),
/* harmony export */   "after": () => (/* reexport safe */ _src_after_js__WEBPACK_IMPORTED_MODULE_1__.after),
/* harmony export */   "alt": () => (/* reexport safe */ _src_alt_js__WEBPACK_IMPORTED_MODULE_2__.alt),
/* harmony export */   "and": () => (/* reexport safe */ _src_and_js__WEBPACK_IMPORTED_MODULE_3__.and),
/* harmony export */   "ap": () => (/* reexport safe */ _src_ap_js__WEBPACK_IMPORTED_MODULE_4__.ap),
/* harmony export */   "attemptP": () => (/* reexport safe */ _src_attempt_p_js__WEBPACK_IMPORTED_MODULE_5__.attemptP),
/* harmony export */   "attempt": () => (/* reexport safe */ _src_attempt_js__WEBPACK_IMPORTED_MODULE_6__.attempt),
/* harmony export */   "bimap": () => (/* reexport safe */ _src_bimap_js__WEBPACK_IMPORTED_MODULE_7__.bimap),
/* harmony export */   "bichain": () => (/* reexport safe */ _src_bichain_js__WEBPACK_IMPORTED_MODULE_8__.bichain),
/* harmony export */   "both": () => (/* reexport safe */ _src_both_js__WEBPACK_IMPORTED_MODULE_9__.both),
/* harmony export */   "cache": () => (/* reexport safe */ _src_cache_js__WEBPACK_IMPORTED_MODULE_10__.cache),
/* harmony export */   "chainRej": () => (/* reexport safe */ _src_chain_rej_js__WEBPACK_IMPORTED_MODULE_11__.chainRej),
/* harmony export */   "chain": () => (/* reexport safe */ _src_chain_js__WEBPACK_IMPORTED_MODULE_12__.chain),
/* harmony export */   "done": () => (/* reexport safe */ _src_done_js__WEBPACK_IMPORTED_MODULE_13__.done),
/* harmony export */   "encaseP": () => (/* reexport safe */ _src_encase_p_js__WEBPACK_IMPORTED_MODULE_14__.encaseP),
/* harmony export */   "encase": () => (/* reexport safe */ _src_encase_js__WEBPACK_IMPORTED_MODULE_15__.encase),
/* harmony export */   "extractLeft": () => (/* reexport safe */ _src_extract_left_js__WEBPACK_IMPORTED_MODULE_16__.extractLeft),
/* harmony export */   "extractRight": () => (/* reexport safe */ _src_extract_right_js__WEBPACK_IMPORTED_MODULE_17__.extractRight),
/* harmony export */   "coalesce": () => (/* reexport safe */ _src_coalesce_js__WEBPACK_IMPORTED_MODULE_18__.coalesce),
/* harmony export */   "forkCatch": () => (/* reexport safe */ _src_fork_catch_js__WEBPACK_IMPORTED_MODULE_19__.forkCatch),
/* harmony export */   "fork": () => (/* reexport safe */ _src_fork_js__WEBPACK_IMPORTED_MODULE_20__.fork),
/* harmony export */   "go": () => (/* reexport safe */ _src_go_js__WEBPACK_IMPORTED_MODULE_21__.go),
/* harmony export */   "hook": () => (/* reexport safe */ _src_hook_js__WEBPACK_IMPORTED_MODULE_22__.hook),
/* harmony export */   "lastly": () => (/* reexport safe */ _src_lastly_js__WEBPACK_IMPORTED_MODULE_23__.lastly),
/* harmony export */   "mapRej": () => (/* reexport safe */ _src_map_rej_js__WEBPACK_IMPORTED_MODULE_24__.mapRej),
/* harmony export */   "map": () => (/* reexport safe */ _src_map_js__WEBPACK_IMPORTED_MODULE_25__.map),
/* harmony export */   "node": () => (/* reexport safe */ _src_node_js__WEBPACK_IMPORTED_MODULE_26__.node),
/* harmony export */   "pap": () => (/* reexport safe */ _src_pap_js__WEBPACK_IMPORTED_MODULE_27__.pap),
/* harmony export */   "parallel": () => (/* reexport safe */ _src_parallel_js__WEBPACK_IMPORTED_MODULE_28__.parallel),
/* harmony export */   "Par": () => (/* reexport safe */ _src_par_js__WEBPACK_IMPORTED_MODULE_29__.Par),
/* harmony export */   "promise": () => (/* reexport safe */ _src_promise_js__WEBPACK_IMPORTED_MODULE_30__.promise),
/* harmony export */   "race": () => (/* reexport safe */ _src_race_js__WEBPACK_IMPORTED_MODULE_31__.race),
/* harmony export */   "rejectAfter": () => (/* reexport safe */ _src_reject_after_js__WEBPACK_IMPORTED_MODULE_32__.rejectAfter),
/* harmony export */   "seq": () => (/* reexport safe */ _src_seq_js__WEBPACK_IMPORTED_MODULE_33__.seq),
/* harmony export */   "swap": () => (/* reexport safe */ _src_swap_js__WEBPACK_IMPORTED_MODULE_34__.swap),
/* harmony export */   "value": () => (/* reexport safe */ _src_value_js__WEBPACK_IMPORTED_MODULE_35__.value),
/* harmony export */   "debugMode": () => (/* reexport safe */ _src_internal_debug_js__WEBPACK_IMPORTED_MODULE_36__.debugMode)
/* harmony export */ });
/* harmony import */ var _src_future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/future.js */ "./node_modules/fluture/src/future.js");
/* harmony import */ var _src_after_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/after.js */ "./node_modules/fluture/src/after.js");
/* harmony import */ var _src_alt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/alt.js */ "./node_modules/fluture/src/alt.js");
/* harmony import */ var _src_and_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/and.js */ "./node_modules/fluture/src/and.js");
/* harmony import */ var _src_ap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/ap.js */ "./node_modules/fluture/src/ap.js");
/* harmony import */ var _src_attempt_p_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/attempt-p.js */ "./node_modules/fluture/src/attempt-p.js");
/* harmony import */ var _src_attempt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/attempt.js */ "./node_modules/fluture/src/attempt.js");
/* harmony import */ var _src_bimap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/bimap.js */ "./node_modules/fluture/src/bimap.js");
/* harmony import */ var _src_bichain_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/bichain.js */ "./node_modules/fluture/src/bichain.js");
/* harmony import */ var _src_both_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/both.js */ "./node_modules/fluture/src/both.js");
/* harmony import */ var _src_cache_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/cache.js */ "./node_modules/fluture/src/cache.js");
/* harmony import */ var _src_chain_rej_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/chain-rej.js */ "./node_modules/fluture/src/chain-rej.js");
/* harmony import */ var _src_chain_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/chain.js */ "./node_modules/fluture/src/chain.js");
/* harmony import */ var _src_done_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/done.js */ "./node_modules/fluture/src/done.js");
/* harmony import */ var _src_encase_p_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/encase-p.js */ "./node_modules/fluture/src/encase-p.js");
/* harmony import */ var _src_encase_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/encase.js */ "./node_modules/fluture/src/encase.js");
/* harmony import */ var _src_extract_left_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/extract-left.js */ "./node_modules/fluture/src/extract-left.js");
/* harmony import */ var _src_extract_right_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/extract-right.js */ "./node_modules/fluture/src/extract-right.js");
/* harmony import */ var _src_coalesce_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/coalesce.js */ "./node_modules/fluture/src/coalesce.js");
/* harmony import */ var _src_fork_catch_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/fork-catch.js */ "./node_modules/fluture/src/fork-catch.js");
/* harmony import */ var _src_fork_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/fork.js */ "./node_modules/fluture/src/fork.js");
/* harmony import */ var _src_go_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/go.js */ "./node_modules/fluture/src/go.js");
/* harmony import */ var _src_hook_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/hook.js */ "./node_modules/fluture/src/hook.js");
/* harmony import */ var _src_lastly_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/lastly.js */ "./node_modules/fluture/src/lastly.js");
/* harmony import */ var _src_map_rej_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/map-rej.js */ "./node_modules/fluture/src/map-rej.js");
/* harmony import */ var _src_map_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/map.js */ "./node_modules/fluture/src/map.js");
/* harmony import */ var _src_node_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/node.js */ "./node_modules/fluture/src/node.js");
/* harmony import */ var _src_pap_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/pap.js */ "./node_modules/fluture/src/pap.js");
/* harmony import */ var _src_parallel_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/parallel.js */ "./node_modules/fluture/src/parallel.js");
/* harmony import */ var _src_par_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/par.js */ "./node_modules/fluture/src/par.js");
/* harmony import */ var _src_promise_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/promise.js */ "./node_modules/fluture/src/promise.js");
/* harmony import */ var _src_race_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/race.js */ "./node_modules/fluture/src/race.js");
/* harmony import */ var _src_reject_after_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/reject-after.js */ "./node_modules/fluture/src/reject-after.js");
/* harmony import */ var _src_seq_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/seq.js */ "./node_modules/fluture/src/seq.js");
/* harmony import */ var _src_swap_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/swap.js */ "./node_modules/fluture/src/swap.js");
/* harmony import */ var _src_value_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/value.js */ "./node_modules/fluture/src/value.js");
/* harmony import */ var _src_internal_debug_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./src/internal/debug.js */ "./node_modules/fluture/src/internal/debug.js");









































/***/ }),

/***/ "./node_modules/fluture/src/after.js":
/*!*******************************************!*\
  !*** ./node_modules/fluture/src/after.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "After": () => (/* binding */ After),
/* harmony export */   "after": () => (/* binding */ after)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


var After = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.createInterpreter)(2, 'after', function After$interpret(rec, rej, res){
  var id = setTimeout(res, this.$1, this.$2);
  return function After$cancel(){ clearTimeout(id) };
});

After.prototype.extractRight = function After$extractRight(){
  return [this.$2];
};

function alwaysNever(_){
  return _future_js__WEBPACK_IMPORTED_MODULE_0__.never;
}

function after(time){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(after, _future_js__WEBPACK_IMPORTED_MODULE_0__.positiveInteger, arguments);
  return time === Infinity ? alwaysNever : (function after(value){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, after, _future_js__WEBPACK_IMPORTED_MODULE_0__.any, arguments, context1);
    return new After(context2, time, value);
  });
}


/***/ }),

/***/ "./node_modules/fluture/src/alt.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/alt.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "alternative": () => (/* binding */ alternative),
/* harmony export */   "alt": () => (/* binding */ alt)
/* harmony export */ });
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





var alternative = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isAlt, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidArgumentOf)('have Alt implemented')};

function alt(left){
  if((0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(left)){
    var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(alt, _future_js__WEBPACK_IMPORTED_MODULE_3__.future, arguments);
    return function alt(right){
      var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, alt, _future_js__WEBPACK_IMPORTED_MODULE_3__.future, arguments, context1);
      return right._transform(new _future_js__WEBPACK_IMPORTED_MODULE_3__.AltTransformation(context2, left));
    };
  }

  var context = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(alt, alternative, arguments);
  return function alt(right){
    (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, alt, alternative, arguments, context);
    return left[_internal_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.alt](right);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/and.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/and.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AndTransformation": () => (/* binding */ AndTransformation),
/* harmony export */   "and": () => (/* binding */ and)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


var AndTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.createTransformation)(1, 'and', {
  resolved: function AndTransformation$resolved(){ return this.$1 }
});

function and(left){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(and, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments);
  return function and(right){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, and, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments, context1);
    return right._transform(new AndTransformation(context2, left));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/ap.js":
/*!****************************************!*\
  !*** ./node_modules/fluture/src/ap.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "apply": () => (/* binding */ apply),
/* harmony export */   "ap": () => (/* binding */ ap)
/* harmony export */ });
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





var apply = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isApply, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidArgumentOf)('have Apply implemented')};

function ap(mx){
  if((0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(mx)){
    var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(ap, _future_js__WEBPACK_IMPORTED_MODULE_3__.future, arguments);
    return function ap(mf){
      var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, ap, _future_js__WEBPACK_IMPORTED_MODULE_3__.future, arguments, context1);
      return mf._transform(new _future_js__WEBPACK_IMPORTED_MODULE_3__.ApTransformation(context2, mx));
    };
  }

  var context = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(ap, apply, arguments);
  return function ap(mf){
    (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, ap, apply, arguments, context);
    return mx[_internal_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.ap](mf);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/attempt-p.js":
/*!***********************************************!*\
  !*** ./node_modules/fluture/src/attempt-p.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attemptP": () => (/* binding */ attemptP)
/* harmony export */ });
/* harmony import */ var _encase_p_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encase-p.js */ "./node_modules/fluture/src/encase-p.js");


function attemptP(_){
  return _encase_p_js__WEBPACK_IMPORTED_MODULE_0__.encaseP.apply(this, arguments)(undefined);
}


/***/ }),

/***/ "./node_modules/fluture/src/attempt.js":
/*!*********************************************!*\
  !*** ./node_modules/fluture/src/attempt.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attempt": () => (/* binding */ attempt)
/* harmony export */ });
/* harmony import */ var _encase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encase.js */ "./node_modules/fluture/src/encase.js");


function attempt(_){
  return _encase_js__WEBPACK_IMPORTED_MODULE_0__.encase.apply(this, arguments)(undefined);
}


/***/ }),

/***/ "./node_modules/fluture/src/bichain.js":
/*!*********************************************!*\
  !*** ./node_modules/fluture/src/bichain.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BichainTransformation": () => (/* binding */ BichainTransformation),
/* harmony export */   "bichain": () => (/* binding */ bichain)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");



var BichainTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.createTransformation)(2, 'bichain', {
  rejected: function BichainTransformation$rejected(x){ return (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.call)(this.$1, x) },
  resolved: function BichainTransformation$resolved(x){ return (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.call)(this.$2, x) }
});

function bichain(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(bichain, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments);
  return function bichain(g){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, bichain, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments, context1);
    return function bichain(m){
      var context3 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(3, bichain, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments, context2);
      return m._transform(new BichainTransformation(context3, f, g));
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/bimap.js":
/*!*******************************************!*\
  !*** ./node_modules/fluture/src/bimap.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bifunctor": () => (/* binding */ bifunctor),
/* harmony export */   "bimap": () => (/* binding */ bimap)
/* harmony export */ });
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





var bifunctor = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isBifunctor, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidArgumentOf)('have Bifunctor implemented')};

function bimap(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(bimap, _future_js__WEBPACK_IMPORTED_MODULE_3__.func, arguments);
  return function bimap(g){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, bimap, _future_js__WEBPACK_IMPORTED_MODULE_3__.func, arguments, context1);
    return function bimap(m){
      var context3 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(3, bimap, bifunctor, arguments, context2);
      return (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(m) ?
             m._transform(new _future_js__WEBPACK_IMPORTED_MODULE_3__.BimapTransformation(context3, f, g)) :
             m[_internal_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.bimap](f, g);
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/both.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/both.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PairTransformation": () => (/* binding */ PairTransformation),
/* harmony export */   "BothTransformation": () => (/* binding */ BothTransformation),
/* harmony export */   "both": () => (/* binding */ both)
/* harmony export */ });
/* harmony import */ var _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/parallel.js */ "./node_modules/fluture/src/internal/parallel.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");




var PairTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.createTransformation)(1, 'pair', {
  resolved: function PairTransformation$resolved(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_2__.Resolve(this.context, [x, this.$1]);
  }
});

var BothTransformation =
(0,_internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.createParallelTransformation)('both', _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyCrash, _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyReject, _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop, {
  resolved: function BothTransformation$resolved(x){
    return this.$1._transform(new PairTransformation(this.context, x));
  }
});

function both(left){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application1)(both, _future_js__WEBPACK_IMPORTED_MODULE_2__.future, arguments);
  return function both(right){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application)(2, both, _future_js__WEBPACK_IMPORTED_MODULE_2__.future, arguments, context1);
    return right._transform(new BothTransformation(context2, left));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/cache.js":
/*!*******************************************!*\
  !*** ./node_modules/fluture/src/cache.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cold": () => (/* binding */ Cold),
/* harmony export */   "Pending": () => (/* binding */ Pending),
/* harmony export */   "Crashed": () => (/* binding */ Crashed),
/* harmony export */   "Rejected": () => (/* binding */ Rejected),
/* harmony export */   "Resolved": () => (/* binding */ Resolved),
/* harmony export */   "Queued": () => (/* binding */ Queued),
/* harmony export */   "Cache": () => (/* binding */ Cache),
/* harmony export */   "cache": () => (/* binding */ cache)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var Cold = 0;
var Pending = 1;
var Crashed = 2;
var Rejected = 3;
var Resolved = 4;

function Queued(rec, rej, res){
  this[Crashed] = rec;
  this[Rejected] = rej;
  this[Resolved] = res;
}

var Cache = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createInterpreter)(1, 'cache', function Cache$interpret(rec, rej, res){
  var cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;

  switch(this._state){
    /* c8 ignore next 4 */
    case Pending: cancel = this._addToQueue(rec, rej, res); break;
    case Crashed: rec(this._value); break;
    case Rejected: rej(this._value); break;
    case Resolved: res(this._value); break;
    default:
      this._queue = [];
      cancel = this._addToQueue(rec, rej, res);
      this.run();
  }

  return cancel;
});

Cache.prototype._cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
Cache.prototype._queue = null;
Cache.prototype._queued = 0;
Cache.prototype._value = undefined;
Cache.prototype._state = Cold;

Cache.prototype.extractLeft = function Cache$extractLeft(){
  return this._state === Rejected ? [this._value] : [];
};

Cache.prototype.extractRight = function Cache$extractRight(){
  return this._state === Resolved ? [this._value] : [];
};

Cache.prototype._addToQueue = function Cache$addToQueue(rec, rej, res){
  var _this = this;
  if(_this._state > Pending) return _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  var i = _this._queue.push(new Queued(rec, rej, res)) - 1;
  _this._queued = _this._queued + 1;

  return function Cache$removeFromQueue(){
    if(_this._state > Pending) return;
    _this._queue[i] = undefined;
    _this._queued = _this._queued - 1;
    if(_this._queued === 0) _this.reset();
  };
};

Cache.prototype._drainQueue = function Cache$drainQueue(){
  if(this._state <= Pending) return;
  if(this._queued === 0) return;
  var queue = this._queue;
  var length = queue.length;
  var state = this._state;
  var value = this._value;

  for(var i = 0; i < length; i++){
    queue[i] && queue[i][state](value);
    queue[i] = undefined;
  }

  this._queue = undefined;
  this._queued = 0;
};

Cache.prototype.crash = function Cache$crash(error){
  if(this._state > Pending) return;
  this._value = error;
  this._state = Crashed;
  this._drainQueue();
};

Cache.prototype.reject = function Cache$reject(reason){
  if(this._state > Pending) return;
  this._value = reason;
  this._state = Rejected;
  this._drainQueue();
};

Cache.prototype.resolve = function Cache$resolve(value){
  if(this._state > Pending) return;
  this._value = value;
  this._state = Resolved;
  this._drainQueue();
};

Cache.prototype.run = function Cache$run(){
  var _this = this;
  if(_this._state > Cold) return;
  _this._state = Pending;
  _this._cancel = _this.$1._interpret(
    function Cache$fork$rec(x){ _this.crash(x) },
    function Cache$fork$rej(x){ _this.reject(x) },
    function Cache$fork$res(x){ _this.resolve(x) }
  );
};

Cache.prototype.reset = function Cache$reset(){
  if(this._state === Cold) return;
  if(this._state === Pending) this._cancel();
  this._cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  this._queue = [];
  this._queued = 0;
  this._value = undefined;
  this._state = Cold;
};

function cache(m){
  return new Cache((0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(cache, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments), m);
}


/***/ }),

/***/ "./node_modules/fluture/src/chain-rej.js":
/*!***********************************************!*\
  !*** ./node_modules/fluture/src/chain-rej.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChainRejTransformation": () => (/* binding */ ChainRejTransformation),
/* harmony export */   "chainRej": () => (/* binding */ chainRej)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var ChainRejTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createTransformation)(1, 'chainRej', {
  rejected: function ChainRejTransformation$rejected(x){ return (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.call)(this.$1, x) }
});

function chainRej(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(chainRej, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments);
  return function chainRej(m){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, chainRej, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context1);
    return m._transform(new ChainRejTransformation(context2, f));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/chain.js":
/*!*******************************************!*\
  !*** ./node_modules/fluture/src/chain.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "monad": () => (/* binding */ monad),
/* harmony export */   "chain": () => (/* binding */ chain)
/* harmony export */ });
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





var monad = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isChain, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidArgumentOf)('have Chain implemented')};

function chain(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(chain, _future_js__WEBPACK_IMPORTED_MODULE_3__.func, arguments);
  return function chain(m){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, chain, monad, arguments, context1);
    return (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(m) ?
           m._transform(new _future_js__WEBPACK_IMPORTED_MODULE_3__.ChainTransformation(context2, f)) :
           m[_internal_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.chain](f);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/coalesce.js":
/*!**********************************************!*\
  !*** ./node_modules/fluture/src/coalesce.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CoalesceTransformation": () => (/* binding */ CoalesceTransformation),
/* harmony export */   "coalesce": () => (/* binding */ coalesce)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var CoalesceTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createTransformation)(2, 'coalesce', {
  rejected: function CoalesceTransformation$rejected(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_1__.Resolve(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.call)(this.$1, x));
  },
  resolved: function CoalesceTransformation$resolved(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_1__.Resolve(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.call)(this.$2, x));
  }
});

function coalesce(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(coalesce, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments);
  return function coalesce(g){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, coalesce, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments, context1);
    return function coalesce(m){
      var context3 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(3, coalesce, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context2);
      return m._transform(new CoalesceTransformation(context3, f, g));
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/done.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/done.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "done": () => (/* binding */ done)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");



function done(callback){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(done, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments);
  function done$res(x){
    callback(null, x);
  }
  return function done(m){
    (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, done, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments, context1);
    return m._interpret(_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.raise, callback, done$res);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/encase-p.js":
/*!**********************************************!*\
  !*** ./node_modules/fluture/src/encase-p.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EncaseP": () => (/* binding */ EncaseP),
/* harmony export */   "encaseP": () => (/* binding */ encaseP)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





function invalidPromise(p, f, a){
  return (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.typeError)(
    'encaseP() expects the function it\'s given to return a Promise/Thenable'
    + '\n  Actual: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.show)(p) + '\n  From calling: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.show)(f)
    + '\n  With: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.show)(a)
  );
}

var EncaseP = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.createInterpreter)(2, 'encaseP', function EncaseP$interpret(rec, rej, res){
  var open = true, fn = this.$1, arg = this.$2, p;
  try{
    p = fn(arg);
  }catch(e){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.wrapException)(e, this));
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
  }
  if(!(0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_1__.isThenable)(p)){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.wrapException)(invalidPromise(p, fn, arg), this));
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
  }
  p.then(function EncaseP$res(x){
    if(open){
      open = false;
      res(x);
    }
  }, function EncaseP$rej(x){
    if(open){
      open = false;
      rej(x);
    }
  });
  return function EncaseP$cancel(){ open = false };
});

function encaseP(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(encaseP, _future_js__WEBPACK_IMPORTED_MODULE_3__.func, arguments);
  return function encaseP(x){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, encaseP, _future_js__WEBPACK_IMPORTED_MODULE_3__.any, arguments, context1);
    return new EncaseP(context2, f, x);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/encase.js":
/*!********************************************!*\
  !*** ./node_modules/fluture/src/encase.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Encase": () => (/* binding */ Encase),
/* harmony export */   "encase": () => (/* binding */ encase)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var Encase = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createInterpreter)(2, 'encase', function Encase$interpret(rec, rej, res){
  var fn = this.$1, r;
  try{ r = fn(this.$2) }catch(e){ rej(e); return _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop }
  res(r);
  return _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
});

function encase(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(encase, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments);
  return function encase(x){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, encase, _future_js__WEBPACK_IMPORTED_MODULE_1__.any, arguments, context1);
    return new Encase(context2, f, x);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/extract-left.js":
/*!**************************************************!*\
  !*** ./node_modules/fluture/src/extract-left.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractLeft": () => (/* binding */ extractLeft)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


function extractLeft(m){
  (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(extractLeft, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments);
  return m.extractLeft();
}


/***/ }),

/***/ "./node_modules/fluture/src/extract-right.js":
/*!***************************************************!*\
  !*** ./node_modules/fluture/src/extract-right.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractRight": () => (/* binding */ extractRight)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


function extractRight(m){
  (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(extractRight, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments);
  return m.extractRight();
}


/***/ }),

/***/ "./node_modules/fluture/src/fork-catch.js":
/*!************************************************!*\
  !*** ./node_modules/fluture/src/fork-catch.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "forkCatch": () => (/* binding */ forkCatch)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


function forkCatch(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(forkCatch, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments);
  return function forkCatch(g){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, forkCatch, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments, context1);
    return function forkCatch(h){
      var context3 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(3, forkCatch, _future_js__WEBPACK_IMPORTED_MODULE_0__.func, arguments, context2);
      return function forkCatch(m){
        (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(4, forkCatch, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments, context3);
        return m._interpret(f, g, h);
      };
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/fork.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/fork.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fork": () => (/* binding */ fork)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



function fork(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(fork, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments);
  return function fork(g){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, fork, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments, context1);
    return function fork(m){
      (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(3, fork, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context2);
      return m._interpret(_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.raise, f, g);
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/future.js":
/*!********************************************!*\
  !*** ./node_modules/fluture/src/future.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "any": () => (/* binding */ any),
/* harmony export */   "func": () => (/* binding */ func),
/* harmony export */   "future": () => (/* binding */ future),
/* harmony export */   "positiveInteger": () => (/* binding */ positiveInteger),
/* harmony export */   "application": () => (/* binding */ application),
/* harmony export */   "application1": () => (/* binding */ application1),
/* harmony export */   "Future": () => (/* binding */ Future),
/* harmony export */   "isFuture": () => (/* binding */ isFuture),
/* harmony export */   "createInterpreter": () => (/* binding */ createInterpreter),
/* harmony export */   "Computation": () => (/* binding */ Computation),
/* harmony export */   "Never": () => (/* binding */ Never),
/* harmony export */   "never": () => (/* binding */ never),
/* harmony export */   "isNever": () => (/* binding */ isNever),
/* harmony export */   "Crash": () => (/* binding */ Crash),
/* harmony export */   "crash": () => (/* binding */ crash),
/* harmony export */   "Reject": () => (/* binding */ Reject),
/* harmony export */   "reject": () => (/* binding */ reject),
/* harmony export */   "Resolve": () => (/* binding */ Resolve),
/* harmony export */   "resolve": () => (/* binding */ resolve),
/* harmony export */   "chainRec": () => (/* binding */ chainRec),
/* harmony export */   "Transformer": () => (/* binding */ Transformer),
/* harmony export */   "BaseTransformation": () => (/* binding */ BaseTransformation),
/* harmony export */   "createTransformation": () => (/* binding */ createTransformation),
/* harmony export */   "ApTransformation": () => (/* binding */ ApTransformation),
/* harmony export */   "AltTransformation": () => (/* binding */ AltTransformation),
/* harmony export */   "MapTransformation": () => (/* binding */ MapTransformation),
/* harmony export */   "BimapTransformation": () => (/* binding */ BimapTransformation),
/* harmony export */   "ChainTransformation": () => (/* binding */ ChainTransformation)
/* harmony export */ });
/* harmony import */ var sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sanctuary-type-identifiers */ "./node_modules/sanctuary-type-identifiers/index.js");
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_debug_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/debug.js */ "./node_modules/fluture/src/internal/debug.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_iteration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/iteration.js */ "./node_modules/fluture/src/internal/iteration.js");
/* harmony import */ var _internal_list_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/list.js */ "./node_modules/fluture/src/internal/list.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/*eslint no-cond-assign:0, no-constant-condition:0 */










function alwaysTrue(){
  return true;
}

function getArgs(it){
  var args = new Array(it.arity);
  for(var i = 1; i <= it.arity; i++){
    args[i - 1] = it['$' + String(i)];
  }
  return args;
}

function showArg(arg){
  return ' (' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.show)(arg) + ')';
}

var any = {pred: alwaysTrue, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidArgumentOf)('be anything')};
var func = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__.isFunction, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidArgumentOf)('be a Function')};
var future = {pred: isFuture, error: _internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidFutureArgument};
var positiveInteger = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__.isUnsigned, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidArgumentOf)('be a positive Integer')};

function application(n, f, type, args, prev){
  if(args.length < 2 && type.pred(args[0])) return (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureApplicationContext)(prev, n, f);
  var e = args.length > 1 ? (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidArity)(f, args) : type.error(f.name, n - 1, args[0]);
  (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureStackTrace)(e, f);
  throw (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.withExtraContext)(e, prev);
}

function application1(f, type, args){
  return application(1, f, type, args, _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil);
}

function Future(computation){
  var context = application1(Future, func, arguments);
  return new Computation(context, computation);
}

function isFuture(x){
  return x instanceof Future || sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_0__(x) === _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.$$type;
}

// Compliance with sanctuary-type-identifiers versions 1 and 2.
// To prevent sanctuary-type-identifiers version 3 from identifying 'Future'
// as being of the type denoted by $$type, we ensure that
// Future.constructor.prototype is equal to Future.
Future['@@type'] = _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.$$type;
Future.constructor = {prototype: Future};

Future[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.of] = resolve;
Future[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.chainRec] = chainRec;

Future.prototype['@@type'] = _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.$$type;

Future.prototype['@@show'] = function Future$show(){
  return this.toString();
};

Future.prototype.pipe = function Future$pipe(f){
  if(!(0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__.isFunction)(f)) throw (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidArgument)('Future#pipe', 0, 'be a Function', f);
  return f(this);
};

Future.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.ap] = function Future$FL$ap(other){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureContext)(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, 'a Fantasy Land dispatch to ap', Future$FL$ap);
  return other._transform(new ApTransformation(context, this));
};

Future.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.map] = function Future$FL$map(mapper){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureContext)(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, 'a Fantasy Land dispatch to map', Future$FL$map);
  return this._transform(new MapTransformation(context, mapper));
};

Future.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.bimap] = function Future$FL$bimap(lmapper, rmapper){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureContext)(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, 'a Fantasy Land dispatch to bimap', Future$FL$bimap);
  return this._transform(new BimapTransformation(context, lmapper, rmapper));
};

Future.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.chain] = function Future$FL$chain(mapper){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureContext)(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, 'a Fantasy Land dispatch to chain', Future$FL$chain);
  return this._transform(new ChainTransformation(context, mapper));
};

Future.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.alt] = function Future$FL$alt(other){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_2__.captureContext)(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, 'a Fantasy Land dispatch to alt', Future$FL$alt);
  return this._transform(new AltTransformation(context, other));
};

Future.prototype.extractLeft = function Future$extractLeft(){
  return [];
};

Future.prototype.extractRight = function Future$extractRight(){
  return [];
};

Future.prototype._transform = function Future$transform(transformation){
  return new Transformer(transformation.context, this, (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.cons)(transformation, _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil));
};

Future.prototype.isTransformer = false;
Future.prototype.context = _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil;
Future.prototype.arity = 0;
Future.prototype.name = 'future';

Future.prototype.toString = function Future$toString(){
  return this.name + getArgs(this).map(showArg).join('');
};

Future.prototype.toJSON = function Future$toJSON(){
  return {$: _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.$$type, kind: 'interpreter', type: this.name, args: getArgs(this)};
};

function createInterpreter(arity, name, interpret){
  var Interpreter = function(context, $1, $2, $3){
    this.context = context;
    this.$1 = $1;
    this.$2 = $2;
    this.$3 = $3;
  };

  Interpreter.prototype = Object.create(Future.prototype);
  Interpreter.prototype.arity = arity;
  Interpreter.prototype.name = name;
  Interpreter.prototype._interpret = interpret;

  return Interpreter;
}

var Computation =
createInterpreter(1, 'Future', function Computation$interpret(rec, rej, res){
  var computation = this.$1, open = false, cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop, cont = function(){ open = true };
  try{
    cancel = computation(function Computation$rej(x){
      cont = function Computation$rej$cont(){
        open = false;
        rej(x);
      };
      if(open){
        cont();
      }
    }, function Computation$res(x){
      cont = function Computation$res$cont(){
        open = false;
        res(x);
      };
      if(open){
        cont();
      }
    });
  }catch(e){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.wrapException)(e, this));
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
  }
  if(!((0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__.isFunction)(cancel) && cancel.length === 0)){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.wrapException)((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.typeError)(
      'The computation was expected to return a nullary cancellation function\n' +
      '  Actual: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.show)(cancel)
    ), this));
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
  }
  cont();
  return function Computation$cancel(){
    if(open){
      open = false;
      cancel && cancel();
    }
  };
});

var Never = createInterpreter(0, 'never', function Never$interpret(){
  return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
});

Never.prototype._isNever = true;

var never = new Never(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil);

function isNever(x){
  return isFuture(x) && x._isNever === true;
}

var Crash = createInterpreter(1, 'crash', function Crash$interpret(rec){
  rec(this.$1);
  return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
});

function crash(x){
  return new Crash(application1(crash, any, arguments), x);
}

var Reject = createInterpreter(1, 'reject', function Reject$interpret(rec, rej){
  rej(this.$1);
  return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
});

Reject.prototype.extractLeft = function Reject$extractLeft(){
  return [this.$1];
};

function reject(x){
  return new Reject(application1(reject, any, arguments), x);
}

var Resolve = createInterpreter(1, 'resolve', function Resolve$interpret(rec, rej, res){
  res(this.$1);
  return _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;
});

Resolve.prototype.extractRight = function Resolve$extractRight(){
  return [this.$1];
};

function resolve(x){
  return new Resolve(application1(resolve, any, arguments), x);
}

//Note: This function is not curried because it's only used to satisfy the
//      Fantasy Land ChainRec specification.
function chainRec(step, init){
  return resolve((0,_internal_iteration_js__WEBPACK_IMPORTED_MODULE_4__.Next)(init))._transform(new ChainTransformation(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, function chainRec$recur(o){
    return o.done ?
           resolve(o.value) :
           step(_internal_iteration_js__WEBPACK_IMPORTED_MODULE_4__.Next, _internal_iteration_js__WEBPACK_IMPORTED_MODULE_4__.Done, o.value)._transform(new ChainTransformation(_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, chainRec$recur));
  }));
}

var Transformer =
createInterpreter(2, 'transform', function Transformer$interpret(rec, rej, res){

  //These are the cold, and hot, transformation stacks. The cold actions are those that
  //have yet to run parallel computations, and hot are those that have.
  var cold = _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil, hot = _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil;

  //These combined variables define our current state.
  // future         = the future we are currently forking
  // transformation = the transformation to be informed when the future settles
  // cancel         = the cancel function of the current future
  // settled        = a boolean indicating whether a new tick should start
  // async          = a boolean indicating whether we are awaiting a result asynchronously
  var future, transformation, cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop, settled, async = true, it;

  //Takes a transformation from the top of the hot stack and returns it.
  function nextHot(){
    var x = hot.head;
    hot = hot.tail;
    return x;
  }

  //Takes a transformation from the top of the cold stack and returns it.
  function nextCold(){
    var x = cold.head;
    cold = cold.tail;
    return x;
  }

  //This function is called with a future to use in the next tick.
  //Here we "flatten" the actions of another Sequence into our own actions,
  //this is the magic that allows for infinitely stack safe recursion because
  //actions like ChainAction will return a new Sequence.
  //If we settled asynchronously, we call drain() directly to run the next tick.
  function settle(m){
    settled = true;
    future = m;
    if(future.isTransformer){
      var tail = future.$2;
      while(!(0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.isNil)(tail)){
        cold = (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.cons)(tail.head, cold);
        tail = tail.tail;
      }
      future = future.$1;
    }
    if(async) drain();
  }

  //This function serves as a rejection handler for our current future.
  //It will tell the current transformation that the future rejected, and it will
  //settle the current tick with the transformation's answer to that.
  function rejected(x){
    settle(transformation.rejected(x));
  }

  //This function serves as a resolution handler for our current future.
  //It will tell the current transformation that the future resolved, and it will
  //settle the current tick with the transformation's answer to that.
  function resolved(x){
    settle(transformation.resolved(x));
  }

  //This function is passed into actions when they are "warmed up".
  //If the transformation decides that it has its result, without the need to await
  //anything else, then it can call this function to force "early termination".
  //When early termination occurs, all actions which were stacked prior to the
  //terminator will be skipped. If they were already hot, they will also be
  //sent a cancel signal so they can cancel their own concurrent computations,
  //as their results are no longer needed.
  function early(m, terminator){
    cancel();
    cold = _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil;
    if(async && transformation !== terminator){
      transformation.cancel();
      while((it = nextHot()) && it !== terminator) it.cancel();
    }
    settle(m);
  }

  //This will cancel the current Future, the current transformation, and all stacked hot actions.
  function Sequence$cancel(){
    cancel();
    transformation && transformation.cancel();
    while(it = nextHot()) it.cancel();
  }

  //This function is called when an exception is caught.
  function exception(e){
    Sequence$cancel();
    settled = true;
    cold = hot = _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil;
    var error = (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.wrapException)(e, future);
    future = never;
    rec(error);
  }

  //This function serves to kickstart concurrent computations.
  //Takes all actions from the cold stack in reverse order, and calls run() on
  //each of them, passing them the "early" function. If any of them settles (by
  //calling early()), we abort. After warming up all actions in the cold queue,
  //we warm up the current transformation as well.
  function warmupActions(){
    cold = (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.reverse)(cold);
    while(cold !== _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil){
      it = cold.head.run(early);
      if(settled) return;
      hot = (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.cons)(it, hot);
      cold = cold.tail;
    }
    transformation = transformation.run(early);
  }

  //This function represents our main execution loop. By "tick", we've been
  //referring to the execution of one iteration in the while-loop below.
  function drain(){
    async = false;
    while(true){
      settled = false;
      if(transformation = nextCold()){
        cancel = future._interpret(exception, rejected, resolved);
        if(!settled) warmupActions();
      }else if(transformation = nextHot()){
        cancel = future._interpret(exception, rejected, resolved);
      }else break;
      if(settled) continue;
      async = true;
      return;
    }
    cancel = future._interpret(exception, rej, res);
  }

  //Start the execution loop.
  settle(this);

  //Return the cancellation function.
  return Sequence$cancel;

});

Transformer.prototype.isTransformer = true;

Transformer.prototype._transform = function Transformer$_transform(transformation){
  return new Transformer(transformation.context, this.$1, (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.cons)(transformation, this.$2));
};

Transformer.prototype.toString = function Transformer$toString(){
  return (0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.toArray)((0,_internal_list_js__WEBPACK_IMPORTED_MODULE_5__.reverse)(this.$2)).reduce(function(str, action){
    return action.name + getArgs(action).map(showArg).join('') + ' (' + str + ')';
  }, this.$1.toString());
};

function BaseTransformation$rejected(x){
  this.cancel();
  return new Reject(this.context, x);
}

function BaseTransformation$resolved(x){
  this.cancel();
  return new Resolve(this.context, x);
}

function BaseTransformation$toJSON(){
  return {$: _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.$$type, kind: 'transformation', type: this.name, args: getArgs(this)};
}

var BaseTransformation = {
  rejected: BaseTransformation$rejected,
  resolved: BaseTransformation$resolved,
  run: _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.moop,
  cancel: _internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop,
  context: _internal_list_js__WEBPACK_IMPORTED_MODULE_5__.nil,
  arity: 0,
  name: 'transform',
  toJSON: BaseTransformation$toJSON
};

function wrapHandler(handler){
  return function transformationHandler(x){
    var m;
    try{
      m = handler.call(this, x);
    }catch(e){
      return new Crash(this.context, e);
    }
    if(isFuture(m)){
      return m;
    }
    return new Crash(this.context, (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.invalidFuture)(
      this.name + ' expects the return value from the function it\'s given', m,
      '\n  When called with: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.show)(x)
    ));
  };
}

function createTransformation(arity, name, prototype){
  var Transformation = function(context, $1, $2){
    this.context = context;
    this.$1 = $1;
    this.$2 = $2;
  };

  Transformation.prototype = Object.create(BaseTransformation);
  Transformation.prototype.arity = arity;
  Transformation.prototype.name = name;

  if(typeof prototype.rejected === 'function'){
    Transformation.prototype.rejected = wrapHandler(prototype.rejected);
  }

  if(typeof prototype.resolved === 'function'){
    Transformation.prototype.resolved = wrapHandler(prototype.resolved);
  }

  if(typeof prototype.run === 'function'){
    Transformation.prototype.run = prototype.run;
  }

  return Transformation;
}

var ApTransformation = createTransformation(1, 'ap', {
  resolved: function ApTransformation$resolved(f){
    if((0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_6__.isFunction)(f)) return this.$1._transform(new MapTransformation(this.context, f));
    throw (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_3__.typeError)(
      'ap expects the second Future to resolve to a Function\n' +
      '  Actual: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.show)(f)
    );
  }
});

var AltTransformation = createTransformation(1, 'alt', {
  rejected: function AltTransformation$rejected(){ return this.$1 }
});

var MapTransformation = createTransformation(1, 'map', {
  resolved: function MapTransformation$resolved(x){
    return new Resolve(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.call)(this.$1, x));
  }
});

var BimapTransformation = createTransformation(2, 'bimap', {
  rejected: function BimapTransformation$rejected(x){
    return new Reject(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.call)(this.$1, x));
  },
  resolved: function BimapTransformation$resolved(x){
    return new Resolve(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.call)(this.$2, x));
  }
});

var ChainTransformation = createTransformation(1, 'chain', {
  resolved: function ChainTransformation$resolved(x){ return (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_7__.call)(this.$1, x) }
});


/***/ }),

/***/ "./node_modules/fluture/src/go.js":
/*!****************************************!*\
  !*** ./node_modules/fluture/src/go.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "invalidIteration": () => (/* binding */ invalidIteration),
/* harmony export */   "invalidState": () => (/* binding */ invalidState),
/* harmony export */   "Go": () => (/* binding */ Go),
/* harmony export */   "go": () => (/* binding */ go)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_iteration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/iteration.js */ "./node_modules/fluture/src/internal/iteration.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/timing.js */ "./node_modules/fluture/src/internal/timing.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");
/*eslint consistent-return: 0 */








function invalidIteration(o){
  return (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.typeError)(
    'The iterator did not return a valid iteration from iterator.next()\n' +
    '  Actual: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_4__.show)(o)
  );
}

function invalidState(x){
  return (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.invalidFuture)(
    'go() expects the value produced by the iterator', x,
    '\n  Tip: If you\'re using a generator, make sure you always yield a Future'
  );
}

var Go = (0,_future_js__WEBPACK_IMPORTED_MODULE_5__.createInterpreter)(1, 'go', function Go$interpret(rec, rej, res){

  var _this = this, timing = _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Undetermined, cancel = _internal_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop, state, value, iterator;

  function crash(e){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.wrapException)(e, _this));
  }

  try{
    iterator = _this.$1();
  }catch(e){
    crash(e);
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop;
  }

  if(!(0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isIterator)(iterator)){
    crash((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.invalidArgument)('go', 0, 'return an iterator, maybe you forgot the "*"', iterator));
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop;
  }

  function resolved(x){
    value = x;
    if(timing === _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Asynchronous) return drain();
    timing = _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Synchronous;
  }

  function drain(){
    //eslint-disable-next-line no-constant-condition
    while(true){
      try{
        state = iterator.next(value);
      }catch(e){
        return crash(e);
      }
      if(!(0,_internal_iteration_js__WEBPACK_IMPORTED_MODULE_1__.isIteration)(state)) return crash(invalidIteration(state));
      if(state.done) break;
      if(!(0,_future_js__WEBPACK_IMPORTED_MODULE_5__.isFuture)(state.value)){
        return crash(invalidState(state.value));
      }
      timing = _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Undetermined;
      cancel = state.value._interpret(crash, rej, resolved);
      if(timing === _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Undetermined) return timing = _internal_timing_js__WEBPACK_IMPORTED_MODULE_3__.Asynchronous;
    }
    res(state.value);
  }

  drain();

  return function Go$cancel(){ cancel() };

});

function go(generator){
  return new Go((0,_future_js__WEBPACK_IMPORTED_MODULE_5__.application1)(go, _future_js__WEBPACK_IMPORTED_MODULE_5__.func, arguments), generator);
}


/***/ }),

/***/ "./node_modules/fluture/src/hook.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/hook.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hook": () => (/* binding */ Hook),
/* harmony export */   "hook": () => (/* binding */ hook)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");




function invalidDisposal(m, f, x){
  return (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidFuture)(
    'hook() expects the return value from the first function it\'s given', m,
    '\n  From calling: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(f) + '\n  With: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(x)
  );
}

function invalidConsumption(m, f, x){
  return (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidFuture)(
    'hook() expects the return value from the second function it\'s given', m,
    '\n  From calling: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(f) + '\n  With: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(x)
  );
}

var Hook = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.createInterpreter)(3, 'hook', function Hook$interpret(rec, rej, res){

  var _this = this, _acquire = this.$1, _dispose = this.$2, _consume = this.$3;
  var cancel, cancelConsume = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop, resource, value, cont = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;

  function Hook$done(){
    cont(value);
  }

  function Hook$rec(x){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.wrapException)(x, _this));
  }

  function Hook$dispose(){
    var disposal;
    try{
      disposal = _dispose(resource);
    }catch(e){
      return Hook$rec(e);
    }
    if(!(0,_future_js__WEBPACK_IMPORTED_MODULE_2__.isFuture)(disposal)){
      return Hook$rec(invalidDisposal(disposal, _dispose, resource));
    }
    cancel = Hook$cancelDisposal;
    disposal._interpret(Hook$rec, Hook$disposalRejected, Hook$done);
  }

  function Hook$cancelConsumption(){
    cancelConsume();
    Hook$dispose();
    Hook$cancelDisposal();
  }

  function Hook$cancelDisposal(){
    cont = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  }

  function Hook$disposalRejected(x){
    Hook$rec(new Error('The disposal Future rejected with ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(x)));
  }

  function Hook$consumptionException(x){
    cont = Hook$rec;
    value = x;
    Hook$dispose();
  }

  function Hook$consumptionRejected(x){
    cont = rej;
    value = x;
    Hook$dispose();
  }

  function Hook$consumptionResolved(x){
    cont = res;
    value = x;
    Hook$dispose();
  }

  function Hook$consume(x){
    resource = x;
    var consumption;
    try{
      consumption = _consume(resource);
    }catch(e){
      return Hook$consumptionException(e);
    }
    if(!(0,_future_js__WEBPACK_IMPORTED_MODULE_2__.isFuture)(consumption)){
      return Hook$consumptionException(invalidConsumption(consumption, _consume, resource));
    }
    cancel = Hook$cancelConsumption;
    cancelConsume = consumption._interpret(
      Hook$consumptionException,
      Hook$consumptionRejected,
      Hook$consumptionResolved
    );
  }

  var cancelAcquire = _acquire._interpret(Hook$rec, rej, Hook$consume);
  cancel = cancel || cancelAcquire;

  return function Hook$fork$cancel(){
    rec = _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.raise;
    cancel();
  };

});

function hook(acquire){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application1)(hook, _future_js__WEBPACK_IMPORTED_MODULE_2__.future, arguments);
  return function hook(dispose){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application)(2, hook, _future_js__WEBPACK_IMPORTED_MODULE_2__.func, arguments, context1);
    return function hook(consume){
      var context3 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application)(3, hook, _future_js__WEBPACK_IMPORTED_MODULE_2__.func, arguments, context2);
      return new Hook(context3, acquire, dispose, consume);
    };
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/const.js":
/*!****************************************************!*\
  !*** ./node_modules/fluture/src/internal/const.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FL": () => (/* binding */ FL),
/* harmony export */   "ordinal": () => (/* binding */ ordinal),
/* harmony export */   "namespace": () => (/* binding */ namespace),
/* harmony export */   "name": () => (/* binding */ name),
/* harmony export */   "version": () => (/* binding */ version),
/* harmony export */   "$$type": () => (/* binding */ $$type)
/* harmony export */ });
var FL = {
  alt: 'fantasy-land/alt',
  ap: 'fantasy-land/ap',
  bimap: 'fantasy-land/bimap',
  chain: 'fantasy-land/chain',
  chainRec: 'fantasy-land/chainRec',
  map: 'fantasy-land/map',
  of: 'fantasy-land/of',
  zero: 'fantasy-land/zero'
};

var ordinal = ['first', 'second', 'third', 'fourth', 'fifth'];

var namespace = 'fluture';
var name = 'Future';
var version = 5;

var $$type = namespace + '/' + name + '@' + version;


/***/ }),

/***/ "./node_modules/fluture/src/internal/debug.js":
/*!****************************************************!*\
  !*** ./node_modules/fluture/src/internal/debug.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "captureStackTrace": () => (/* binding */ captureStackTrace),
/* harmony export */   "debugMode": () => (/* binding */ debugMode),
/* harmony export */   "debugHandleNone": () => (/* binding */ debugHandleNone),
/* harmony export */   "debugHandleAll": () => (/* binding */ debugHandleAll),
/* harmony export */   "debug": () => (/* binding */ debug),
/* harmony export */   "captureContext": () => (/* binding */ captureContext),
/* harmony export */   "debugCaptureContext": () => (/* binding */ debugCaptureContext),
/* harmony export */   "captureApplicationContext": () => (/* binding */ captureApplicationContext),
/* harmony export */   "debugCaptureApplicationContext": () => (/* binding */ debugCaptureApplicationContext),
/* harmony export */   "captureStackTraceFallback": () => (/* binding */ captureStackTraceFallback)
/* harmony export */ });
/* harmony import */ var _const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list.js */ "./node_modules/fluture/src/internal/list.js");



/* c8 ignore next */
var captureStackTrace = Error.captureStackTrace || captureStackTraceFallback;
var _debug = debugHandleNone;



function debugMode(debug){
  _debug = debug ? debugHandleAll : debugHandleNone;
}

function debugHandleNone(x){
  return x;
}

function debugHandleAll(x, fn, a, b, c){
  return fn(a, b, c);
}

function debug(x, fn, a, b, c){
  return _debug(x, fn, a, b, c);
}

function captureContext(previous, tag, fn){
  return debug(previous, debugCaptureContext, previous, tag, fn);
}

function debugCaptureContext(previous, tag, fn){
  var context = {tag: tag, name: ' from ' + tag + ':'};
  captureStackTrace(context, fn);
  return (0,_list_js__WEBPACK_IMPORTED_MODULE_1__.cons)(context, previous);
}

function captureApplicationContext(context, n, f){
  return debug(context, debugCaptureApplicationContext, context, n, f);
}

function debugCaptureApplicationContext(context, n, f){
  return debugCaptureContext(context, _const_js__WEBPACK_IMPORTED_MODULE_0__.ordinal[n - 1] + ' application of ' + f.name, f);
}

function captureStackTraceFallback(x){
  var e = new Error;
  if(typeof e.stack === 'string'){
    x.stack = x.name + '\n' + e.stack.split('\n').slice(1).join('\n');
  /* c8 ignore next 3 */
  }else{
    x.stack = x.name;
  }
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/error.js":
/*!****************************************************!*\
  !*** ./node_modules/fluture/src/internal/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "error": () => (/* binding */ error),
/* harmony export */   "typeError": () => (/* binding */ typeError),
/* harmony export */   "invalidArgument": () => (/* binding */ invalidArgument),
/* harmony export */   "invalidArgumentOf": () => (/* binding */ invalidArgumentOf),
/* harmony export */   "invalidContext": () => (/* binding */ invalidContext),
/* harmony export */   "invalidArity": () => (/* binding */ invalidArity),
/* harmony export */   "invalidFuture": () => (/* binding */ invalidFuture),
/* harmony export */   "invalidFutureArgument": () => (/* binding */ invalidFutureArgument),
/* harmony export */   "ensureError": () => (/* binding */ ensureError),
/* harmony export */   "assignUnenumerable": () => (/* binding */ assignUnenumerable),
/* harmony export */   "wrapException": () => (/* binding */ wrapException),
/* harmony export */   "withExtraContext": () => (/* binding */ withExtraContext),
/* harmony export */   "contextToStackTrace": () => (/* binding */ contextToStackTrace)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _const_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sanctuary-type-identifiers */ "./node_modules/sanctuary-type-identifiers/index.js");
/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./list.js */ "./node_modules/fluture/src/internal/list.js");
/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug.js */ "./node_modules/fluture/src/internal/debug.js");






function showArg(x){
  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(x) + ' :: ' + sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_2__.parse(sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_2__(x)).name;
}

function error(message){
  return new Error(message);
}

function typeError(message){
  return new TypeError(message);
}

function invalidArgument(it, at, expected, actual){
  return typeError(
    it + '() expects its ' + _const_js__WEBPACK_IMPORTED_MODULE_1__.ordinal[at] + ' argument to ' + expected + '.' +
    '\n  Actual: ' + showArg(actual)
  );
}

function invalidArgumentOf(expected){
  return function(it, at, actual){
    return invalidArgument(it, at, expected, actual);
  };
}

function invalidContext(it, actual){
  return typeError(
    it + '() was invoked outside the context of a Future. You might want to use'
  + ' a dispatcher instead\n  Called on: ' + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(actual)
  );
}

function invalidArity(f, args){
  return new TypeError(
    f.name + '() expects to be called with a single argument per invocation\n' +
    '  Saw: ' + args.length + ' arguments' +
    Array.prototype.slice.call(args).map(function(arg, i){
      return '\n  ' + (
        _const_js__WEBPACK_IMPORTED_MODULE_1__.ordinal[i] ?
        _const_js__WEBPACK_IMPORTED_MODULE_1__.ordinal[i].charAt(0).toUpperCase() + _const_js__WEBPACK_IMPORTED_MODULE_1__.ordinal[i].slice(1) :
        'Argument ' + String(i + 1)
      ) + ': ' + showArg(arg);
    }).join('')
  );
}

function invalidNamespace(m, x){
  return (
    'The Future was not created by ' + _const_js__WEBPACK_IMPORTED_MODULE_1__.namespace + '. '
  + 'Make sure you transform other Futures to ' + _const_js__WEBPACK_IMPORTED_MODULE_1__.namespace + ' Futures. '
  + 'Got ' + (x ? ('a Future from ' + x) : 'an unscoped Future') + '.'
  + '\n  See: https://github.com/fluture-js/Fluture#casting-futures'
  );
}

function invalidVersion(m, x){
  return (
    'The Future was created by ' + (x < _const_js__WEBPACK_IMPORTED_MODULE_1__.version ? 'an older' : 'a newer')
  + ' version of ' + _const_js__WEBPACK_IMPORTED_MODULE_1__.namespace + '. '
  + 'This means that one of the sources which creates Futures is outdated. '
  + 'Update this source, or transform its created Futures to be compatible.'
  + '\n  See: https://github.com/fluture-js/Fluture#casting-futures'
  );
}

function invalidFuture(desc, m, s){
  var id = sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_2__.parse(sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_2__(m));
  var info = id.name === _const_js__WEBPACK_IMPORTED_MODULE_1__.name ? '\n' + (
    id.namespace !== _const_js__WEBPACK_IMPORTED_MODULE_1__.namespace ? invalidNamespace(m, id.namespace)
  : id.version !== _const_js__WEBPACK_IMPORTED_MODULE_1__.version ? invalidVersion(m, id.version)
  : 'Nothing seems wrong. Contact the Fluture maintainers.') : '';
  return typeError(
    desc + ' to be a valid Future.' + info + '\n' +
    '  Actual: ' + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(m) + ' :: ' + id.name + (s || '')
  );
}

function invalidFutureArgument(it, at, m, s){
  return invalidFuture(it + '() expects its ' + _const_js__WEBPACK_IMPORTED_MODULE_1__.ordinal[at] + ' argument', m, s);
}

function ensureError(value, fn){
  var message;
  try{
    if(value instanceof Error) return value;
    message = 'A Non-Error was thrown from a Future: ' + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.show)(value);
  }catch (_){
    message = 'Something was thrown from a Future, but it could not be converted to String';
  }
  var e = error(message);
  (0,_debug_js__WEBPACK_IMPORTED_MODULE_4__.captureStackTrace)(e, fn);
  return e;
}

function assignUnenumerable(o, prop, value){
  Object.defineProperty(o, prop, {value: value, writable: true, configurable: true});
}

function wrapException(caught, callingFuture){
  var origin = ensureError(caught, wrapException);
  var context = (0,_list_js__WEBPACK_IMPORTED_MODULE_3__.cat)(origin.context || _list_js__WEBPACK_IMPORTED_MODULE_3__.nil, callingFuture.context);
  var e = error(origin.message);
  assignUnenumerable(e, 'future', origin.future || callingFuture);
  assignUnenumerable(e, 'reason', origin.reason || origin);
  assignUnenumerable(e, 'stack', e.reason.stack);
  return withExtraContext(e, context);
}

function withExtraContext(e, context){
  assignUnenumerable(e, 'context', context);
  assignUnenumerable(e, 'stack', e.stack + contextToStackTrace(context));
  return e;
}

function contextToStackTrace(context){
  var stack = '', tail = context;
  while(tail !== _list_js__WEBPACK_IMPORTED_MODULE_3__.nil){
    stack = stack + '\n' + tail.head.stack;
    tail = tail.tail;
  }
  return stack;
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/iteration.js":
/*!********************************************************!*\
  !*** ./node_modules/fluture/src/internal/iteration.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Next": () => (/* binding */ Next),
/* harmony export */   "Done": () => (/* binding */ Done),
/* harmony export */   "isIteration": () => (/* binding */ isIteration)
/* harmony export */ });
/* harmony import */ var _predicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./predicates.js */ "./node_modules/fluture/src/internal/predicates.js");


function Next(x){
  return {done: false, value: x};
}

function Done(x){
  return {done: true, value: x};
}

function isIteration(x){
  return (0,_predicates_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(x) && (0,_predicates_js__WEBPACK_IMPORTED_MODULE_0__.isBoolean)(x.done);
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/list.js":
/*!***************************************************!*\
  !*** ./node_modules/fluture/src/internal/list.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "List": () => (/* binding */ List),
/* harmony export */   "nil": () => (/* binding */ nil),
/* harmony export */   "isNil": () => (/* binding */ isNil),
/* harmony export */   "cons": () => (/* binding */ cons),
/* harmony export */   "reverse": () => (/* binding */ reverse),
/* harmony export */   "cat": () => (/* binding */ cat),
/* harmony export */   "toArray": () => (/* binding */ toArray)
/* harmony export */ });
function List(head, tail){
  this.head = head;
  this.tail = tail;
}

List.prototype.toJSON = function(){
  return toArray(this);
};

var nil = new List(null, null);
nil.tail = nil;

function isNil(list){
  return list.tail === list;
}

// cons :: (a, List a) -> List a
//      -- O(1) append operation
function cons(head, tail){
  return new List(head, tail);
}

// reverse :: List a -> List a
//         -- O(n) list reversal
function reverse(xs){
  var ys = nil, tail = xs;
  while(!isNil(tail)){
    ys = cons(tail.head, ys);
    tail = tail.tail;
  }
  return ys;
}

// cat :: (List a, List a) -> List a
//     -- O(n) list concatenation
function cat(xs, ys){
  var zs = ys, tail = reverse(xs);
  while(!isNil(tail)){
    zs = cons(tail.head, zs);
    tail = tail.tail;
  }
  return zs;
}

// toArray :: List a -> Array a
//         -- O(n) list to Array
function toArray(xs){
  var tail = xs, arr = [];
  while(!isNil(tail)){
    arr.push(tail.head);
    tail = tail.tail;
  }
  return arr;
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/parallel.js":
/*!*******************************************************!*\
  !*** ./node_modules/fluture/src/internal/parallel.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "earlyCrash": () => (/* binding */ earlyCrash),
/* harmony export */   "earlyReject": () => (/* binding */ earlyReject),
/* harmony export */   "earlyResolve": () => (/* binding */ earlyResolve),
/* harmony export */   "createParallelTransformation": () => (/* binding */ createParallelTransformation)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../future.js */ "./node_modules/fluture/src/future.js");



function Eager(future){
  var _this = this;
  _this.rec = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  _this.rej = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  _this.res = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
  _this.crashed = false;
  _this.rejected = false;
  _this.resolved = false;
  _this.value = null;
  _this.cancel = future._interpret(function Eager$crash(x){
    _this.value = x;
    _this.crashed = true;
    _this.cancel = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
    _this.rec(x);
  }, function Eager$reject(x){
    _this.value = x;
    _this.rejected = true;
    _this.cancel = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
    _this.rej(x);
  }, function Eager$resolve(x){
    _this.value = x;
    _this.resolved = true;
    _this.cancel = _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop;
    _this.res(x);
  });
}

Eager.prototype = Object.create(_future_js__WEBPACK_IMPORTED_MODULE_1__.Future.prototype);

Eager.prototype._interpret = function Eager$interpret(rec, rej, res){
  if(this.crashed) rec(this.value);
  else if(this.rejected) rej(this.value);
  else if(this.resolved) res(this.value);
  else{
    this.rec = rec;
    this.rej = rej;
    this.res = res;
  }
  return this.cancel;
};

function earlyCrash(early, x){
  early((0,_future_js__WEBPACK_IMPORTED_MODULE_1__.crash)(x));
}

function earlyReject(early, x){
  early((0,_future_js__WEBPACK_IMPORTED_MODULE_1__.reject)(x));
}

function earlyResolve(early, x){
  early((0,_future_js__WEBPACK_IMPORTED_MODULE_1__.resolve)(x));
}

function createParallelTransformation(name, rec, rej, res, prototype){
  var ParallelTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createTransformation)(1, name, Object.assign({
    run: function Parallel$run(early){
      var eager = new Eager(this.$1);
      var transformation = new ParallelTransformation(this.context, eager);
      function Parallel$early(m){ early(m, transformation) }
      transformation.cancel = eager._interpret(
        function Parallel$rec(x){ rec(Parallel$early, x) },
        function Parallel$rej(x){ rej(Parallel$early, x) },
        function Parallel$res(x){ res(Parallel$early, x) }
      );
      return transformation;
    }
  }, prototype));
  return ParallelTransformation;
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/predicates.js":
/*!*********************************************************!*\
  !*** ./node_modules/fluture/src/internal/predicates.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction),
/* harmony export */   "isThenable": () => (/* binding */ isThenable),
/* harmony export */   "isBoolean": () => (/* binding */ isBoolean),
/* harmony export */   "isNumber": () => (/* binding */ isNumber),
/* harmony export */   "isUnsigned": () => (/* binding */ isUnsigned),
/* harmony export */   "isObject": () => (/* binding */ isObject),
/* harmony export */   "isIterator": () => (/* binding */ isIterator),
/* harmony export */   "isArray": () => (/* binding */ isArray),
/* harmony export */   "hasMethod": () => (/* binding */ hasMethod),
/* harmony export */   "isFunctor": () => (/* binding */ isFunctor),
/* harmony export */   "isAlt": () => (/* binding */ isAlt),
/* harmony export */   "isApply": () => (/* binding */ isApply),
/* harmony export */   "isBifunctor": () => (/* binding */ isBifunctor),
/* harmony export */   "isChain": () => (/* binding */ isChain)
/* harmony export */ });
/* harmony import */ var _const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const.js */ "./node_modules/fluture/src/internal/const.js");


function isFunction(f){
  return typeof f === 'function';
}

function isThenable(m){
  return m instanceof Promise || m != null && isFunction(m.then);
}

function isBoolean(f){
  return typeof f === 'boolean';
}

function isNumber(f){
  return typeof f === 'number';
}

function isUnsigned(n){
  return (n === Infinity || isNumber(n) && n > 0 && n % 1 === 0);
}

function isObject(o){
  return o !== null && typeof o === 'object';
}

function isIterator(i){
  return isObject(i) && isFunction(i.next);
}

function isArray(x){
  return Array.isArray(x);
}

function hasMethod(method, x){
  return x != null && isFunction(x[method]);
}

function isFunctor(x){
  return hasMethod(_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.map, x);
}

function isAlt(x){
  return isFunctor(x) && hasMethod(_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.alt, x);
}

function isApply(x){
  return isFunctor(x) && hasMethod(_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.ap, x);
}

function isBifunctor(x){
  return isFunctor(x) && hasMethod(_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.bimap, x);
}

function isChain(x){
  return isApply(x) && hasMethod(_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.chain, x);
}


/***/ }),

/***/ "./node_modules/fluture/src/internal/timing.js":
/*!*****************************************************!*\
  !*** ./node_modules/fluture/src/internal/timing.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Undetermined": () => (/* binding */ Undetermined),
/* harmony export */   "Synchronous": () => (/* binding */ Synchronous),
/* harmony export */   "Asynchronous": () => (/* binding */ Asynchronous)
/* harmony export */ });
var Undetermined = 0;
var Synchronous = 1;
var Asynchronous = 2;


/***/ }),

/***/ "./node_modules/fluture/src/internal/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/fluture/src/internal/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "show": () => (/* reexport default export from named module */ sanctuary_show__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "noop": () => (/* binding */ noop),
/* harmony export */   "moop": () => (/* binding */ moop),
/* harmony export */   "call": () => (/* binding */ call),
/* harmony export */   "setImmediateFallback": () => (/* binding */ setImmediateFallback),
/* harmony export */   "raise": () => (/* binding */ raise)
/* harmony export */ });
/* harmony import */ var sanctuary_show__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sanctuary-show */ "./node_modules/sanctuary-show/index.js");


/* c8 ignore next */
var setImmediate = typeof setImmediate === 'undefined' ? setImmediateFallback : setImmediate;

function noop(){}
function moop(){ return this }
function call(f, x){ return f(x) }

function setImmediateFallback(f, x){
  return setTimeout(f, 0, x);
}

function raise(x){
  setImmediate(function rethrowErrorDelayedToEscapePromiseCatch(){
    throw x;
  });
}


/***/ }),

/***/ "./node_modules/fluture/src/lastly.js":
/*!********************************************!*\
  !*** ./node_modules/fluture/src/lastly.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LastlyTransformation": () => (/* binding */ LastlyTransformation),
/* harmony export */   "lastly": () => (/* binding */ lastly)
/* harmony export */ });
/* harmony import */ var _and_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./and.js */ "./node_modules/fluture/src/and.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var LastlyTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createTransformation)(1, 'lastly', {
  rejected: function LastlyAction$rejected(x){
    return this.$1._transform(new _and_js__WEBPACK_IMPORTED_MODULE_0__.AndTransformation(this.context, new _future_js__WEBPACK_IMPORTED_MODULE_1__.Reject(this.context, x)));
  },
  resolved: function LastlyAction$resolved(x){
    return this.$1._transform(new _and_js__WEBPACK_IMPORTED_MODULE_0__.AndTransformation(this.context, new _future_js__WEBPACK_IMPORTED_MODULE_1__.Resolve(this.context, x)));
  }
});

function lastly(cleanup){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(lastly, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments);
  return function lastly(program){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, lastly, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context1);
    return program._transform(new LastlyTransformation(context2, cleanup));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/map-rej.js":
/*!*********************************************!*\
  !*** ./node_modules/fluture/src/map-rej.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MapRejTransformation": () => (/* binding */ MapRejTransformation),
/* harmony export */   "mapRej": () => (/* binding */ mapRej)
/* harmony export */ });
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var MapRejTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.createTransformation)(1, 'mapRej', {
  rejected: function MapRejTransformation$rejected(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_1__.Reject(this.context, (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_0__.call)(this.$1, x));
  }
});

function mapRej(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(mapRej, _future_js__WEBPACK_IMPORTED_MODULE_1__.func, arguments);
  return function mapRej(m){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, mapRej, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context1);
    return m._transform(new MapRejTransformation(context2, f));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/map.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/map.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "functor": () => (/* binding */ functor),
/* harmony export */   "map": () => (/* binding */ map)
/* harmony export */ });
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





var functor = {pred: _internal_predicates_js__WEBPACK_IMPORTED_MODULE_2__.isFunctor, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_1__.invalidArgumentOf)('have Functor implemented')};

function map(f){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(map, _future_js__WEBPACK_IMPORTED_MODULE_3__.func, arguments);
  return function map(m){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, map, functor, arguments, context1);
    return (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(m) ?
           m._transform(new _future_js__WEBPACK_IMPORTED_MODULE_3__.MapTransformation(context2, f)) :
           m[_internal_const_js__WEBPACK_IMPORTED_MODULE_0__.FL.map](f);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/node.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/node.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Node": () => (/* binding */ Node),
/* harmony export */   "node": () => (/* binding */ node)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");




var Node = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.createInterpreter)(1, 'node', function Node$interpret(rec, rej, res){
  function Node$done(err, val){
    cont = err ? function EncaseN3$rej(){
      open = false;
      rej(err);
    } : function EncaseN3$res(){
      open = false;
      res(val);
    };
    if(open){
      cont();
    }
  }
  var open = false, cont = function(){ open = true };
  try{
    (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.call)(this.$1, Node$done);
  }catch(e){
    rec((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.wrapException)(e, this));
    open = false;
    return _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop;
  }
  cont();
  return function Node$cancel(){ open = false };
});

function node(f){
  return new Node((0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application1)(node, _future_js__WEBPACK_IMPORTED_MODULE_2__.func, arguments), f);
}


/***/ }),

/***/ "./node_modules/fluture/src/pap.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/pap.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParallelApTransformation": () => (/* binding */ ParallelApTransformation),
/* harmony export */   "pap": () => (/* binding */ pap)
/* harmony export */ });
/* harmony import */ var _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/parallel.js */ "./node_modules/fluture/src/internal/parallel.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");







var ParallelApTransformation =
(0,_internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.createParallelTransformation)('pap', _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyCrash, _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyReject, _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop, {
  resolved: function ParallelApTransformation$resolved(f){
    if((0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_3__.isFunction)(f)) return this.$1._transform(new _future_js__WEBPACK_IMPORTED_MODULE_4__.MapTransformation(this.context, f));
    throw (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_2__.typeError)(
      'pap expects the second Future to resolve to a Function\n' +
      '  Actual: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.show)(f)
    );
  }
});

function pap(mx){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_4__.application1)(pap, _future_js__WEBPACK_IMPORTED_MODULE_4__.future, arguments);
  return function pap(mf){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_4__.application)(2, pap, _future_js__WEBPACK_IMPORTED_MODULE_4__.future, arguments, context1);
    return mf._transform(new ParallelApTransformation(context2, mx));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/par.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/par.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConcurrentFuture": () => (/* binding */ ConcurrentFuture),
/* harmony export */   "Par": () => (/* binding */ Par),
/* harmony export */   "isParallel": () => (/* binding */ isParallel)
/* harmony export */ });
/* harmony import */ var sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sanctuary-type-identifiers */ "./node_modules/sanctuary-type-identifiers/index.js");
/* harmony import */ var _internal_const_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/const.js */ "./node_modules/fluture/src/internal/const.js");
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_debug_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/debug.js */ "./node_modules/fluture/src/internal/debug.js");
/* harmony import */ var _internal_list_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/list.js */ "./node_modules/fluture/src/internal/list.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");
/* harmony import */ var _pap_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pap.js */ "./node_modules/fluture/src/pap.js");
/* harmony import */ var _race_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./race.js */ "./node_modules/fluture/src/race.js");











function ConcurrentFuture (sequential){
  this.sequential = sequential;
}

ConcurrentFuture.prototype = Object.create(Par.prototype);

function Par (sequential){
  if(!(0,_future_js__WEBPACK_IMPORTED_MODULE_5__.isFuture)(sequential)) throw (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_2__.invalidFutureArgument)(Par.name, 0, sequential);
  return new ConcurrentFuture(sequential);
}

var $$type = _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.namespace + '/ConcurrentFuture@' + _internal_const_js__WEBPACK_IMPORTED_MODULE_1__.version;
var zeroInstance = new ConcurrentFuture(_future_js__WEBPACK_IMPORTED_MODULE_5__.never);

// Compliance with sanctuary-type-identifiers versions 1 and 2.
// To prevent sanctuary-type-identifiers version 3 from identifying
// 'Par' as being of the type denoted by $$type, we ensure that
// Par.constructor.prototype is equal to Par.
Par['@@type'] = $$type;
Par.constructor = {prototype: Par};

Par[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.of] = function Par$of(x){
  return new ConcurrentFuture((0,_future_js__WEBPACK_IMPORTED_MODULE_5__.resolve)(x));
};

Par[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.zero] = function Par$zero(){
  return zeroInstance;
};

Par.prototype['@@type'] = $$type;

Par.prototype['@@show'] = function Par$show(){
  return this.toString();
};

Par.prototype.toString = function Par$toString(){
  return 'Par (' + this.sequential.toString() + ')';
};

Par.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.map] = function Par$FL$map(f){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_3__.captureContext)(
    _internal_list_js__WEBPACK_IMPORTED_MODULE_4__.nil,
    'a Fantasy Land dispatch to map via ConcurrentFuture',
    Par$FL$map
  );
  return new ConcurrentFuture(this.sequential._transform(new _future_js__WEBPACK_IMPORTED_MODULE_5__.MapTransformation(context, f)));
};

Par.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.ap] = function Par$FL$ap(other){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_3__.captureContext)(
    _internal_list_js__WEBPACK_IMPORTED_MODULE_4__.nil,
    'a Fantasy Land dispatch to ap via ConcurrentFuture',
    Par$FL$ap
  );
  return new ConcurrentFuture(other.sequential._transform(
    new _pap_js__WEBPACK_IMPORTED_MODULE_6__.ParallelApTransformation(context, this.sequential)
  ));
};

Par.prototype[_internal_const_js__WEBPACK_IMPORTED_MODULE_1__.FL.alt] = function Par$FL$alt(other){
  var context = (0,_internal_debug_js__WEBPACK_IMPORTED_MODULE_3__.captureContext)(
    _internal_list_js__WEBPACK_IMPORTED_MODULE_4__.nil,
    'a Fantasy Land dispatch to alt via ConcurrentFuture',
    Par$FL$alt
  );
  return new ConcurrentFuture(other.sequential._transform(
    new _race_js__WEBPACK_IMPORTED_MODULE_7__.RaceTransformation(context, this.sequential)
  ));
};

function isParallel(x){
  return x instanceof ConcurrentFuture || sanctuary_type_identifiers__WEBPACK_IMPORTED_MODULE_0__(x) === $$type;
}


/***/ }),

/***/ "./node_modules/fluture/src/parallel.js":
/*!**********************************************!*\
  !*** ./node_modules/fluture/src/parallel.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "futureArray": () => (/* binding */ futureArray),
/* harmony export */   "Parallel": () => (/* binding */ Parallel),
/* harmony export */   "parallel": () => (/* binding */ parallel)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_predicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/predicates.js */ "./node_modules/fluture/src/internal/predicates.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");





function isFutureArray(xs){
  if(!(0,_internal_predicates_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(xs)) return false;
  for(var i = 0; i < xs.length; i++){
    if(!(0,_future_js__WEBPACK_IMPORTED_MODULE_3__.isFuture)(xs[i])) return false;
  }
  return true;
}

var futureArray = {
  pred: isFutureArray,
  error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.invalidArgumentOf)('be an Array of valid Futures')
};

var Parallel = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.createInterpreter)(2, 'parallel', function Parallel$interpret(rec, rej, res){

  var _this = this, futures = this.$2, length = futures.length;
  var max = Math.min(this.$1, length), cancels = new Array(length), out = new Array(length);
  var cursor = 0, running = 0, blocked = false, cont = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;

  function Parallel$cancel(){
    rec = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
    rej = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
    res = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
    cursor = length;
    for(var n = 0; n < length; n++) cancels[n] && cancels[n]();
  }

  function Parallel$run(idx){
    running++;
    cancels[idx] = futures[idx]._interpret(function Parallel$rec(e){
      cont = rec;
      cancels[idx] = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
      Parallel$cancel();
      cont((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.wrapException)(e, _this));
    }, function Parallel$rej(reason){
      cont = rej;
      cancels[idx] = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
      Parallel$cancel();
      cont(reason);
    }, function Parallel$res(value){
      cancels[idx] = _internal_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop;
      out[idx] = value;
      running--;
      if(cursor === length && running === 0) res(out);
      else if(blocked) Parallel$drain();
    });
  }

  function Parallel$drain(){
    blocked = false;
    while(cursor < length && running < max) Parallel$run(cursor++);
    blocked = true;
  }

  Parallel$drain();

  return Parallel$cancel;

});

var emptyArray = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.resolve)([]);

function parallel(max){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application1)(parallel, _future_js__WEBPACK_IMPORTED_MODULE_3__.positiveInteger, arguments);
  return function parallel(ms){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_3__.application)(2, parallel, futureArray, arguments, context1);
    return ms.length === 0 ? emptyArray : new Parallel(context2, max, ms);
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/promise.js":
/*!*********************************************!*\
  !*** ./node_modules/fluture/src/promise.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "promise": () => (/* binding */ promise)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


function promise(m){
  (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(promise, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments);
  return new Promise(function promise$computation(res, rej){
    m._interpret(rej, rej, res);
  });
}


/***/ }),

/***/ "./node_modules/fluture/src/race.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/race.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RaceTransformation": () => (/* binding */ RaceTransformation),
/* harmony export */   "race": () => (/* binding */ race)
/* harmony export */ });
/* harmony import */ var _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/parallel.js */ "./node_modules/fluture/src/internal/parallel.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");



var RaceTransformation =
(0,_internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.createParallelTransformation)('race', _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyCrash, _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyReject, _internal_parallel_js__WEBPACK_IMPORTED_MODULE_0__.earlyResolve, {});

function race(left){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(race, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments);
  return function race(right){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application)(2, race, _future_js__WEBPACK_IMPORTED_MODULE_1__.future, arguments, context1);
    return right._transform(new RaceTransformation(context2, left));
  };
}


/***/ }),

/***/ "./node_modules/fluture/src/reject-after.js":
/*!**************************************************!*\
  !*** ./node_modules/fluture/src/reject-after.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RejectAfter": () => (/* binding */ RejectAfter),
/* harmony export */   "rejectAfter": () => (/* binding */ rejectAfter)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


var RejectAfter =
(0,_future_js__WEBPACK_IMPORTED_MODULE_0__.createInterpreter)(2, 'rejectAfter', function RejectAfter$interpret(rec, rej){
  var id = setTimeout(rej, this.$1, this.$2);
  return function RejectAfter$cancel(){ clearTimeout(id) };
});

RejectAfter.prototype.extractLeft = function RejectAfter$extractLeft(){
  return [this.$2];
};

function alwaysNever(_){
  return _future_js__WEBPACK_IMPORTED_MODULE_0__.never;
}

function rejectAfter(time){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(rejectAfter, _future_js__WEBPACK_IMPORTED_MODULE_0__.positiveInteger, arguments);
  return time === Infinity ? alwaysNever : (function rejectAfter(value){
    var context2 = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application)(2, rejectAfter, _future_js__WEBPACK_IMPORTED_MODULE_0__.any, arguments, context1);
    return new RejectAfter(context2, time, value);
  });
}


/***/ }),

/***/ "./node_modules/fluture/src/seq.js":
/*!*****************************************!*\
  !*** ./node_modules/fluture/src/seq.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "seq": () => (/* binding */ seq)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");
/* harmony import */ var _par_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./par.js */ "./node_modules/fluture/src/par.js");




var parallel = {pred: _par_js__WEBPACK_IMPORTED_MODULE_2__.isParallel, error: (0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.invalidArgumentOf)('be a ConcurrentFuture')};

function seq(par){
  (0,_future_js__WEBPACK_IMPORTED_MODULE_1__.application1)(seq, parallel, arguments);
  return par.sequential;
}


/***/ }),

/***/ "./node_modules/fluture/src/swap.js":
/*!******************************************!*\
  !*** ./node_modules/fluture/src/swap.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwapTransformation": () => (/* binding */ SwapTransformation),
/* harmony export */   "swap": () => (/* binding */ swap)
/* harmony export */ });
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");


var SwapTransformation = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.createTransformation)(0, 'swap', {
  resolved: function SwapTransformation$resolved(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_0__.Reject(this.context, x);
  },
  rejected: function SwapTransformation$rejected(x){
    return new _future_js__WEBPACK_IMPORTED_MODULE_0__.Resolve(this.context, x);
  }
});

function swap(m){
  var context = (0,_future_js__WEBPACK_IMPORTED_MODULE_0__.application1)(swap, _future_js__WEBPACK_IMPORTED_MODULE_0__.future, arguments);
  return m._transform(new SwapTransformation(context));
}


/***/ }),

/***/ "./node_modules/fluture/src/value.js":
/*!*******************************************!*\
  !*** ./node_modules/fluture/src/value.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "value": () => (/* binding */ value)
/* harmony export */ });
/* harmony import */ var _internal_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/error.js */ "./node_modules/fluture/src/internal/error.js");
/* harmony import */ var _internal_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.js */ "./node_modules/fluture/src/internal/utils.js");
/* harmony import */ var _future_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./future.js */ "./node_modules/fluture/src/future.js");




function value(res){
  var context1 = (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application1)(value, _future_js__WEBPACK_IMPORTED_MODULE_2__.func, arguments);
  return function value(m){
    (0,_future_js__WEBPACK_IMPORTED_MODULE_2__.application)(2, value, _future_js__WEBPACK_IMPORTED_MODULE_2__.future, arguments, context1);
    function value$rej(x){
      (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.raise)((0,_internal_error_js__WEBPACK_IMPORTED_MODULE_0__.error)(
        'Future#value was called on a rejected Future\n' +
        '  Rejection: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.show)(x) + '\n' +
        '  Future: ' + (0,_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.show)(m)
      ));
    }
    return m._interpret(_internal_utils_js__WEBPACK_IMPORTED_MODULE_1__.raise, value$rej, res);
  };
}


/***/ }),

/***/ "./node_modules/fp-ts-fluture/es6/Future.js":
/*!**************************************************!*\
  !*** ./node_modules/fp-ts-fluture/es6/Future.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "left": () => (/* binding */ left),
/* harmony export */   "right": () => (/* binding */ right),
/* harmony export */   "leftIO": () => (/* binding */ leftIO),
/* harmony export */   "rightIO": () => (/* binding */ rightIO),
/* harmony export */   "leftTask": () => (/* binding */ leftTask),
/* harmony export */   "rightTask": () => (/* binding */ rightTask),
/* harmony export */   "orElse": () => (/* binding */ orElse),
/* harmony export */   "fold": () => (/* binding */ fold),
/* harmony export */   "swap": () => (/* binding */ swap),
/* harmony export */   "futurify": () => (/* binding */ futurify),
/* harmony export */   "future": () => (/* binding */ future),
/* harmony export */   "delay": () => (/* binding */ delay),
/* harmony export */   "alt": () => (/* binding */ alt),
/* harmony export */   "ap": () => (/* binding */ ap),
/* harmony export */   "apFirst": () => (/* binding */ apFirst),
/* harmony export */   "apSecond": () => (/* binding */ apSecond),
/* harmony export */   "bimap": () => (/* binding */ bimap),
/* harmony export */   "chain": () => (/* binding */ chain),
/* harmony export */   "chainFirst": () => (/* binding */ chainFirst),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "mapLeft": () => (/* binding */ mapLeft),
/* harmony export */   "fromEither": () => (/* binding */ fromEither),
/* harmony export */   "fromOption": () => (/* binding */ fromOption),
/* harmony export */   "fromPredicate": () => (/* binding */ fromPredicate)
/* harmony export */ });
/* harmony import */ var fluture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fluture */ "./node_modules/fluture/index.js");
/* harmony import */ var fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fp-ts/es6/Either */ "./node_modules/fp-ts/es6/Either.js");
/* harmony import */ var fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fp-ts/es6/pipeable */ "./node_modules/fp-ts/es6/pipeable.js");
/**
 * @since 0.5.0
 */



/**
 * @since 0.5.0
 */
var URI = 'Fluture/Future';
/**
 * @since 0.6.4
 */
var left = fluture__WEBPACK_IMPORTED_MODULE_0__.reject;
/**
 * @since 0.6.4
 */
var right = fluture__WEBPACK_IMPORTED_MODULE_0__.resolve;
/**
 * @since 0.6.4
 */
function leftIO(ma) {
    return fluture__WEBPACK_IMPORTED_MODULE_0__.swap(fluture__WEBPACK_IMPORTED_MODULE_0__.attempt(ma));
}
/**
 * @since 0.6.4
 */
var rightIO = fluture__WEBPACK_IMPORTED_MODULE_0__.attempt;
/**
 * @since 0.6.4
 */
function leftTask(ma) {
    return fluture__WEBPACK_IMPORTED_MODULE_0__.swap(fluture__WEBPACK_IMPORTED_MODULE_0__.attemptP(ma));
}
/**
 * @since 0.6.4
 */
var rightTask = fluture__WEBPACK_IMPORTED_MODULE_0__.attemptP;
/**
 * @since 0.6.4
 */
function orElse(onLeft) {
    return fluture__WEBPACK_IMPORTED_MODULE_0__.chainRej(onLeft);
}
/**
 * @since 0.6.4
 */
function fold(onLeft, onRight) {
    return function (ma) { return function () { return fluture__WEBPACK_IMPORTED_MODULE_0__.promise(fluture__WEBPACK_IMPORTED_MODULE_0__.coalesce(onLeft)(onRight)(ma)).then(function (mb) { return mb(); }); }; };
}
/**
 * @since 0.6.4
 */
var swap = fluture__WEBPACK_IMPORTED_MODULE_0__.swap;
function futurify(f) {
    return function () {
        var args = Array.prototype.slice.call(arguments);
        return fluture__WEBPACK_IMPORTED_MODULE_0__.node(function (done) {
            var cbResolver = function (e, r) { return (e != null ? done(e) : done(null, r)); };
            f.apply(null, args.concat(cbResolver));
        });
    };
}
/**
 * @since 0.5.0
 */
var future = {
    URI: URI,
    map: function (fa, f) { return fluture__WEBPACK_IMPORTED_MODULE_0__.map(f)(fa); },
    of: fluture__WEBPACK_IMPORTED_MODULE_0__.resolve,
    ap: function (fab, fa) { return fluture__WEBPACK_IMPORTED_MODULE_0__.ap(fa)(fab); },
    chain: function (fa, f) { return fluture__WEBPACK_IMPORTED_MODULE_0__.chain(f)(fa); },
    bimap: function (fea, f, g) { return fluture__WEBPACK_IMPORTED_MODULE_0__.bimap(f)(g)(fea); },
    mapLeft: function (fea, f) { return fluture__WEBPACK_IMPORTED_MODULE_0__.mapRej(f)(fea); },
    alt: function (fx, f) { return fluture__WEBPACK_IMPORTED_MODULE_0__.alt(f())(fx); },
    chainRec: function (a, f) {
        return (function recur(a) {
            return future.chain(f(a), fp_ts_es6_Either__WEBPACK_IMPORTED_MODULE_1__.fold(recur, fluture__WEBPACK_IMPORTED_MODULE_0__.resolve));
        })(a);
    },
    throwError: left,
    fromTask: fluture__WEBPACK_IMPORTED_MODULE_0__.attemptP,
    fromIO: fluture__WEBPACK_IMPORTED_MODULE_0__.attempt
};
/**
 * @since 0.6.4
 */
function delay(millis) {
    return chain(fluture__WEBPACK_IMPORTED_MODULE_0__.after(millis));
}
var _a = (0,fp_ts_es6_pipeable__WEBPACK_IMPORTED_MODULE_2__.pipeable)(future), alt = _a.alt, ap = _a.ap, apFirst = _a.apFirst, apSecond = _a.apSecond, bimap = _a.bimap, chain = _a.chain, chainFirst = _a.chainFirst, flatten = _a.flatten, map = _a.map, mapLeft = _a.mapLeft, fromEither = _a.fromEither, fromOption = _a.fromOption, fromPredicate = _a.fromPredicate;



/***/ }),

/***/ "./node_modules/fp-ts/es6/Array.js":
/*!*****************************************!*\
  !*** ./node_modules/fp-ts/es6/Array.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getShow": () => (/* binding */ getShow),
/* harmony export */   "getMonoid": () => (/* binding */ getMonoid),
/* harmony export */   "getEq": () => (/* binding */ getEq),
/* harmony export */   "getOrd": () => (/* binding */ getOrd),
/* harmony export */   "makeBy": () => (/* binding */ makeBy),
/* harmony export */   "range": () => (/* binding */ range),
/* harmony export */   "replicate": () => (/* binding */ replicate),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "foldLeft": () => (/* binding */ foldLeft),
/* harmony export */   "foldRight": () => (/* binding */ foldRight),
/* harmony export */   "scanLeft": () => (/* binding */ scanLeft),
/* harmony export */   "scanRight": () => (/* binding */ scanRight),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "isNonEmpty": () => (/* binding */ isNonEmpty),
/* harmony export */   "isOutOfBound": () => (/* binding */ isOutOfBound),
/* harmony export */   "lookup": () => (/* binding */ lookup),
/* harmony export */   "cons": () => (/* binding */ cons),
/* harmony export */   "snoc": () => (/* binding */ snoc),
/* harmony export */   "head": () => (/* binding */ head),
/* harmony export */   "last": () => (/* binding */ last),
/* harmony export */   "tail": () => (/* binding */ tail),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "takeLeft": () => (/* binding */ takeLeft),
/* harmony export */   "takeRight": () => (/* binding */ takeRight),
/* harmony export */   "takeLeftWhile": () => (/* binding */ takeLeftWhile),
/* harmony export */   "spanLeft": () => (/* binding */ spanLeft),
/* harmony export */   "dropLeft": () => (/* binding */ dropLeft),
/* harmony export */   "dropRight": () => (/* binding */ dropRight),
/* harmony export */   "dropLeftWhile": () => (/* binding */ dropLeftWhile),
/* harmony export */   "findIndex": () => (/* binding */ findIndex),
/* harmony export */   "findFirst": () => (/* binding */ findFirst),
/* harmony export */   "findFirstMap": () => (/* binding */ findFirstMap),
/* harmony export */   "findLast": () => (/* binding */ findLast),
/* harmony export */   "findLastMap": () => (/* binding */ findLastMap),
/* harmony export */   "findLastIndex": () => (/* binding */ findLastIndex),
/* harmony export */   "copy": () => (/* binding */ copy),
/* harmony export */   "insertAt": () => (/* binding */ insertAt),
/* harmony export */   "updateAt": () => (/* binding */ updateAt),
/* harmony export */   "deleteAt": () => (/* binding */ deleteAt),
/* harmony export */   "modifyAt": () => (/* binding */ modifyAt),
/* harmony export */   "reverse": () => (/* binding */ reverse),
/* harmony export */   "rights": () => (/* binding */ rights),
/* harmony export */   "lefts": () => (/* binding */ lefts),
/* harmony export */   "sort": () => (/* binding */ sort),
/* harmony export */   "zipWith": () => (/* binding */ zipWith),
/* harmony export */   "zip": () => (/* binding */ zip),
/* harmony export */   "unzip": () => (/* binding */ unzip),
/* harmony export */   "prependToAll": () => (/* binding */ prependToAll),
/* harmony export */   "intersperse": () => (/* binding */ intersperse),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "elem": () => (/* binding */ elem),
/* harmony export */   "uniq": () => (/* binding */ uniq),
/* harmony export */   "sortBy": () => (/* binding */ sortBy),
/* harmony export */   "chop": () => (/* binding */ chop),
/* harmony export */   "splitAt": () => (/* binding */ splitAt),
/* harmony export */   "chunksOf": () => (/* binding */ chunksOf),
/* harmony export */   "comprehension": () => (/* binding */ comprehension),
/* harmony export */   "union": () => (/* binding */ union),
/* harmony export */   "intersection": () => (/* binding */ intersection),
/* harmony export */   "difference": () => (/* binding */ difference),
/* harmony export */   "of": () => (/* binding */ of),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "ap": () => (/* binding */ ap),
/* harmony export */   "apFirst": () => (/* binding */ apFirst),
/* harmony export */   "apSecond": () => (/* binding */ apSecond),
/* harmony export */   "chain": () => (/* binding */ chain),
/* harmony export */   "chainWithIndex": () => (/* binding */ chainWithIndex),
/* harmony export */   "chainFirst": () => (/* binding */ chainFirst),
/* harmony export */   "mapWithIndex": () => (/* binding */ mapWithIndex),
/* harmony export */   "compact": () => (/* binding */ compact),
/* harmony export */   "separate": () => (/* binding */ separate),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "filterMap": () => (/* binding */ filterMap),
/* harmony export */   "partition": () => (/* binding */ partition),
/* harmony export */   "partitionWithIndex": () => (/* binding */ partitionWithIndex),
/* harmony export */   "partitionMap": () => (/* binding */ partitionMap),
/* harmony export */   "partitionMapWithIndex": () => (/* binding */ partitionMapWithIndex),
/* harmony export */   "altW": () => (/* binding */ altW),
/* harmony export */   "alt": () => (/* binding */ alt),
/* harmony export */   "filterMapWithIndex": () => (/* binding */ filterMapWithIndex),
/* harmony export */   "filterWithIndex": () => (/* binding */ filterWithIndex),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "duplicate": () => (/* binding */ duplicate),
/* harmony export */   "foldMap": () => (/* binding */ foldMap),
/* harmony export */   "foldMapWithIndex": () => (/* binding */ foldMapWithIndex),
/* harmony export */   "reduce": () => (/* binding */ reduce),
/* harmony export */   "reduceWithIndex": () => (/* binding */ reduceWithIndex),
/* harmony export */   "reduceRight": () => (/* binding */ reduceRight),
/* harmony export */   "reduceRightWithIndex": () => (/* binding */ reduceRightWithIndex),
/* harmony export */   "traverse": () => (/* binding */ traverse),
/* harmony export */   "sequence": () => (/* binding */ sequence),
/* harmony export */   "traverseWithIndex": () => (/* binding */ traverseWithIndex),
/* harmony export */   "wither": () => (/* binding */ wither),
/* harmony export */   "wilt": () => (/* binding */ wilt),
/* harmony export */   "unfold": () => (/* binding */ unfold),
/* harmony export */   "zero": () => (/* binding */ zero),
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "Functor": () => (/* binding */ Functor),
/* harmony export */   "FunctorWithIndex": () => (/* binding */ FunctorWithIndex),
/* harmony export */   "Applicative": () => (/* binding */ Applicative),
/* harmony export */   "Monad": () => (/* binding */ Monad),
/* harmony export */   "Unfoldable": () => (/* binding */ Unfoldable),
/* harmony export */   "Alt": () => (/* binding */ Alt),
/* harmony export */   "Alternative": () => (/* binding */ Alternative),
/* harmony export */   "Extend": () => (/* binding */ Extend),
/* harmony export */   "Compactable": () => (/* binding */ Compactable),
/* harmony export */   "Filterable": () => (/* binding */ Filterable),
/* harmony export */   "FilterableWithIndex": () => (/* binding */ FilterableWithIndex),
/* harmony export */   "Foldable": () => (/* binding */ Foldable),
/* harmony export */   "FoldableWithIndex": () => (/* binding */ FoldableWithIndex),
/* harmony export */   "Traversable": () => (/* binding */ Traversable),
/* harmony export */   "TraversableWithIndex": () => (/* binding */ TraversableWithIndex),
/* harmony export */   "Witherable": () => (/* binding */ Witherable),
/* harmony export */   "array": () => (/* binding */ array),
/* harmony export */   "unsafeInsertAt": () => (/* binding */ unsafeInsertAt),
/* harmony export */   "unsafeUpdateAt": () => (/* binding */ unsafeUpdateAt),
/* harmony export */   "unsafeDeleteAt": () => (/* binding */ unsafeDeleteAt),
/* harmony export */   "empty": () => (/* binding */ empty),
/* harmony export */   "every": () => (/* binding */ every),
/* harmony export */   "some": () => (/* binding */ some),
/* harmony export */   "Do": () => (/* binding */ Do),
/* harmony export */   "bindTo": () => (/* binding */ bindTo),
/* harmony export */   "bind": () => (/* binding */ bind),
/* harmony export */   "apS": () => (/* binding */ apS)
/* harmony export */ });
/* harmony import */ var _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReadonlyArray */ "./node_modules/fp-ts/es6/ReadonlyArray.js");

// -------------------------------------------------------------------------------------
// model
// -------------------------------------------------------------------------------------
/* tslint:disable:readonly-array */
/**
 * @category instances
 * @since 2.0.0
 */
var getShow = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.getShow;
/**
 * Returns a `Monoid` for `Array<A>`
 *
 * @example
 * import { getMonoid } from 'fp-ts/Array'
 *
 * const M = getMonoid<number>()
 * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])
 *
 * @category instances
 * @since 2.0.0
 */
var getMonoid = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.getMonoid;
/**
 * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two
 * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of
 * different lengths, the result is non equality.
 *
 * @example
 * import { eqString } from 'fp-ts/Eq'
 * import { getEq } from 'fp-ts/Array'
 *
 * const E = getEq(eqString)
 * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)
 * assert.strictEqual(E.equals(['a'], []), false)
 *
 * @category instances
 * @since 2.0.0
 */
var getEq = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.getEq;
/**
 * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such
 * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in
 * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have
 * the same length, the result is equality.
 *
 * @example
 * import { getOrd } from 'fp-ts/Array'
 * import { ordString } from 'fp-ts/Ord'
 *
 * const O = getOrd(ordString)
 * assert.strictEqual(O.compare(['b'], ['a']), 1)
 * assert.strictEqual(O.compare(['a'], ['a']), 0)
 * assert.strictEqual(O.compare(['a'], ['b']), -1)
 *
 * @category instances
 * @since 2.0.0
 */
var getOrd = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.getOrd;
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Return a list of length `n` with element `i` initialized with `f(i)`
 *
 * @example
 * import { makeBy } from 'fp-ts/Array'
 *
 * const double = (n: number): number => n * 2
 * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])
 *
 * @category constructors
 * @since 2.0.0
 */
var makeBy = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.makeBy;
/**
 * Create an array containing a range of integers, including both endpoints
 *
 * @example
 * import { range } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])
 *
 * @category constructors
 * @since 2.0.0
 */
var range = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.range;
/**
 * Create an array containing a value repeated the specified number of times
 *
 * @example
 * import { replicate } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])
 *
 * @category constructors
 * @since 2.0.0
 */
var replicate = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.replicate;
/**
 * Removes one level of nesting.
 *
 * Derivable from `Monad`.
 *
 * @example
 * import { flatten } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var flatten = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.flatten;
/**
 * Break an array into its first element and remaining elements
 *
 * @example
 * import { foldLeft } from 'fp-ts/Array'
 *
 * const len: <A>(as: Array<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))
 * assert.strictEqual(len([1, 2, 3]), 3)
 *
 * @category destructors
 * @since 2.0.0
 */
var foldLeft = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.foldLeft;
/**
 * Break an array into its initial elements and the last element
 *
 * @category destructors
 * @since 2.0.0
 */
var foldRight = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.foldRight;
/**
 * Same as `reduce` but it carries over the intermediate steps
 *
 * @example
 * import { scanLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])
 *
 * @category combinators
 * @since 2.0.0
 */
var scanLeft = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.scanLeft;
/**
 * Fold an array from the right, keeping all intermediate results instead of only the final result
 *
 * @example
 * import { scanRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])
 *
 * @category combinators
 * @since 2.0.0
 */
var scanRight = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.scanRight;
/**
 * Test whether an array is empty
 *
 * @example
 * import { isEmpty } from 'fp-ts/Array'
 *
 * assert.strictEqual(isEmpty([]), true)
 *
 * @since 2.0.0
 */
var isEmpty = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.isEmpty;
/**
 * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`
 *
 * @category guards
 * @since 2.0.0
 */
var isNonEmpty = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.isNonEmpty;
/**
 * Test whether an array contains a particular index
 *
 * @since 2.0.0
 */
var isOutOfBound = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.isOutOfBound;
// TODO: remove non-curried overloading in v3
/**
 * This function provides a safe way to read a value at a particular index from an array
 *
 * @example
 * import { lookup } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))
 * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)
 *
 * @since 2.0.0
 */
var lookup = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.lookup;
// TODO: remove non-curried overloading in v3
/**
 * Attaches an element to the front of an array, creating a new non empty array
 *
 * @example
 * import { cons } from 'fp-ts/Array'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], cons(0)), [0, 1, 2, 3])
 *
 * @category constructors
 * @since 2.0.0
 */
var cons = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.cons;
// TODO: curry in v3
/**
 * Append an element to the end of an array, creating a new non empty array
 *
 * @example
 * import { snoc } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.0.0
 */
var snoc = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.snoc;
/**
 * Get the first element in an array, or `None` if the array is empty
 *
 * @example
 * import { head } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(head([1, 2, 3]), some(1))
 * assert.deepStrictEqual(head([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var head = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.head;
/**
 * Get the last element in an array, or `None` if the array is empty
 *
 * @example
 * import { last } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(last([1, 2, 3]), some(3))
 * assert.deepStrictEqual(last([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var last = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.last;
/**
 * Get all but the first element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { tail } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(tail([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var tail = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.tail;
/**
 * Get all but the last element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { init } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))
 * assert.deepStrictEqual(init([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var init = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.init;
/**
 * Keep only a number of elements from the start of an array, creating a new array.
 * `n` must be a natural number
 *
 * @example
 * import { takeLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var takeLeft = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.takeLeft;
/**
 * Keep only a number of elements from the end of an array, creating a new array.
 * `n` must be a natural number
 *
 * @example
 * import { takeRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])
 *
 * @category combinators
 * @since 2.0.0
 */
var takeRight = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.takeRight;
function takeLeftWhile(predicate) {
    return _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.takeLeftWhile(predicate);
}
function spanLeft(predicate) {
    return _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.spanLeft(predicate);
}
/* tslint:enable:readonly-keyword */
/**
 * Drop a number of elements from the start of an array, creating a new array
 *
 * @example
 * import { dropLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropLeft = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.dropLeft;
/**
 * Drop a number of elements from the end of an array, creating a new array
 *
 * @example
 * import { dropRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropRight = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.dropRight;
/**
 * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array
 *
 * @example
 * import { dropLeftWhile } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropLeftWhile = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.dropLeftWhile;
/**
 * Find the first index for which a predicate holds
 *
 * @example
 * import { findIndex } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)
 *
 * @since 2.0.0
 */
var findIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findIndex;
function findFirst(predicate) {
    return _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findFirst(predicate);
}
/**
 * Find the first element returned by an option based selector function
 *
 * @example
 * import { findFirstMap } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   name: string
 *   age?: number
 * }
 *
 * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the first person that has an age
 * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))
 *
 * @category destructors
 * @since 2.0.0
 */
var findFirstMap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findFirstMap;
function findLast(predicate) {
    return _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findLast(predicate);
}
/**
 * Find the last element returned by an option based selector function
 *
 * @example
 * import { findLastMap } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   name: string
 *   age?: number
 * }
 *
 * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the last person that has an age
 * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))
 *
 * @category destructors
 * @since 2.0.0
 */
var findLastMap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findLastMap;
/**
 * Returns the index of the last element of the list which matches the predicate
 *
 * @example
 * import { findLastIndex } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface X {
 *   a: number
 *   b: number
 * }
 * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]
 * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))
 * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)
 *
 *
 * @since 2.0.0
 */
var findLastIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.findLastIndex;
/**
 * @category combinators
 * @since 2.0.0
 */
var copy = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.toArray;
/**
 * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { insertAt } from 'fp-ts/Array'
 * import { some } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))
 *
 * @since 2.0.0
 */
var insertAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.insertAt;
/**
 * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { updateAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))
 * assert.deepStrictEqual(updateAt(1, 1)([]), none)
 *
 * @since 2.0.0
 */
var updateAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.updateAt;
/**
 * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { deleteAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(deleteAt(1)([]), none)
 *
 * @since 2.0.0
 */
var deleteAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.deleteAt;
/**
 * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out
 * of bounds
 *
 * @example
 * import { modifyAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * const double = (x: number): number => x * 2
 * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))
 * assert.deepStrictEqual(modifyAt(1, double)([]), none)
 *
 * @since 2.0.0
 */
var modifyAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.modifyAt;
/**
 * Reverse an array, creating a new array
 *
 * @example
 * import { reverse } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])
 *
 * @category combinators
 * @since 2.0.0
 */
var reverse = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.reverse;
/**
 * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order
 *
 * @example
 * import { rights } from 'fp-ts/Array'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var rights = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.rights;
/**
 * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order
 *
 * @example
 * import { lefts } from 'fp-ts/Array'
 * import { left, right } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])
 *
 * @category combinators
 * @since 2.0.0
 */
var lefts = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.lefts;
/**
 * Sort the elements of an array in increasing order, creating a new array
 *
 * @example
 * import { sort } from 'fp-ts/Array'
 * import { ordNumber } from 'fp-ts/Ord'
 *
 * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var sort = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.sort;
/**
 * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one
 * input array is short, excess elements of the longer array are discarded.
 *
 * @example
 * import { zipWith } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])
 *
 * @category combinators
 * @since 2.0.0
 */
var zipWith = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.zipWith;
// TODO: remove non-curried overloading in v3
/**
 * Takes two arrays and returns an array of corresponding pairs. If one input array is short, excess elements of the
 * longer array are discarded
 *
 * @example
 * import { zip } from 'fp-ts/Array'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], zip(['a', 'b', 'c', 'd'])), [[1, 'a'], [2, 'b'], [3, 'c']])
 *
 * @category combinators
 * @since 2.0.0
 */
var zip = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.zip;
/**
 * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays
 *
 * @example
 * import { unzip } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])
 *
 * @since 2.0.0
 */
var unzip = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.unzip;
/**
 * Prepend an element to every member of an array
 *
 * @example
 * import { prependToAll } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var prependToAll = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.prependToAll;
/**
 * Places an element in between members of an array
 *
 * @example
 * import { intersperse } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var intersperse = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.intersperse;
/**
 * Rotate an array to the right by `n` steps
 *
 * @example
 * import { rotate } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var rotate = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.rotate;
// TODO: remove non-curried overloading in v3
/**
 * Test if a value is a member of an array. Takes a `Eq<A>` as a single
 * argument which returns the function to use to search for a value of type `A` in
 * an array of type `Array<A>`.
 *
 * @example
 * import { elem } from 'fp-ts/Array'
 * import { eqNumber } from 'fp-ts/Eq'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(2)), true)
 * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(0)), false)
 *
 * @since 2.0.0
 */
var elem = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.elem;
/**
 * Remove duplicates from an array, keeping the first occurrence of an element.
 *
 * @example
 * import { uniq } from 'fp-ts/Array'
 * import { eqNumber } from 'fp-ts/Eq'
 *
 * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var uniq = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.uniq;
/**
 * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,
 * etc...
 *
 * @example
 * import { sortBy } from 'fp-ts/Array'
 * import { ord, ordString, ordNumber } from 'fp-ts/Ord'
 *
 * interface Person {
 *   name: string
 *   age: number
 * }
 * const byName = ord.contramap(ordString, (p: Person) => p.name)
 * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)
 *
 * const sortByNameByAge = sortBy([byName, byAge])
 *
 * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]
 * assert.deepStrictEqual(sortByNameByAge(persons), [
 *   { name: 'a', age: 1 },
 *   { name: 'b', age: 2 },
 *   { name: 'b', age: 3 },
 *   { name: 'c', age: 2 }
 * ])
 *
 * @category combinators
 * @since 2.0.0
 */
var sortBy = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.sortBy;
/**
 * A useful recursion pattern for processing an array to produce a new array, often used for "chopping" up the input
 * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a
 * value and the rest of the array.
 *
 * @example
 * import { Eq, eqNumber } from 'fp-ts/Eq'
 * import { chop, spanLeft } from 'fp-ts/Array'
 *
 * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {
 *   return chop(as => {
 *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)
 *     return [init, rest]
 *   })
 * }
 * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])
 *
 * @category combinators
 * @since 2.0.0
 */
var chop = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.chop;
/**
 * Splits an array into two pieces, the first piece has `n` elements.
 *
 * @example
 * import { splitAt } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])
 *
 * @since 2.0.0
 */
var splitAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.splitAt;
/**
 * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of
 * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive
 * definition of `chunksOf`; it satisfies the property that
 *
 * ```ts
 * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))
 * ```
 *
 * whenever `n` evenly divides the length of `xs`.
 *
 * @example
 * import { chunksOf } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])
 *
 * @since 2.0.0
 */
var chunksOf = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.chunksOf;
function comprehension(input, f, g) {
    if (g === void 0) { g = function () { return true; }; }
    return _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.comprehension(input, f, g);
}
// TODO: remove non-curried overloading in v3
/**
 * Creates an array of unique values, in order, from all given arrays using a `Eq` for equality comparisons
 *
 * @example
 * import { union } from 'fp-ts/Array'
 * import { eqNumber } from 'fp-ts/Eq'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2], union(eqNumber)([2, 3])), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var union = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.union;
// TODO: remove non-curried overloading in v3
/**
 * Creates an array of unique values that are included in all given arrays using a `Eq` for equality
 * comparisons. The order and references of result values are determined by the first array.
 *
 * @example
 * import { intersection } from 'fp-ts/Array'
 * import { eqNumber } from 'fp-ts/Eq'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2], intersection(eqNumber)([2, 3])), [2])
 *
 * @category combinators
 * @since 2.0.0
 */
var intersection = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.intersection;
// TODO: remove non-curried overloading in v3
/**
 * Creates an array of array values not included in the other given array using a `Eq` for equality
 * comparisons. The order and references of result values are determined by the first array.
 *
 * @example
 * import { difference } from 'fp-ts/Array'
 * import { eqNumber } from 'fp-ts/Eq'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2], difference(eqNumber)([2, 3])), [1])
 *
 * @category combinators
 * @since 2.0.0
 */
var difference = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.difference;
/**
 * Wrap a value into the type constructor.
 *
 * @category Applicative
 * @since 2.0.0
 */
var of = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.of;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var map_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Monad.map;
var ap_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Monad.ap;
var chain_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Monad.chain;
var mapWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FunctorWithIndex.mapWithIndex;
var filter_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Filterable.filter;
var filterMap_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Filterable.filterMap;
var partition_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Filterable.partition;
var partitionMap_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Filterable.partitionMap;
var filterWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FilterableWithIndex.filterWithIndex;
var filterMapWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FilterableWithIndex.filterMapWithIndex;
var partitionWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FilterableWithIndex.partitionWithIndex;
var partitionMapWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FilterableWithIndex.partitionMapWithIndex;
var reduce_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Foldable.reduce;
var foldMap_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Foldable.foldMap;
var reduceRight_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Foldable.reduceRight;
var traverse_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Traversable.traverse;
var alt_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Alternative.alt;
var reduceWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FoldableWithIndex.reduceWithIndex;
var foldMapWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FoldableWithIndex.foldMapWithIndex;
var reduceRightWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.FoldableWithIndex.reduceRightWithIndex;
var traverseWithIndex_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.TraversableWithIndex.traverseWithIndex;
var extend_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Extend.extend;
var wither_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Witherable.wither;
var wilt_ = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Witherable.wilt;
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.map;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.ap;
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apFirst = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.apFirst;
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apSecond = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.apSecond;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.chain;
/**
 * @since 2.7.0
 */
var chainWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.chainWithIndex;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.0.0
 */
var chainFirst = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.chainFirst;
/**
 * @category FunctorWithIndex
 * @since 2.0.0
 */
var mapWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.mapWithIndex;
/**
 * @category Compactable
 * @since 2.0.0
 */
var compact = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.compact;
/**
 * @category Compactable
 * @since 2.0.0
 */
var separate = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.separate;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filter = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.filter;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filterMap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.filterMap;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partition = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.partition;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var partitionWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.partitionWithIndex;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partitionMap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.partitionMap;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var partitionMapWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.partitionMapWithIndex;
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.0.0
 */
var alt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.alt;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var filterMapWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.filterMapWithIndex;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var filterWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.filterWithIndex;
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.0.0
 */
var duplicate = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.duplicate;
/**
 * @category Foldable
 * @since 2.0.0
 */
var foldMap = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.foldMap;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
var foldMapWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.foldMapWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduce = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.reduce;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
var reduceWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.reduceWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduceRight = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.reduceRight;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
var reduceRightWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.reduceRightWithIndex;
/**
 * **for optimized and stack safe version check the data types `traverseArray` function**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.traverse;
/**
 * **for optimized and stack safe version check the data types `sequenceArray` function**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.sequence;
/**
 * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**
 * @category TraversableWithIndex
 * @since 2.6.3
 */
var traverseWithIndex = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.traverseWithIndex;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.wither;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.wilt;
/**
 * @category Unfoldable
 * @since 2.6.6
 */
var unfold = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.unfold;
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.Alternative.zero;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
var URI = 'Array';
/**
 * @category instances
 * @since 2.7.0
 */
var Functor = {
    URI: URI,
    map: map_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FunctorWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Applicative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of
};
/**
 * @category instances
 * @since 2.7.0
 */
var Monad = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Unfoldable = {
    URI: URI,
    unfold: unfold
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alt = {
    URI: URI,
    map: map_,
    alt: alt_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alternative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    alt: alt_,
    zero: zero
};
/**
 * @category instances
 * @since 2.7.0
 */
var Extend = {
    URI: URI,
    map: map_,
    extend: extend_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Compactable = {
    URI: URI,
    compact: compact,
    separate: separate
};
/**
 * @category instances
 * @since 2.7.0
 */
var Filterable = {
    URI: URI,
    map: map_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FilterableWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    partitionMapWithIndex: partitionMapWithIndex_,
    partitionWithIndex: partitionWithIndex_,
    filterMapWithIndex: filterMapWithIndex_,
    filterWithIndex: filterWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Foldable = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FoldableWithIndex = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Traversable = {
    URI: URI,
    map: map_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
var TraversableWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_,
    traverse: traverse_,
    sequence: sequence,
    traverseWithIndex: traverseWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Witherable = {
    URI: URI,
    map: map_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    wither: wither_,
    wilt: wilt_
};
// TODO: remove in v3
/**
 * @category instances
 * @since 2.0.0
 */
var array = {
    URI: URI,
    compact: compact,
    separate: separate,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    mapWithIndex: mapWithIndex_,
    partitionMapWithIndex: partitionMapWithIndex_,
    partitionWithIndex: partitionWithIndex_,
    filterMapWithIndex: filterMapWithIndex_,
    filterWithIndex: filterWithIndex_,
    alt: alt_,
    zero: zero,
    unfold: unfold,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_,
    traverseWithIndex: traverseWithIndex_,
    extend: extend_,
    wither: wither_,
    wilt: wilt_
};
// -------------------------------------------------------------------------------------
// unsafe
// -------------------------------------------------------------------------------------
/**
 * @category unsafe
 * @since 2.0.0
 */
var unsafeInsertAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.unsafeInsertAt;
/**
 * @category unsafe
 * @since 2.0.0
 */
var unsafeUpdateAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.unsafeUpdateAt;
/**
 * @category unsafe
 * @since 2.0.0
 */
var unsafeDeleteAt = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.unsafeDeleteAt;
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * An empty array
 *
 * @since 2.0.0
 */
var empty = [];
/**
 * @since 2.9.0
 */
var every = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.every;
/**
 * @since 2.9.0
 */
var some = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.some;
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
var Do = 
/*#__PURE__*/
of({});
/**
 * @since 2.8.0
 */
var bindTo = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.bindTo;
/**
 * @since 2.8.0
 */
var bind = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.bind;
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
var apS = _ReadonlyArray__WEBPACK_IMPORTED_MODULE_0__.apS;


/***/ }),

/***/ "./node_modules/fp-ts/es6/ChainRec.js":
/*!********************************************!*\
  !*** ./node_modules/fp-ts/es6/ChainRec.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tailRec": () => (/* binding */ tailRec)
/* harmony export */ });
/**
 * @since 2.0.0
 */
function tailRec(a, f) {
    var v = f(a);
    while (v._tag === 'Left') {
        v = f(v.left);
    }
    return v.right;
}


/***/ }),

/***/ "./node_modules/fp-ts/es6/Either.js":
/*!******************************************!*\
  !*** ./node_modules/fp-ts/es6/Either.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isLeft": () => (/* binding */ isLeft),
/* harmony export */   "isRight": () => (/* binding */ isRight),
/* harmony export */   "left": () => (/* binding */ left),
/* harmony export */   "right": () => (/* binding */ right),
/* harmony export */   "fromNullable": () => (/* binding */ fromNullable),
/* harmony export */   "tryCatch": () => (/* binding */ tryCatch),
/* harmony export */   "parseJSON": () => (/* binding */ parseJSON),
/* harmony export */   "stringifyJSON": () => (/* binding */ stringifyJSON),
/* harmony export */   "fromOption": () => (/* binding */ fromOption),
/* harmony export */   "fromPredicate": () => (/* binding */ fromPredicate),
/* harmony export */   "fold": () => (/* binding */ fold),
/* harmony export */   "getOrElseW": () => (/* binding */ getOrElseW),
/* harmony export */   "getOrElse": () => (/* binding */ getOrElse),
/* harmony export */   "fromNullableK": () => (/* binding */ fromNullableK),
/* harmony export */   "chainNullableK": () => (/* binding */ chainNullableK),
/* harmony export */   "swap": () => (/* binding */ swap),
/* harmony export */   "orElse": () => (/* binding */ orElse),
/* harmony export */   "filterOrElseW": () => (/* binding */ filterOrElseW),
/* harmony export */   "filterOrElse": () => (/* binding */ filterOrElse),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "bimap": () => (/* binding */ bimap),
/* harmony export */   "mapLeft": () => (/* binding */ mapLeft),
/* harmony export */   "apW": () => (/* binding */ apW),
/* harmony export */   "ap": () => (/* binding */ ap),
/* harmony export */   "apFirst": () => (/* binding */ apFirst),
/* harmony export */   "apSecond": () => (/* binding */ apSecond),
/* harmony export */   "of": () => (/* binding */ of),
/* harmony export */   "chainW": () => (/* binding */ chainW),
/* harmony export */   "chain": () => (/* binding */ chain),
/* harmony export */   "chainFirstW": () => (/* binding */ chainFirstW),
/* harmony export */   "chainFirst": () => (/* binding */ chainFirst),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "altW": () => (/* binding */ altW),
/* harmony export */   "alt": () => (/* binding */ alt),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "duplicate": () => (/* binding */ duplicate),
/* harmony export */   "reduce": () => (/* binding */ reduce),
/* harmony export */   "foldMap": () => (/* binding */ foldMap),
/* harmony export */   "reduceRight": () => (/* binding */ reduceRight),
/* harmony export */   "traverse": () => (/* binding */ traverse),
/* harmony export */   "sequence": () => (/* binding */ sequence),
/* harmony export */   "throwError": () => (/* binding */ throwError),
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "getShow": () => (/* binding */ getShow),
/* harmony export */   "getEq": () => (/* binding */ getEq),
/* harmony export */   "getSemigroup": () => (/* binding */ getSemigroup),
/* harmony export */   "getApplySemigroup": () => (/* binding */ getApplySemigroup),
/* harmony export */   "getApplyMonoid": () => (/* binding */ getApplyMonoid),
/* harmony export */   "getFilterable": () => (/* binding */ getFilterable),
/* harmony export */   "getWitherable": () => (/* binding */ getWitherable),
/* harmony export */   "getApplicativeValidation": () => (/* binding */ getApplicativeValidation),
/* harmony export */   "getAltValidation": () => (/* binding */ getAltValidation),
/* harmony export */   "getValidation": () => (/* binding */ getValidation),
/* harmony export */   "getValidationSemigroup": () => (/* binding */ getValidationSemigroup),
/* harmony export */   "Functor": () => (/* binding */ Functor),
/* harmony export */   "Applicative": () => (/* binding */ Applicative),
/* harmony export */   "Monad": () => (/* binding */ Monad),
/* harmony export */   "Foldable": () => (/* binding */ Foldable),
/* harmony export */   "Traversable": () => (/* binding */ Traversable),
/* harmony export */   "Bifunctor": () => (/* binding */ Bifunctor),
/* harmony export */   "Alt": () => (/* binding */ Alt),
/* harmony export */   "Extend": () => (/* binding */ Extend),
/* harmony export */   "ChainRec": () => (/* binding */ ChainRec),
/* harmony export */   "MonadThrow": () => (/* binding */ MonadThrow),
/* harmony export */   "getValidationMonoid": () => (/* binding */ getValidationMonoid),
/* harmony export */   "either": () => (/* binding */ either),
/* harmony export */   "toError": () => (/* binding */ toError),
/* harmony export */   "elem": () => (/* binding */ elem),
/* harmony export */   "exists": () => (/* binding */ exists),
/* harmony export */   "Do": () => (/* binding */ Do),
/* harmony export */   "bindTo": () => (/* binding */ bindTo),
/* harmony export */   "bindW": () => (/* binding */ bindW),
/* harmony export */   "bind": () => (/* binding */ bind),
/* harmony export */   "apSW": () => (/* binding */ apSW),
/* harmony export */   "apS": () => (/* binding */ apS),
/* harmony export */   "traverseArrayWithIndex": () => (/* binding */ traverseArrayWithIndex),
/* harmony export */   "traverseArray": () => (/* binding */ traverseArray),
/* harmony export */   "sequenceArray": () => (/* binding */ sequenceArray)
/* harmony export */ });
/* harmony import */ var _ChainRec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChainRec */ "./node_modules/fp-ts/es6/ChainRec.js");
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./function */ "./node_modules/fp-ts/es6/function.js");


// -------------------------------------------------------------------------------------
// guards
// -------------------------------------------------------------------------------------
/**
 * Returns `true` if the either is an instance of `Left`, `false` otherwise.
 *
 * @category guards
 * @since 2.0.0
 */
var isLeft = function (ma) { return ma._tag === 'Left'; };
/**
 * Returns `true` if the either is an instance of `Right`, `false` otherwise.
 *
 * @category guards
 * @since 2.0.0
 */
var isRight = function (ma) { return ma._tag === 'Right'; };
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this
 * structure.
 *
 * @category constructors
 * @since 2.0.0
 */
var left = function (e) { return ({ _tag: 'Left', left: e }); };
/**
 * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias
 * of this structure.
 *
 * @category constructors
 * @since 2.0.0
 */
var right = function (a) { return ({ _tag: 'Right', right: a }); };
// TODO: make lazy in v3
/**
 * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use
 * the provided default as a `Left`.
 *
 * @example
 * import { fromNullable, left, right } from 'fp-ts/Either'
 *
 * const parse = fromNullable('nully')
 *
 * assert.deepStrictEqual(parse(1), right(1))
 * assert.deepStrictEqual(parse(null), left('nully'))
 *
 * @category constructors
 * @since 2.0.0
 */
function fromNullable(e) {
    return function (a) { return (a == null ? left(e) : right(a)); };
}
// TODO: `onError => Lazy<A> => Either` in v3
/**
 * Constructs a new `Either` from a function that might throw.
 *
 * @example
 * import { Either, left, right, tryCatch } from 'fp-ts/Either'
 *
 * const unsafeHead = <A>(as: Array<A>): A => {
 *   if (as.length > 0) {
 *     return as[0]
 *   } else {
 *     throw new Error('empty array')
 *   }
 * }
 *
 * const head = <A>(as: Array<A>): Either<Error, A> => {
 *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))
 * }
 *
 * assert.deepStrictEqual(head([]), left(new Error('empty array')))
 * assert.deepStrictEqual(head([1, 2, 3]), right(1))
 *
 * @category constructors
 * @since 2.0.0
 */
function tryCatch(f, onError) {
    try {
        return right(f());
    }
    catch (e) {
        return left(onError(e));
    }
}
// TODO curry in v3
/**
 * Converts a JavaScript Object Notation (JSON) string into an object.
 *
 * @example
 * import { parseJSON, toError, right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(parseJSON('{"a":1}', toError), right({ a: 1 }))
 * assert.deepStrictEqual(parseJSON('{"a":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))
 *
 * @category constructors
 * @since 2.0.0
 */
function parseJSON(s, onError) {
    return tryCatch(function () { return JSON.parse(s); }, onError);
}
// TODO curry in v3
/**
 * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
 *
 * @example
 * import * as E from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(E.stringifyJSON({ a: 1 }, E.toError), E.right('{"a":1}'))
 * const circular: any = { ref: null }
 * circular.ref = circular
 * assert.deepStrictEqual(
 *   pipe(
 *     E.stringifyJSON(circular, E.toError),
 *     E.mapLeft(e => e.message.includes('Converting circular structure to JSON'))
 *   ),
 *   E.left(true)
 * )
 *
 * @category constructors
 * @since 2.0.0
 */
function stringifyJSON(u, onError) {
    return tryCatch(function () { return JSON.stringify(u); }, onError);
}
/**
 * Derivable from `MonadThrow`.
 *
 * @example
 * import { fromOption, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 * import { none, some } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     some(1),
 *     fromOption(() => 'error')
 *   ),
 *   right(1)
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     none,
 *     fromOption(() => 'error')
 *   ),
 *   left('error')
 * )
 *
 * @category constructors
 * @since 2.0.0
 */
var fromOption = function (onNone) { return function (ma) {
    return ma._tag === 'None' ? left(onNone()) : right(ma.value);
}; };
/**
 * Derivable from `MonadThrow`.
 *
 * @example
 * import { fromPredicate, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     1,
 *     fromPredicate(
 *       (n) => n > 0,
 *       () => 'error'
 *     )
 *   ),
 *   right(1)
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     -1,
 *     fromPredicate(
 *       (n) => n > 0,
 *       () => 'error'
 *     )
 *   ),
 *   left('error')
 * )
 *
 * @category constructors
 * @since 2.0.0
 */
var fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); }; };
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,
 * if the value is a `Right` the inner value is applied to the second function.
 *
 * @example
 * import { fold, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 *
 * function onLeft(errors: Array<string>): string {
 *   return `Errors: ${errors.join(', ')}`
 * }
 *
 * function onRight(value: number): string {
 *   return `Ok: ${value}`
 * }
 *
 * assert.strictEqual(
 *   pipe(
 *     right(1),
 *     fold(onLeft, onRight)
 *   ),
 *   'Ok: 1'
 * )
 * assert.strictEqual(
 *   pipe(
 *     left(['error 1', 'error 2']),
 *     fold(onLeft, onRight)
 *   ),
 *   'Errors: error 1, error 2'
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
function fold(onLeft, onRight) {
    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : onRight(ma.right)); };
}
/**
 * Less strict version of [`getOrElse`](#getOrElse).
 *
 * @category destructors
 * @since 2.6.0
 */
var getOrElseW = function (onLeft) { return function (ma) {
    return isLeft(ma) ? onLeft(ma.left) : ma.right;
}; };
/**
 * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.
 *
 * @example
 * import { getOrElse, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     right(1),
 *     getOrElse(() => 0)
 *   ),
 *   1
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     left('error'),
 *     getOrElse(() => 0)
 *   ),
 *   0
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
var getOrElse = getOrElseW;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 2.9.0
 */
function fromNullableK(e) {
    var from = fromNullable(e);
    return function (f) { return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return from(f.apply(void 0, a));
    }; };
}
/**
 * @category combinators
 * @since 2.9.0
 */
function chainNullableK(e) {
    var from = fromNullableK(e);
    return function (f) { return chain(from(f)); };
}
/**
 * Returns a `Right` if is a `Left` (and vice versa).
 *
 * @category combinators
 * @since 2.0.0
 */
function swap(ma) {
    return isLeft(ma) ? right(ma.left) : left(ma.right);
}
/**
 * Useful for recovering from errors.
 *
 * @category combinators
 * @since 2.0.0
 */
function orElse(onLeft) {
    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma); };
}
/**
 * Less strict version of [`filterOrElse`](#filterOrElse).
 *
 * @since 2.9.0
 */
var filterOrElseW = function (predicate, onFalse) {
    return chainW(function (a) { return (predicate(a) ? right(a) : left(onFalse(a))); });
};
/**
 * Derivable from `MonadThrow`.
 *
 * @example
 * import { filterOrElse, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     right(1),
 *     filterOrElse(
 *       (n) => n > 0,
 *       () => 'error'
 *     )
 *   ),
 *   right(1)
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     right(-1),
 *     filterOrElse(
 *       (n) => n > 0,
 *       () => 'error'
 *     )
 *   ),
 *   left('error')
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     left('a'),
 *     filterOrElse(
 *       (n) => n > 0,
 *       () => 'error'
 *     )
 *   ),
 *   left('a')
 * )
 *
 * @category combinators
 * @since 2.0.0
 */
var filterOrElse = filterOrElseW;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var map_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, map(f)); };
var ap_ = function (fab, fa) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fab, ap(fa)); };
/* istanbul ignore next */
var chain_ = function (ma, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ma, chain(f)); };
/* istanbul ignore next */
var reduce_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, reduce(b, f)); };
/* istanbul ignore next */
var foldMap_ = function (M) { return function (fa, f) {
    var foldMapM = foldMap(M);
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, foldMapM(f));
}; };
/* istanbul ignore next */
var reduceRight_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, reduceRight(b, f)); };
var traverse_ = function (F) {
    var traverseF = traverse(F);
    return function (ta, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ta, traverseF(f)); };
};
var bimap_ = function (fa, f, g) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, bimap(f, g)); };
var mapLeft_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, mapLeft(f)); };
/* istanbul ignore next */
var alt_ = function (fa, that) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, alt(that)); };
/* istanbul ignore next */
var extend_ = function (wa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(wa, extend(f)); };
var chainRec_ = function (a, f) {
    return (0,_ChainRec__WEBPACK_IMPORTED_MODULE_1__.tailRec)(f(a), function (e) {
        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));
    });
};
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = function (f) { return function (fa) {
    return isLeft(fa) ? fa : right(f(fa.right));
}; };
/**
 * Map a pair of functions over the two type arguments of the bifunctor.
 *
 * @category Bifunctor
 * @since 2.0.0
 */
var bimap = function (f, g) { return function (fa) { return (isLeft(fa) ? left(f(fa.left)) : right(g(fa.right))); }; };
/**
 * Map a function over the first type argument of a bifunctor.
 *
 * @category Bifunctor
 * @since 2.0.0
 */
var mapLeft = function (f) { return function (fa) {
    return isLeft(fa) ? left(f(fa.left)) : fa;
}; };
/**
 * Less strict version of [`ap`](#ap).
 *
 * @category Apply
 * @since 2.8.0
 */
var apW = function (fa) { return function (fab) {
    return isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right));
}; };
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = apW;
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apFirst = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function (a) { return function () { return a; }; }), ap(fb));
};
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apSecond = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function () { return function (b) { return b; }; }), ap(fb));
};
/**
 * Wrap a value into the type constructor.
 *
 * Equivalent to [`right`](#right).
 *
 * @example
 * import * as E from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(E.of('a'), E.right('a'))
 *
 * @category Applicative
 * @since 2.7.0
 */
var of = right;
/**
 * Less strict version of [`chain`](#chain).
 *
 * @category Monad
 * @since 2.6.0
 */
var chainW = function (f) { return function (ma) {
    return isLeft(ma) ? ma : f(ma.right);
}; };
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = chainW;
/**
 * Less strict version of [`chainFirst`](#chainFirst)
 *
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.8.0
 */
var chainFirstW = function (f) { return function (ma) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ma, chainW(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(f(a), map(function () { return a; }));
    }));
}; };
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.0.0
 */
var chainFirst = chainFirstW;
/**
 * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.
 *
 * Derivable from `Monad`.
 *
 * @example
 * import * as E from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))
 * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))
 * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))
 *
 * @category combinators
 * @since 2.0.0
 */
var flatten = 
/*#__PURE__*/
chain(_function__WEBPACK_IMPORTED_MODULE_0__.identity);
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) { return (isLeft(fa) ? that() : fa); }; };
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.0.0
 */
var alt = altW;
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = function (f) { return function (wa) {
    return isLeft(wa) ? wa : right(f(wa));
}; };
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.0.0
 */
var duplicate = 
/*#__PURE__*/
extend(_function__WEBPACK_IMPORTED_MODULE_0__.identity);
/**
 * Left-associative fold of a structure.
 *
 * @example
 * import { pipe } from 'fp-ts/function'
 * import * as E from 'fp-ts/Either'
 *
 * const startWith = 'prefix'
 * const concat = (a: string, b: string) => `${a}:${b}`
 *
 * assert.deepStrictEqual(
 *   pipe(E.right('a'), E.reduce(startWith, concat)),
 *   'prefix:a',
 * )
 *
 * assert.deepStrictEqual(
 *   pipe(E.left('e'), E.reduce(startWith, concat)),
 *   'prefix',
 * )
 *
 * @category Foldable
 * @since 2.0.0
 */
var reduce = function (b, f) { return function (fa) {
    return isLeft(fa) ? b : f(b, fa.right);
}; };
/**
 * Map each element of the structure to a monoid, and combine the results.
 *
 * @example
 * import { pipe } from 'fp-ts/function';
 * import * as E from 'fp-ts/Either'
 * import { monoidString } from 'fp-ts/Monoid'
 *
 * const yell = (a: string) => `${a}!`
 *
 * assert.deepStrictEqual(
 *   pipe(E.right('a'), E.foldMap(monoidString)(yell)),
 *   'a!',
 * )
 *
 * assert.deepStrictEqual(
 *   pipe(E.left('e'), E.foldMap(monoidString)(yell)),
 *   monoidString.empty,
 * )
 *
 * @category Foldable
 * @since 2.0.0
 */
var foldMap = function (M) { return function (f) { return function (fa) {
    return isLeft(fa) ? M.empty : f(fa.right);
}; }; };
/**
 * Right-associative fold of a structure.
 *
 * @example
 * import { pipe } from 'fp-ts/function'
 * import * as E from 'fp-ts/Either'
 *
 * const startWith = 'postfix'
 * const concat = (a: string, b: string) => `${a}:${b}`
 *
 * assert.deepStrictEqual(
 *   pipe(E.right('a'), E.reduceRight(startWith, concat)),
 *   'a:postfix',
 * )
 *
 * assert.deepStrictEqual(
 *   pipe(E.left('e'), E.reduceRight(startWith, concat)),
 *   'postfix',
 * )
 *
 * @category Foldable
 * @since 2.0.0
 */
var reduceRight = function (b, f) { return function (fa) {
    return isLeft(fa) ? b : f(fa.right, b);
}; };
/**
 * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.
 *
 * @example
 * import { pipe } from 'fp-ts/function'
 * import * as A from 'fp-ts/Array'
 * import * as E from 'fp-ts/Either'
 * import * as O from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(
 *   pipe(E.right(['a']), E.traverse(O.option)(A.head)),
 *   O.some(E.right('a')),
 *  )
 *
 * assert.deepStrictEqual(
 *   pipe(E.right([]), E.traverse(O.option)(A.head)),
 *   O.none,
 * )
 *
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) { return function (f) { return function (ta) { return (isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right)); }; }; };
/**
 * Evaluate each monadic action in the structure from left to right, and collect the results.
 *
 * @example
 * import { pipe } from 'fp-ts/function'
 * import * as E from 'fp-ts/Either'
 * import * as O from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(
 *   pipe(E.right(O.some('a')), E.sequence(O.option)),
 *   O.some(E.right('a')),
 *  )
 *
 * assert.deepStrictEqual(
 *   pipe(E.right(O.none), E.sequence(O.option)),
 *   O.none
 * )
 *
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ma) {
    return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);
}; };
/**
 * @category MonadThrow
 * @since 2.6.3
 */
var throwError = left;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
var URI = 'Either';
/**
 * @category instances
 * @since 2.0.0
 */
function getShow(SE, SA) {
    return {
        show: function (ma) { return (isLeft(ma) ? "left(" + SE.show(ma.left) + ")" : "right(" + SA.show(ma.right) + ")"); }
    };
}
/**
 * @category instances
 * @since 2.0.0
 */
function getEq(EL, EA) {
    return {
        equals: function (x, y) {
            return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));
        }
    };
}
/**
 * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are
 * concatenated using the provided `Semigroup`
 *
 * @example
 * import { getSemigroup, left, right } from 'fp-ts/Either'
 * import { semigroupSum } from 'fp-ts/Semigroup'
 *
 * const S = getSemigroup<string, number>(semigroupSum)
 * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))
 * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))
 * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))
 * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))
 *
 * @category instances
 * @since 2.0.0
 */
function getSemigroup(S) {
    return {
        concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }
    };
}
/**
 * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values
 * are concatenated using the provided `Semigroup`
 *
 * @example
 * import { getApplySemigroup, left, right } from 'fp-ts/Either'
 * import { semigroupSum } from 'fp-ts/Semigroup'
 *
 * const S = getApplySemigroup<string, number>(semigroupSum)
 * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))
 * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))
 * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))
 * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))
 *
 * @category instances
 * @since 2.0.0
 */
function getApplySemigroup(S) {
    return {
        concat: function (x, y) { return (isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right))); }
    };
}
/**
 * @category instances
 * @since 2.0.0
 */
function getApplyMonoid(M) {
    return {
        concat: getApplySemigroup(M).concat,
        empty: right(M.empty)
    };
}
/**
 * Builds a `Filterable` instance for `Either` given `Monoid` for the left side
 *
 * @category instances
 * @since 3.0.0
 */
function getFilterable(M) {
    var empty = left(M.empty);
    var compact = function (ma) {
        return isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value);
    };
    var separate = function (ma) {
        return isLeft(ma)
            ? { left: ma, right: ma }
            : isLeft(ma.right)
                ? { left: right(ma.right.left), right: empty }
                : { left: empty, right: right(ma.right.right) };
    };
    var partitionMap = function (ma, f) {
        if (isLeft(ma)) {
            return { left: ma, right: ma };
        }
        var e = f(ma.right);
        return isLeft(e) ? { left: right(e.left), right: empty } : { left: empty, right: right(e.right) };
    };
    var partition = function (ma, p) {
        return isLeft(ma)
            ? { left: ma, right: ma }
            : p(ma.right)
                ? { left: empty, right: right(ma.right) }
                : { left: right(ma.right), right: empty };
    };
    var filterMap = function (ma, f) {
        if (isLeft(ma)) {
            return ma;
        }
        var ob = f(ma.right);
        return ob._tag === 'None' ? empty : right(ob.value);
    };
    var filter = function (ma, predicate) {
        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;
    };
    return {
        URI: URI,
        _E: undefined,
        map: map_,
        compact: compact,
        separate: separate,
        filter: filter,
        filterMap: filterMap,
        partition: partition,
        partitionMap: partitionMap
    };
}
/**
 * Builds `Witherable` instance for `Either` given `Monoid` for the left side
 *
 * @category instances
 * @since 2.0.0
 */
function getWitherable(M) {
    var F_ = getFilterable(M);
    var wither = function (F) {
        var traverseF = traverse_(F);
        return function (ma, f) { return F.map(traverseF(ma, f), F_.compact); };
    };
    var wilt = function (F) {
        var traverseF = traverse_(F);
        return function (ma, f) { return F.map(traverseF(ma, f), F_.separate); };
    };
    return {
        URI: URI,
        _E: undefined,
        map: map_,
        compact: F_.compact,
        separate: F_.separate,
        filter: F_.filter,
        filterMap: F_.filterMap,
        partition: F_.partition,
        partitionMap: F_.partitionMap,
        traverse: traverse_,
        sequence: sequence,
        reduce: reduce_,
        foldMap: foldMap_,
        reduceRight: reduceRight_,
        wither: wither,
        wilt: wilt
    };
}
/**
 * @category instances
 * @since 2.7.0
 */
function getApplicativeValidation(SE) {
    return {
        URI: URI,
        _E: undefined,
        map: map_,
        ap: function (fab, fa) {
            return isLeft(fab)
                ? isLeft(fa)
                    ? left(SE.concat(fab.left, fa.left))
                    : fab
                : isLeft(fa)
                    ? fa
                    : right(fab.right(fa.right));
        },
        of: of
    };
}
/**
 * @category instances
 * @since 2.7.0
 */
function getAltValidation(SE) {
    return {
        URI: URI,
        _E: undefined,
        map: map_,
        alt: function (me, that) {
            if (isRight(me)) {
                return me;
            }
            var ea = that();
            return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;
        }
    };
}
// TODO: remove in v3
/**
 * @category instances
 * @since 2.0.0
 */
function getValidation(SE) {
    var applicativeValidation = getApplicativeValidation(SE);
    var altValidation = getAltValidation(SE);
    return {
        URI: URI,
        _E: undefined,
        map: map_,
        of: of,
        chain: chain_,
        bimap: bimap_,
        mapLeft: mapLeft_,
        reduce: reduce_,
        foldMap: foldMap_,
        reduceRight: reduceRight_,
        extend: extend_,
        traverse: traverse_,
        sequence: sequence,
        chainRec: chainRec_,
        throwError: throwError,
        ap: applicativeValidation.ap,
        alt: altValidation.alt
    };
}
/**
 * @category instances
 * @since 2.0.0
 */
function getValidationSemigroup(SE, SA) {
    return {
        concat: function (x, y) {
            return isLeft(x) ? (isLeft(y) ? left(SE.concat(x.left, y.left)) : x) : isLeft(y) ? y : right(SA.concat(x.right, y.right));
        }
    };
}
/**
 * @category instances
 * @since 2.7.0
 */
var Functor = {
    URI: URI,
    map: map_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Applicative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of
};
/**
 * @category instances
 * @since 2.7.0
 */
var Monad = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Foldable = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Traversable = {
    URI: URI,
    map: map_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
var Bifunctor = {
    URI: URI,
    bimap: bimap_,
    mapLeft: mapLeft_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alt = {
    URI: URI,
    map: map_,
    alt: alt_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Extend = {
    URI: URI,
    map: map_,
    extend: extend_
};
/**
 * @category instances
 * @since 2.7.0
 */
var ChainRec = {
    URI: URI,
    map: map_,
    ap: ap_,
    chain: chain_,
    chainRec: chainRec_
};
/**
 * @category instances
 * @since 2.7.0
 */
var MonadThrow = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_,
    throwError: throwError
};
/**
 * @category instances
 * @since 2.0.0
 */
function getValidationMonoid(SE, SA) {
    return {
        concat: getValidationSemigroup(SE, SA).concat,
        empty: right(SA.empty)
    };
}
/**
 * @category instances
 * @since 2.0.0
 */
var either = {
    URI: URI,
    map: map_,
    of: of,
    ap: ap_,
    chain: chain_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    bimap: bimap_,
    mapLeft: mapLeft_,
    alt: alt_,
    extend: extend_,
    chainRec: chainRec_,
    throwError: throwError
};
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * Default value for the `onError` argument of `tryCatch`
 *
 * @since 2.0.0
 */
function toError(e) {
    return e instanceof Error ? e : new Error(String(e));
}
/**
 * @since 2.0.0
 */
function elem(E) {
    return function (a, ma) { return (isLeft(ma) ? false : E.equals(a, ma.right)); };
}
/**
 * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.
 *
 * @example
 * import { exists, left, right } from 'fp-ts/Either'
 *
 * const gt2 = exists((n: number) => n > 2)
 *
 * assert.strictEqual(gt2(left('a')), false)
 * assert.strictEqual(gt2(right(1)), false)
 * assert.strictEqual(gt2(right(3)), true)
 *
 * @since 2.0.0
 */
function exists(predicate) {
    return function (ma) { return (isLeft(ma) ? false : predicate(ma.right)); };
}
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
var Do = 
/*#__PURE__*/
of({});
/**
 * @since 2.8.0
 */
var bindTo = function (name) {
    return map((0,_function__WEBPACK_IMPORTED_MODULE_0__.bindTo_)(name));
};
/**
 * @since 2.8.0
 */
var bindW = function (name, f) {
    return chainW(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(f(a), map(function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.bind_)(a, name, b); }));
    });
};
/**
 * @since 2.8.0
 */
var bind = bindW;
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
var apSW = function (name, fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function (a) { return function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.bind_)(a, name, b); }; }), apW(fb));
};
/**
 * @since 2.8.0
 */
var apS = apSW;
// -------------------------------------------------------------------------------------
// array utils
// -------------------------------------------------------------------------------------
/**
 *
 * @since 2.9.0
 */
var traverseArrayWithIndex = function (f) { return function (arr) {
    // tslint:disable-next-line: readonly-array
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        var e = f(i, arr[i]);
        if (e._tag === 'Left') {
            return e;
        }
        result.push(e.right);
    }
    return right(result);
}; };
/**
 * map an array using provided function to Either then transform to Either of the array
 * this function has the same behavior of `A.traverse(E.either)` but it's optimized and performs better
 *
 * @example
 *
 *
 * import { traverseArray, left, right, fromPredicate } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 * import * as A from 'fp-ts/Array'
 *
 * const arr = A.range(0, 10)
 * assert.deepStrictEqual(
 *   pipe(
 *     arr,
 *     traverseArray((x) => right(x))
 *   ),
 *   right(arr)
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     arr,
 *     traverseArray(
 *       fromPredicate(
 *         (x) => x > 5,
 *         () => 'a'
 *       )
 *     )
 *   ),
 *   left('a')
 * )
 * @since 2.9.0
 */
var traverseArray = function (f) { return traverseArrayWithIndex(function (_, a) { return f(a); }); };
/**
 * convert an array of either to an either of array
 * this function has the same behavior of `A.sequence(E.either)` but it's optimized and performs better
 *
 * @example
 *
 * import { sequenceArray, left, right } from 'fp-ts/Either'
 * import { pipe } from 'fp-ts/function'
 * import * as A from 'fp-ts/Array'
 *
 * const arr = A.range(0, 10)
 * assert.deepStrictEqual(pipe(arr, A.map(right), sequenceArray), right(arr))
 * assert.deepStrictEqual(pipe(arr, A.map(right), A.cons(left('Error')), sequenceArray), left('Error'))
 *
 * @since 2.9.0
 */
var sequenceArray = 
/*#__PURE__*/
traverseArray(_function__WEBPACK_IMPORTED_MODULE_0__.identity);


/***/ }),

/***/ "./node_modules/fp-ts/es6/Option.js":
/*!******************************************!*\
  !*** ./node_modules/fp-ts/es6/Option.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isSome": () => (/* binding */ isSome),
/* harmony export */   "isNone": () => (/* binding */ isNone),
/* harmony export */   "none": () => (/* binding */ none),
/* harmony export */   "some": () => (/* binding */ some),
/* harmony export */   "fromNullable": () => (/* binding */ fromNullable),
/* harmony export */   "fromPredicate": () => (/* binding */ fromPredicate),
/* harmony export */   "tryCatch": () => (/* binding */ tryCatch),
/* harmony export */   "getLeft": () => (/* binding */ getLeft),
/* harmony export */   "getRight": () => (/* binding */ getRight),
/* harmony export */   "fromEither": () => (/* binding */ fromEither),
/* harmony export */   "fold": () => (/* binding */ fold),
/* harmony export */   "toNullable": () => (/* binding */ toNullable),
/* harmony export */   "toUndefined": () => (/* binding */ toUndefined),
/* harmony export */   "getOrElseW": () => (/* binding */ getOrElseW),
/* harmony export */   "getOrElse": () => (/* binding */ getOrElse),
/* harmony export */   "fromNullableK": () => (/* binding */ fromNullableK),
/* harmony export */   "mapNullable": () => (/* binding */ mapNullable),
/* harmony export */   "chainNullableK": () => (/* binding */ chainNullableK),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "ap": () => (/* binding */ ap),
/* harmony export */   "apFirst": () => (/* binding */ apFirst),
/* harmony export */   "apSecond": () => (/* binding */ apSecond),
/* harmony export */   "of": () => (/* binding */ of),
/* harmony export */   "chain": () => (/* binding */ chain),
/* harmony export */   "chainFirst": () => (/* binding */ chainFirst),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "altW": () => (/* binding */ altW),
/* harmony export */   "alt": () => (/* binding */ alt),
/* harmony export */   "zero": () => (/* binding */ zero),
/* harmony export */   "throwError": () => (/* binding */ throwError),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "duplicate": () => (/* binding */ duplicate),
/* harmony export */   "reduce": () => (/* binding */ reduce),
/* harmony export */   "foldMap": () => (/* binding */ foldMap),
/* harmony export */   "reduceRight": () => (/* binding */ reduceRight),
/* harmony export */   "compact": () => (/* binding */ compact),
/* harmony export */   "separate": () => (/* binding */ separate),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "filterMap": () => (/* binding */ filterMap),
/* harmony export */   "partition": () => (/* binding */ partition),
/* harmony export */   "partitionMap": () => (/* binding */ partitionMap),
/* harmony export */   "traverse": () => (/* binding */ traverse),
/* harmony export */   "sequence": () => (/* binding */ sequence),
/* harmony export */   "wither": () => (/* binding */ wither),
/* harmony export */   "wilt": () => (/* binding */ wilt),
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "getShow": () => (/* binding */ getShow),
/* harmony export */   "getEq": () => (/* binding */ getEq),
/* harmony export */   "getOrd": () => (/* binding */ getOrd),
/* harmony export */   "getApplySemigroup": () => (/* binding */ getApplySemigroup),
/* harmony export */   "getApplyMonoid": () => (/* binding */ getApplyMonoid),
/* harmony export */   "getFirstMonoid": () => (/* binding */ getFirstMonoid),
/* harmony export */   "getLastMonoid": () => (/* binding */ getLastMonoid),
/* harmony export */   "getMonoid": () => (/* binding */ getMonoid),
/* harmony export */   "Functor": () => (/* binding */ Functor),
/* harmony export */   "Applicative": () => (/* binding */ Applicative),
/* harmony export */   "Monad": () => (/* binding */ Monad),
/* harmony export */   "Foldable": () => (/* binding */ Foldable),
/* harmony export */   "Alt": () => (/* binding */ Alt),
/* harmony export */   "Alternative": () => (/* binding */ Alternative),
/* harmony export */   "Extend": () => (/* binding */ Extend),
/* harmony export */   "Compactable": () => (/* binding */ Compactable),
/* harmony export */   "Filterable": () => (/* binding */ Filterable),
/* harmony export */   "Traversable": () => (/* binding */ Traversable),
/* harmony export */   "Witherable": () => (/* binding */ Witherable),
/* harmony export */   "MonadThrow": () => (/* binding */ MonadThrow),
/* harmony export */   "option": () => (/* binding */ option),
/* harmony export */   "elem": () => (/* binding */ elem),
/* harmony export */   "exists": () => (/* binding */ exists),
/* harmony export */   "getRefinement": () => (/* binding */ getRefinement),
/* harmony export */   "Do": () => (/* binding */ Do),
/* harmony export */   "bindTo": () => (/* binding */ bindTo),
/* harmony export */   "bind": () => (/* binding */ bind),
/* harmony export */   "apS": () => (/* binding */ apS),
/* harmony export */   "traverseArrayWithIndex": () => (/* binding */ traverseArrayWithIndex),
/* harmony export */   "traverseArray": () => (/* binding */ traverseArray),
/* harmony export */   "sequenceArray": () => (/* binding */ sequenceArray)
/* harmony export */ });
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./function */ "./node_modules/fp-ts/es6/function.js");

// -------------------------------------------------------------------------------------
// guards
// -------------------------------------------------------------------------------------
/**
 * Returns `true` if the option is an instance of `Some`, `false` otherwise.
 *
 * @example
 * import { some, none, isSome } from 'fp-ts/Option'
 *
 * assert.strictEqual(isSome(some(1)), true)
 * assert.strictEqual(isSome(none), false)
 *
 * @category guards
 * @since 2.0.0
 */
var isSome = function (fa) { return fa._tag === 'Some'; };
/**
 * Returns `true` if the option is `None`, `false` otherwise.
 *
 * @example
 * import { some, none, isNone } from 'fp-ts/Option'
 *
 * assert.strictEqual(isNone(some(1)), false)
 * assert.strictEqual(isNone(none), true)
 *
 * @category guards
 * @since 2.0.0
 */
var isNone = function (fa) { return fa._tag === 'None'; };
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.
 *
 * @category constructors
 * @since 2.0.0
 */
var none = { _tag: 'None' };
/**
 * Constructs a `Some`. Represents an optional value that exists.
 *
 * @category constructors
 * @since 2.0.0
 */
var some = function (a) { return ({ _tag: 'Some', value: a }); };
/**
 * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise
 * returns the value wrapped in a `Some`.
 *
 * @example
 * import { none, some, fromNullable } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(fromNullable(undefined), none)
 * assert.deepStrictEqual(fromNullable(null), none)
 * assert.deepStrictEqual(fromNullable(1), some(1))
 *
 * @category constructors
 * @since 2.0.0
 */
function fromNullable(a) {
    return a == null ? none : some(a);
}
function fromPredicate(predicate) {
    return function (a) { return (predicate(a) ? some(a) : none); };
}
/**
 * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a
 * `Some`.
 *
 * @example
 * import { none, some, tryCatch } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(
 *   tryCatch(() => {
 *     throw new Error()
 *   }),
 *   none
 * )
 * assert.deepStrictEqual(tryCatch(() => 1), some(1))
 *
 * @category constructors
 * @since 2.0.0
 */
function tryCatch(f) {
    try {
        return some(f());
    }
    catch (e) {
        return none;
    }
}
/**
 * Returns the `Left` value of an `Either` if possible.
 *
 * @example
 * import { getLeft, none, some } from 'fp-ts/Option'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(getLeft(right(1)), none)
 * assert.deepStrictEqual(getLeft(left('a')), some('a'))
 *
 * @category constructors
 * @since 2.0.0
 */
function getLeft(ma) {
    return ma._tag === 'Right' ? none : some(ma.left);
}
/**
 * Returns the `Right` value of an `Either` if possible.
 *
 * @example
 * import { getRight, none, some } from 'fp-ts/Option'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(getRight(right(1)), some(1))
 * assert.deepStrictEqual(getRight(left('a')), none)
 *
 * @category constructors
 * @since 2.0.0
 */
function getRight(ma) {
    return ma._tag === 'Left' ? none : some(ma.right);
}
/**
 * Transforms an `Either` to an `Option` discarding the error.
 *
 * Alias of [getRight](#getRight)
 *
 * Derivable from `MonadThrow`.
 *
 * @category constructors
 * @since 2.0.0
 */
var fromEither = getRight;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is
 * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.
 *
 * @example
 * import { some, none, fold } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     fold(() => 'a none', a => `a some containing ${a}`)
 *   ),
 *   'a some containing 1'
 * )
 *
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     fold(() => 'a none', a => `a some containing ${a}`)
 *   ),
 *   'a none'
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
function fold(onNone, onSome) {
    return function (ma) { return (isNone(ma) ? onNone() : onSome(ma.value)); };
}
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns `null`.
 *
 * @example
 * import { some, none, toNullable } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     toNullable
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     toNullable
 *   ),
 *   null
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
function toNullable(ma) {
    return isNone(ma) ? null : ma.value;
}
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.
 *
 * @example
 * import { some, none, toUndefined } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     toUndefined
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     toUndefined
 *   ),
 *   undefined
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
function toUndefined(ma) {
    return isNone(ma) ? undefined : ma.value;
}
/**
 * Less strict version of [`getOrElse`](#getOrElse).
 *
 * @category destructors
 * @since 2.6.0
 */
var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns the given default value
 *
 * @example
 * import { some, none, getOrElse } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     getOrElse(() => 0)
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     getOrElse(() => 0)
 *   ),
 *   0
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
var getOrElse = getOrElseW;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * Returns a *smart constructor* from a function that returns a nullable value.
 *
 * @example
 * import { fromNullableK, none, some } from 'fp-ts/Option'
 *
 * const f = (s: string): number | undefined => {
 *   const n = parseFloat(s)
 *   return isNaN(n) ? undefined : n
 * }
 *
 * const g = fromNullableK(f)
 *
 * assert.deepStrictEqual(g('1'), some(1))
 * assert.deepStrictEqual(g('a'), none)
 *
 * @category combinators
 * @since 2.9.0
 */
function fromNullableK(f) {
    return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return fromNullable(f.apply(void 0, a));
    };
}
/**
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
var mapNullable = chainNullableK;
/**
 * This is `chain` + `fromNullable`, useful when working with optional values.
 *
 * @example
 * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * interface Employee {
 *   company?: {
 *     address?: {
 *       street?: {
 *         name?: string
 *       }
 *     }
 *   }
 * }
 *
 * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     fromNullable(employee1.company),
 *     chainNullableK(company => company.address),
 *     chainNullableK(address => address.street),
 *     chainNullableK(street => street.name)
 *   ),
 *   some('high street')
 * )
 *
 * const employee2: Employee = { company: { address: { street: {} } } }
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     fromNullable(employee2.company),
 *     chainNullableK(company => company.address),
 *     chainNullableK(address => address.street),
 *     chainNullableK(street => street.name)
 *   ),
 *   none
 * )
 *
 * @category combinators
 * @since 2.9.0
 */
function chainNullableK(f) {
    return function (ma) { return (isNone(ma) ? none : fromNullable(f(ma.value))); };
}
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var map_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, map(f)); };
var ap_ = function (fab, fa) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fab, ap(fa)); };
var chain_ = function (ma, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ma, chain(f)); };
var reduce_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, reduce(b, f)); };
var foldMap_ = function (M) {
    var foldMapM = foldMap(M);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, foldMapM(f)); };
};
var reduceRight_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, reduceRight(b, f)); };
var traverse_ = function (F) {
    var traverseF = traverse(F);
    return function (ta, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ta, traverseF(f)); };
};
/* istanbul ignore next */
var alt_ = function (fa, that) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, alt(that)); };
var filter_ = function (fa, predicate) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, filter(predicate));
};
/* istanbul ignore next */
var filterMap_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, filterMap(f)); };
/* istanbul ignore next */
var extend_ = function (wa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(wa, extend(f)); };
/* istanbul ignore next */
var partition_ = function (fa, predicate) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, partition(predicate)); };
/* istanbul ignore next */
var partitionMap_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, partitionMap(f)); };
/* istanbul ignore next */
var wither_ = function (F) {
    var witherF = wither(F);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, witherF(f)); };
};
/* istanbul ignore next */
var wilt_ = function (F) {
    var wiltF = wilt(F);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(fa, wiltF(f)); };
};
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = function (f) { return function (fa) {
    return isNone(fa) ? none : some(f(fa.value));
}; };
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = function (fa) { return function (fab) {
    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));
}; };
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apFirst = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function (a) { return function () { return a; }; }), ap(fb));
};
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
var apSecond = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function () { return function (b) { return b; }; }), ap(fb));
};
/**
 * Wrap a value into the type constructor.
 *
 * @category Applicative
 * @since 2.7.0
 */
var of = some;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = function (f) { return function (ma) {
    return isNone(ma) ? none : f(ma.value);
}; };
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.0.0
 */
var chainFirst = function (f) {
    return chain(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(f(a), map(function () { return a; }));
    });
};
/**
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.0.0
 */
var flatten = 
/*#__PURE__*/
chain(_function__WEBPACK_IMPORTED_MODULE_0__.identity);
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) {
    return isNone(fa) ? that() : fa;
}; };
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * In case of `Option` returns the left-most non-`None` value.
 *
 * @example
 * import * as O from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     O.some('a'),
 *     O.alt(() => O.some('b'))
 *   ),
 *   O.some('a')
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     O.none,
 *     O.alt(() => O.some('b'))
 *   ),
 *   O.some('b')
 * )
 *
 * @category Alt
 * @since 2.0.0
 */
var alt = altW;
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = function () { return none; };
/**
 * @category MonadThrow
 * @since 2.7.0
 */
var throwError = function () { return none; };
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = function (f) { return function (wa) {
    return isNone(wa) ? none : some(f(wa));
}; };
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.0.0
 */
var duplicate = 
/*#__PURE__*/
extend(_function__WEBPACK_IMPORTED_MODULE_0__.identity);
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduce = function (b, f) { return function (fa) {
    return isNone(fa) ? b : f(b, fa.value);
}; };
/**
 * @category Foldable
 * @since 2.0.0
 */
var foldMap = function (M) { return function (f) { return function (fa) {
    return isNone(fa) ? M.empty : f(fa.value);
}; }; };
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduceRight = function (b, f) { return function (fa) {
    return isNone(fa) ? b : f(fa.value, b);
}; };
/**
 * @category Compactable
 * @since 2.0.0
 */
var compact = flatten;
var defaultSeparate = { left: none, right: none };
/**
 * @category Compactable
 * @since 2.0.0
 */
var separate = function (ma) {
    var o = (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(ma, map(function (e) { return ({
        left: getLeft(e),
        right: getRight(e)
    }); }));
    return isNone(o) ? defaultSeparate : o.value;
};
/**
 * @category Filterable
 * @since 2.0.0
 */
var filter = function (predicate) { return function (fa) { return (isNone(fa) ? none : predicate(fa.value) ? fa : none); }; };
/**
 * @category Filterable
 * @since 2.0.0
 */
var filterMap = function (f) { return function (fa) {
    return isNone(fa) ? none : f(fa.value);
}; };
/**
 * @category Filterable
 * @since 2.0.0
 */
var partition = function (predicate) { return function (fa) {
    return {
        left: filter_(fa, function (a) { return !predicate(a); }),
        right: filter_(fa, predicate)
    };
}; };
/**
 * @category Filterable
 * @since 2.0.0
 */
var partitionMap = function (f) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(f), separate); };
/**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) { return function (f) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(f(ta.value), some)); }; }; };
/**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(ta.value, some)); }; };
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = function (F) { return function (f) { return function (fa) { return (isNone(fa) ? F.of(none) : f(fa.value)); }; }; };
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = function (F) { return function (f) { return function (fa) {
    return isNone(fa)
        ? F.of({
            left: none,
            right: none
        })
        : F.map(f(fa.value), function (e) { return ({
            left: getLeft(e),
            right: getRight(e)
        }); });
}; }; };
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
var URI = 'Option';
/**
 * @category instances
 * @since 2.0.0
 */
function getShow(S) {
    return {
        show: function (ma) { return (isNone(ma) ? 'none' : "some(" + S.show(ma.value) + ")"); }
    };
}
/**
 * @example
 * import { none, some, getEq } from 'fp-ts/Option'
 * import { eqNumber } from 'fp-ts/Eq'
 *
 * const E = getEq(eqNumber)
 * assert.strictEqual(E.equals(none, none), true)
 * assert.strictEqual(E.equals(none, some(1)), false)
 * assert.strictEqual(E.equals(some(1), none), false)
 * assert.strictEqual(E.equals(some(1), some(2)), false)
 * assert.strictEqual(E.equals(some(1), some(1)), true)
 *
 * @category instances
 * @since 2.0.0
 */
function getEq(E) {
    return {
        equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }
    };
}
/**
 * The `Ord` instance allows `Option` values to be compared with
 * `compare`, whenever there is an `Ord` instance for
 * the type the `Option` contains.
 *
 * `None` is considered to be less than any `Some` value.
 *
 *
 * @example
 * import { none, some, getOrd } from 'fp-ts/Option'
 * import { ordNumber } from 'fp-ts/Ord'
 *
 * const O = getOrd(ordNumber)
 * assert.strictEqual(O.compare(none, none), 0)
 * assert.strictEqual(O.compare(none, some(1)), -1)
 * assert.strictEqual(O.compare(some(1), none), 1)
 * assert.strictEqual(O.compare(some(1), some(2)), -1)
 * assert.strictEqual(O.compare(some(1), some(1)), 0)
 *
 * @category instances
 * @since 2.0.0
 */
function getOrd(O) {
    return {
        equals: getEq(O).equals,
        compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }
    };
}
/**
 * `Apply` semigroup
 *
 * | x       | y       | concat(x, y)       |
 * | ------- | ------- | ------------------ |
 * | none    | none    | none               |
 * | some(a) | none    | none               |
 * | none    | some(a) | none               |
 * | some(a) | some(b) | some(concat(a, b)) |
 *
 * @example
 * import { getApplySemigroup, some, none } from 'fp-ts/Option'
 * import { semigroupSum } from 'fp-ts/Semigroup'
 *
 * const S = getApplySemigroup(semigroupSum)
 * assert.deepStrictEqual(S.concat(none, none), none)
 * assert.deepStrictEqual(S.concat(some(1), none), none)
 * assert.deepStrictEqual(S.concat(none, some(1)), none)
 * assert.deepStrictEqual(S.concat(some(1), some(2)), some(3))
 *
 * @category instances
 * @since 2.0.0
 */
function getApplySemigroup(S) {
    return {
        concat: function (x, y) { return (isSome(x) && isSome(y) ? some(S.concat(x.value, y.value)) : none); }
    };
}
/**
 * @category instances
 * @since 2.0.0
 */
function getApplyMonoid(M) {
    return {
        concat: getApplySemigroup(M).concat,
        empty: some(M.empty)
    };
}
/**
 * Monoid returning the left-most non-`None` value
 *
 * | x       | y       | concat(x, y) |
 * | ------- | ------- | ------------ |
 * | none    | none    | none         |
 * | some(a) | none    | some(a)      |
 * | none    | some(a) | some(a)      |
 * | some(a) | some(b) | some(a)      |
 *
 * @example
 * import { getFirstMonoid, some, none } from 'fp-ts/Option'
 *
 * const M = getFirstMonoid<number>()
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))
 *
 * @category instances
 * @since 2.0.0
 */
function getFirstMonoid() {
    return {
        concat: function (x, y) { return (isNone(x) ? y : x); },
        empty: none
    };
}
/**
 * Monoid returning the right-most non-`None` value
 *
 * | x       | y       | concat(x, y) |
 * | ------- | ------- | ------------ |
 * | none    | none    | none         |
 * | some(a) | none    | some(a)      |
 * | none    | some(a) | some(a)      |
 * | some(a) | some(b) | some(b)      |
 *
 * @example
 * import { getLastMonoid, some, none } from 'fp-ts/Option'
 *
 * const M = getLastMonoid<number>()
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))
 *
 * @category instances
 * @since 2.0.0
 */
function getLastMonoid() {
    return {
        concat: function (x, y) { return (isNone(y) ? x : y); },
        empty: none
    };
}
/**
 * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are
 * concatenated using the provided `Semigroup`
 *
 * | x       | y       | concat(x, y)       |
 * | ------- | ------- | ------------------ |
 * | none    | none    | none               |
 * | some(a) | none    | some(a)            |
 * | none    | some(a) | some(a)            |
 * | some(a) | some(b) | some(concat(a, b)) |
 *
 * @example
 * import { getMonoid, some, none } from 'fp-ts/Option'
 * import { semigroupSum } from 'fp-ts/Semigroup'
 *
 * const M = getMonoid(semigroupSum)
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))
 *
 * @category instances
 * @since 2.0.0
 */
function getMonoid(S) {
    return {
        concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },
        empty: none
    };
}
/**
 * @category instances
 * @since 2.7.0
 */
var Functor = {
    URI: URI,
    map: map_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Applicative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of
};
/**
 * @category instances
 * @since 2.7.0
 */
var Monad = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Foldable = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alt = {
    URI: URI,
    map: map_,
    alt: alt_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alternative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    alt: alt_,
    zero: zero
};
/**
 * @category instances
 * @since 2.7.0
 */
var Extend = {
    URI: URI,
    map: map_,
    extend: extend_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Compactable = {
    URI: URI,
    compact: compact,
    separate: separate
};
/**
 * @category instances
 * @since 2.7.0
 */
var Filterable = {
    URI: URI,
    map: map_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Traversable = {
    URI: URI,
    map: map_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
var Witherable = {
    URI: URI,
    map: map_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    wither: wither_,
    wilt: wilt_
};
/**
 * @category instances
 * @since 2.7.0
 */
var MonadThrow = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_,
    throwError: throwError
};
// TODO: remove in v3
/**
 * @category instances
 * @since 2.0.0
 */
var option = {
    URI: URI,
    map: map_,
    of: of,
    ap: ap_,
    chain: chain_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    zero: zero,
    alt: alt_,
    extend: extend_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    wither: wither_,
    wilt: wilt_,
    throwError: throwError
};
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * Returns `true` if `ma` contains `a`
 *
 * @example
 * import { some, none, elem } from 'fp-ts/Option'
 * import { eqNumber } from 'fp-ts/Eq'
 *
 * assert.strictEqual(elem(eqNumber)(1, some(1)), true)
 * assert.strictEqual(elem(eqNumber)(2, some(1)), false)
 * assert.strictEqual(elem(eqNumber)(1, none), false)
 *
 * @since 2.0.0
 */
function elem(E) {
    return function (a, ma) { return (isNone(ma) ? false : E.equals(a, ma.value)); };
}
/**
 * Returns `true` if the predicate is satisfied by the wrapped value
 *
 * @example
 * import { some, none, exists } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     exists(n => n > 0)
 *   ),
 *   true
 * )
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     exists(n => n > 1)
 *   ),
 *   false
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     exists(n => n > 0)
 *   ),
 *   false
 * )
 *
 * @since 2.0.0
 */
function exists(predicate) {
    return function (ma) { return (isNone(ma) ? false : predicate(ma.value)); };
}
/**
 * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.
 * This function ensures that a custom type guard definition is type-safe.
 *
 * ```ts
 * import { some, none, getRefinement } from 'fp-ts/Option'
 *
 * type A = { type: 'A' }
 * type B = { type: 'B' }
 * type C = A | B
 *
 * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain
 * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '"B"' is not assignable to type '"A"'
 * ```
 *
 * @since 2.0.0
 */
function getRefinement(getOption) {
    return function (a) { return isSome(getOption(a)); };
}
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
var Do = 
/*#__PURE__*/
of({});
/**
 * @since 2.8.0
 */
var bindTo = function (name) { return map((0,_function__WEBPACK_IMPORTED_MODULE_0__.bindTo_)(name)); };
/**
 * @since 2.8.0
 */
var bind = function (name, f) {
    return chain(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_0__.pipe)(f(a), map(function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.bind_)(a, name, b); }));
    });
};
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
var apS = function (name, fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_0__.flow)(map(function (a) { return function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_0__.bind_)(a, name, b); }; }), ap(fb));
};
// -------------------------------------------------------------------------------------
// array utils
// -------------------------------------------------------------------------------------
/**
 *
 * @since 2.9.0
 */
var traverseArrayWithIndex = function (f) { return function (arr) {
    // tslint:disable-next-line: readonly-array
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        var b = f(i, arr[i]);
        if (isNone(b)) {
            return none;
        }
        result.push(b.value);
    }
    return some(result);
}; };
/**
 * Runs an action for every element in array and accumulates the results in option
 *
 * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better
 *
 * @example
 *
 * import * as A from 'fp-ts/Array'
 * import { traverseArray, some, fromPredicate, none } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * const arr = A.range(0, 10)
 * assert.deepStrictEqual(pipe(arr, traverseArray(some)), some(arr))
 * assert.deepStrictEqual(pipe(arr, traverseArray(fromPredicate((x) => x > 5))), none)
 *
 * @since 2.9.0
 */
var traverseArray = function (f) { return traverseArrayWithIndex(function (_, a) { return f(a); }); };
/**
 * get an array of option and convert it to option of array
 *
 * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better
 *
 * @example
 *
 * import * as A from 'fp-ts/Array'
 * import { sequenceArray, some, none, fromPredicate } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * const arr = A.range(0, 10)
 * assert.deepStrictEqual(pipe(arr, A.map(some), sequenceArray), some(arr))
 * assert.deepStrictEqual(pipe(arr, A.map(fromPredicate(x => x > 8)), sequenceArray), none)
 *
 * @since 2.9.0
 */
var sequenceArray = 
/*#__PURE__*/
traverseArray(_function__WEBPACK_IMPORTED_MODULE_0__.identity);


/***/ }),

/***/ "./node_modules/fp-ts/es6/Ord.js":
/*!***************************************!*\
  !*** ./node_modules/fp-ts/es6/Ord.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ordString": () => (/* binding */ ordString),
/* harmony export */   "ordNumber": () => (/* binding */ ordNumber),
/* harmony export */   "ordBoolean": () => (/* binding */ ordBoolean),
/* harmony export */   "lt": () => (/* binding */ lt),
/* harmony export */   "gt": () => (/* binding */ gt),
/* harmony export */   "leq": () => (/* binding */ leq),
/* harmony export */   "geq": () => (/* binding */ geq),
/* harmony export */   "min": () => (/* binding */ min),
/* harmony export */   "max": () => (/* binding */ max),
/* harmony export */   "clamp": () => (/* binding */ clamp),
/* harmony export */   "between": () => (/* binding */ between),
/* harmony export */   "fromCompare": () => (/* binding */ fromCompare),
/* harmony export */   "getSemigroup": () => (/* binding */ getSemigroup),
/* harmony export */   "getMonoid": () => (/* binding */ getMonoid),
/* harmony export */   "getTupleOrd": () => (/* binding */ getTupleOrd),
/* harmony export */   "getDualOrd": () => (/* binding */ getDualOrd),
/* harmony export */   "contramap": () => (/* binding */ contramap),
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "ordDate": () => (/* binding */ ordDate),
/* harmony export */   "Contravariant": () => (/* binding */ Contravariant),
/* harmony export */   "ord": () => (/* binding */ ord)
/* harmony export */ });
/* harmony import */ var _Ordering__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ordering */ "./node_modules/fp-ts/es6/Ordering.js");
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function */ "./node_modules/fp-ts/es6/function.js");


// default compare for primitive types
function compare(x, y) {
    return x < y ? -1 : x > y ? 1 : 0;
}
function strictEqual(a, b) {
    return a === b;
}
/**
 * @category instances
 * @since 2.0.0
 */
var ordString = {
    equals: strictEqual,
    compare: compare
};
/**
 * @category instances
 * @since 2.0.0
 */
var ordNumber = {
    equals: strictEqual,
    compare: compare
};
/**
 * @category instances
 * @since 2.0.0
 */
var ordBoolean = {
    equals: strictEqual,
    compare: compare
};
// TODO: curry in v3
/**
 * Test whether one value is _strictly less than_ another
 *
 * @since 2.0.0
 */
function lt(O) {
    return function (x, y) { return O.compare(x, y) === -1; };
}
// TODO: curry in v3
/**
 * Test whether one value is _strictly greater than_ another
 *
 * @since 2.0.0
 */
function gt(O) {
    return function (x, y) { return O.compare(x, y) === 1; };
}
// TODO: curry in v3
/**
 * Test whether one value is _non-strictly less than_ another
 *
 * @since 2.0.0
 */
function leq(O) {
    return function (x, y) { return O.compare(x, y) !== 1; };
}
// TODO: curry in v3
/**
 * Test whether one value is _non-strictly greater than_ another
 *
 * @since 2.0.0
 */
function geq(O) {
    return function (x, y) { return O.compare(x, y) !== -1; };
}
// TODO: curry in v3
/**
 * Take the minimum of two values. If they are considered equal, the first argument is chosen
 *
 * @since 2.0.0
 */
function min(O) {
    return function (x, y) { return (O.compare(x, y) === 1 ? y : x); };
}
// TODO: curry in v3
/**
 * Take the maximum of two values. If they are considered equal, the first argument is chosen
 *
 * @since 2.0.0
 */
function max(O) {
    return function (x, y) { return (O.compare(x, y) === -1 ? y : x); };
}
/**
 * Clamp a value between a minimum and a maximum
 *
 * @since 2.0.0
 */
function clamp(O) {
    var minO = min(O);
    var maxO = max(O);
    return function (low, hi) { return function (x) { return maxO(minO(x, hi), low); }; };
}
/**
 * Test whether a value is between a minimum and a maximum (inclusive)
 *
 * @since 2.0.0
 */
function between(O) {
    var lessThanO = lt(O);
    var greaterThanO = gt(O);
    return function (low, hi) { return function (x) { return (lessThanO(x, low) || greaterThanO(x, hi) ? false : true); }; };
}
/**
 * @category constructors
 * @since 2.0.0
 */
function fromCompare(compare) {
    var optimizedCompare = function (x, y) { return (x === y ? 0 : compare(x, y)); };
    return {
        equals: function (x, y) { return optimizedCompare(x, y) === 0; },
        compare: optimizedCompare
    };
}
/**
 * Use `getMonoid` instead
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
function getSemigroup() {
    return {
        concat: function (x, y) { return fromCompare(function (a, b) { return _Ordering__WEBPACK_IMPORTED_MODULE_0__.monoidOrdering.concat(x.compare(a, b), y.compare(a, b)); }); }
    };
}
/**
 * Returns a `Monoid` such that:
 *
 * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`
 * - its `empty` value is an `Ord` that always considers compared elements equal
 *
 * @example
 * import { sort } from 'fp-ts/Array'
 * import { contramap, getDualOrd, getMonoid, ordBoolean, ordNumber, ordString } from 'fp-ts/Ord'
 * import { pipe } from 'fp-ts/function'
 * import { fold } from 'fp-ts/Monoid'
 *
 * interface User {
 *   id: number
 *   name: string
 *   age: number
 *   rememberMe: boolean
 * }
 *
 * const byName = pipe(
 *   ordString,
 *   contramap((p: User) => p.name)
 * )
 *
 * const byAge = pipe(
 *   ordNumber,
 *   contramap((p: User) => p.age)
 * )
 *
 * const byRememberMe = pipe(
 *   ordBoolean,
 *   contramap((p: User) => p.rememberMe)
 * )
 *
 * const M = getMonoid<User>()
 *
 * const users: Array<User> = [
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }
 * ]
 *
 * // sort by name, then by age, then by `rememberMe`
 * const O1 = fold(M)([byName, byAge, byRememberMe])
 * assert.deepStrictEqual(sort(O1)(users), [
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false }
 * ])
 *
 * // now `rememberMe = true` first, then by name, then by age
 * const O2 = fold(M)([getDualOrd(byRememberMe), byName, byAge])
 * assert.deepStrictEqual(sort(O2)(users), [
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false }
 * ])
 *
 * @category instances
 * @since 2.4.0
 */
function getMonoid() {
    return {
        // tslint:disable-next-line: deprecation
        concat: getSemigroup().concat,
        empty: fromCompare(function () { return 0; })
    };
}
/**
 * Given a tuple of `Ord`s returns an `Ord` for the tuple
 *
 * @example
 * import { getTupleOrd, ordString, ordNumber, ordBoolean } from 'fp-ts/Ord'
 *
 * const O = getTupleOrd(ordString, ordNumber, ordBoolean)
 * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)
 * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)
 * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)
 *
 * @category instances
 * @since 2.0.0
 */
function getTupleOrd() {
    var ords = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        ords[_i] = arguments[_i];
    }
    var len = ords.length;
    return fromCompare(function (x, y) {
        var i = 0;
        for (; i < len - 1; i++) {
            var r = ords[i].compare(x[i], y[i]);
            if (r !== 0) {
                return r;
            }
        }
        return ords[i].compare(x[i], y[i]);
    });
}
/**
 * @category combinators
 * @since 2.0.0
 */
function getDualOrd(O) {
    return fromCompare(function (x, y) { return O.compare(y, x); });
}
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
/* istanbul ignore next */
var contramap_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_1__.pipe)(fa, contramap(f)); };
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * @category Contravariant
 * @since 2.0.0
 */
var contramap = function (f) { return function (fa) {
    return fromCompare(function (x, y) { return fa.compare(f(x), f(y)); });
}; };
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
var URI = 'Ord';
/**
 * @category instances
 * @since 2.0.0
 */
var ordDate = 
/*#__PURE__*/
(0,_function__WEBPACK_IMPORTED_MODULE_1__.pipe)(ordNumber, 
/*#__PURE__*/
contramap(function (date) { return date.valueOf(); }));
/**
 * @category instances
 * @since 2.7.0
 */
var Contravariant = {
    URI: URI,
    contramap: contramap_
};
// TODO: remove in v3
/**
 * @category instances
 * @since 2.0.0
 */
var ord = Contravariant;


/***/ }),

/***/ "./node_modules/fp-ts/es6/Ordering.js":
/*!********************************************!*\
  !*** ./node_modules/fp-ts/es6/Ordering.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sign": () => (/* binding */ sign),
/* harmony export */   "eqOrdering": () => (/* binding */ eqOrdering),
/* harmony export */   "semigroupOrdering": () => (/* binding */ semigroupOrdering),
/* harmony export */   "monoidOrdering": () => (/* binding */ monoidOrdering),
/* harmony export */   "invert": () => (/* binding */ invert)
/* harmony export */ });
/**
 * @since 2.0.0
 */
function sign(n) {
    return n <= -1 ? -1 : n >= 1 ? 1 : 0;
}
/**
 * @category instances
 * @since 2.0.0
 */
var eqOrdering = {
    equals: function (x, y) { return x === y; }
};
/**
 * Use `monoidOrdering` instead
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
var semigroupOrdering = {
    concat: function (x, y) { return (x !== 0 ? x : y); }
};
/**
 * @category instances
 * @since 2.4.0
 */
var monoidOrdering = {
    // tslint:disable-next-line: deprecation
    concat: semigroupOrdering.concat,
    empty: 0
};
/**
 * @since 2.0.0
 */
function invert(O) {
    switch (O) {
        case -1:
            return 1;
        case 1:
            return -1;
        default:
            return 0;
    }
}


/***/ }),

/***/ "./node_modules/fp-ts/es6/ReadonlyArray.js":
/*!*************************************************!*\
  !*** ./node_modules/fp-ts/es6/ReadonlyArray.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromArray": () => (/* binding */ fromArray),
/* harmony export */   "toArray": () => (/* binding */ toArray),
/* harmony export */   "getShow": () => (/* binding */ getShow),
/* harmony export */   "getMonoid": () => (/* binding */ getMonoid),
/* harmony export */   "getEq": () => (/* binding */ getEq),
/* harmony export */   "getOrd": () => (/* binding */ getOrd),
/* harmony export */   "makeBy": () => (/* binding */ makeBy),
/* harmony export */   "range": () => (/* binding */ range),
/* harmony export */   "replicate": () => (/* binding */ replicate),
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "foldLeft": () => (/* binding */ foldLeft),
/* harmony export */   "foldRight": () => (/* binding */ foldRight),
/* harmony export */   "scanLeft": () => (/* binding */ scanLeft),
/* harmony export */   "scanRight": () => (/* binding */ scanRight),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "isNonEmpty": () => (/* binding */ isNonEmpty),
/* harmony export */   "isOutOfBound": () => (/* binding */ isOutOfBound),
/* harmony export */   "lookup": () => (/* binding */ lookup),
/* harmony export */   "cons": () => (/* binding */ cons),
/* harmony export */   "snoc": () => (/* binding */ snoc),
/* harmony export */   "head": () => (/* binding */ head),
/* harmony export */   "last": () => (/* binding */ last),
/* harmony export */   "tail": () => (/* binding */ tail),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "takeLeft": () => (/* binding */ takeLeft),
/* harmony export */   "takeRight": () => (/* binding */ takeRight),
/* harmony export */   "takeLeftWhile": () => (/* binding */ takeLeftWhile),
/* harmony export */   "spanLeft": () => (/* binding */ spanLeft),
/* harmony export */   "dropLeft": () => (/* binding */ dropLeft),
/* harmony export */   "dropRight": () => (/* binding */ dropRight),
/* harmony export */   "dropLeftWhile": () => (/* binding */ dropLeftWhile),
/* harmony export */   "findIndex": () => (/* binding */ findIndex),
/* harmony export */   "findFirst": () => (/* binding */ findFirst),
/* harmony export */   "findFirstMap": () => (/* binding */ findFirstMap),
/* harmony export */   "findLast": () => (/* binding */ findLast),
/* harmony export */   "findLastMap": () => (/* binding */ findLastMap),
/* harmony export */   "findLastIndex": () => (/* binding */ findLastIndex),
/* harmony export */   "insertAt": () => (/* binding */ insertAt),
/* harmony export */   "updateAt": () => (/* binding */ updateAt),
/* harmony export */   "deleteAt": () => (/* binding */ deleteAt),
/* harmony export */   "modifyAt": () => (/* binding */ modifyAt),
/* harmony export */   "reverse": () => (/* binding */ reverse),
/* harmony export */   "rights": () => (/* binding */ rights),
/* harmony export */   "lefts": () => (/* binding */ lefts),
/* harmony export */   "sort": () => (/* binding */ sort),
/* harmony export */   "zipWith": () => (/* binding */ zipWith),
/* harmony export */   "zip": () => (/* binding */ zip),
/* harmony export */   "unzip": () => (/* binding */ unzip),
/* harmony export */   "prependToAll": () => (/* binding */ prependToAll),
/* harmony export */   "intersperse": () => (/* binding */ intersperse),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "elem": () => (/* binding */ elem),
/* harmony export */   "uniq": () => (/* binding */ uniq),
/* harmony export */   "sortBy": () => (/* binding */ sortBy),
/* harmony export */   "chop": () => (/* binding */ chop),
/* harmony export */   "splitAt": () => (/* binding */ splitAt),
/* harmony export */   "chunksOf": () => (/* binding */ chunksOf),
/* harmony export */   "comprehension": () => (/* binding */ comprehension),
/* harmony export */   "union": () => (/* binding */ union),
/* harmony export */   "intersection": () => (/* binding */ intersection),
/* harmony export */   "difference": () => (/* binding */ difference),
/* harmony export */   "of": () => (/* binding */ of),
/* harmony export */   "zero": () => (/* binding */ zero),
/* harmony export */   "altW": () => (/* binding */ altW),
/* harmony export */   "alt": () => (/* binding */ alt),
/* harmony export */   "ap": () => (/* binding */ ap),
/* harmony export */   "apFirst": () => (/* binding */ apFirst),
/* harmony export */   "apSecond": () => (/* binding */ apSecond),
/* harmony export */   "chain": () => (/* binding */ chain),
/* harmony export */   "chainWithIndex": () => (/* binding */ chainWithIndex),
/* harmony export */   "chainFirst": () => (/* binding */ chainFirst),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "mapWithIndex": () => (/* binding */ mapWithIndex),
/* harmony export */   "separate": () => (/* binding */ separate),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "filterMapWithIndex": () => (/* binding */ filterMapWithIndex),
/* harmony export */   "filterMap": () => (/* binding */ filterMap),
/* harmony export */   "compact": () => (/* binding */ compact),
/* harmony export */   "partition": () => (/* binding */ partition),
/* harmony export */   "partitionWithIndex": () => (/* binding */ partitionWithIndex),
/* harmony export */   "partitionMap": () => (/* binding */ partitionMap),
/* harmony export */   "partitionMapWithIndex": () => (/* binding */ partitionMapWithIndex),
/* harmony export */   "filterWithIndex": () => (/* binding */ filterWithIndex),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "duplicate": () => (/* binding */ duplicate),
/* harmony export */   "foldMapWithIndex": () => (/* binding */ foldMapWithIndex),
/* harmony export */   "reduce": () => (/* binding */ reduce),
/* harmony export */   "foldMap": () => (/* binding */ foldMap),
/* harmony export */   "reduceWithIndex": () => (/* binding */ reduceWithIndex),
/* harmony export */   "reduceRight": () => (/* binding */ reduceRight),
/* harmony export */   "reduceRightWithIndex": () => (/* binding */ reduceRightWithIndex),
/* harmony export */   "traverse": () => (/* binding */ traverse),
/* harmony export */   "sequence": () => (/* binding */ sequence),
/* harmony export */   "traverseWithIndex": () => (/* binding */ traverseWithIndex),
/* harmony export */   "wither": () => (/* binding */ wither),
/* harmony export */   "wilt": () => (/* binding */ wilt),
/* harmony export */   "unfold": () => (/* binding */ unfold),
/* harmony export */   "URI": () => (/* binding */ URI),
/* harmony export */   "Functor": () => (/* binding */ Functor),
/* harmony export */   "FunctorWithIndex": () => (/* binding */ FunctorWithIndex),
/* harmony export */   "Applicative": () => (/* binding */ Applicative),
/* harmony export */   "Monad": () => (/* binding */ Monad),
/* harmony export */   "Unfoldable": () => (/* binding */ Unfoldable),
/* harmony export */   "Alt": () => (/* binding */ Alt),
/* harmony export */   "Alternative": () => (/* binding */ Alternative),
/* harmony export */   "Extend": () => (/* binding */ Extend),
/* harmony export */   "Compactable": () => (/* binding */ Compactable),
/* harmony export */   "Filterable": () => (/* binding */ Filterable),
/* harmony export */   "FilterableWithIndex": () => (/* binding */ FilterableWithIndex),
/* harmony export */   "Foldable": () => (/* binding */ Foldable),
/* harmony export */   "FoldableWithIndex": () => (/* binding */ FoldableWithIndex),
/* harmony export */   "Traversable": () => (/* binding */ Traversable),
/* harmony export */   "TraversableWithIndex": () => (/* binding */ TraversableWithIndex),
/* harmony export */   "Witherable": () => (/* binding */ Witherable),
/* harmony export */   "readonlyArray": () => (/* binding */ readonlyArray),
/* harmony export */   "unsafeInsertAt": () => (/* binding */ unsafeInsertAt),
/* harmony export */   "unsafeUpdateAt": () => (/* binding */ unsafeUpdateAt),
/* harmony export */   "unsafeDeleteAt": () => (/* binding */ unsafeDeleteAt),
/* harmony export */   "empty": () => (/* binding */ empty),
/* harmony export */   "every": () => (/* binding */ every),
/* harmony export */   "some": () => (/* binding */ some),
/* harmony export */   "Do": () => (/* binding */ Do),
/* harmony export */   "bindTo": () => (/* binding */ bindTo),
/* harmony export */   "bind": () => (/* binding */ bind),
/* harmony export */   "apS": () => (/* binding */ apS)
/* harmony export */ });
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./function */ "./node_modules/fp-ts/es6/function.js");
/* harmony import */ var _Option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Option */ "./node_modules/fp-ts/es6/Option.js");
/* harmony import */ var _Ord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ord */ "./node_modules/fp-ts/es6/Ord.js");



// -------------------------------------------------------------------------------------
// model
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 2.5.0
 */
// tslint:disable-next-line: readonly-array
function fromArray(as) {
    var l = as.length;
    if (l === 0) {
        return empty;
    }
    var ras = Array(l);
    for (var i = 0; i < l; i++) {
        ras[i] = as[i];
    }
    return ras;
}
/**
 * @category destructors
 * @since 2.5.0
 */
// tslint:disable-next-line: readonly-array
function toArray(ras) {
    var l = ras.length;
    var as = Array(l);
    for (var i = 0; i < l; i++) {
        as[i] = ras[i];
    }
    return as;
}
/**
 * @category instances
 * @since 2.5.0
 */
function getShow(S) {
    return {
        show: function (as) { return "[" + as.map(S.show).join(', ') + "]"; }
    };
}
var concat = function (x, y) {
    var lenx = x.length;
    if (lenx === 0) {
        return y;
    }
    var leny = y.length;
    if (leny === 0) {
        return x;
    }
    var r = Array(lenx + leny);
    for (var i = 0; i < lenx; i++) {
        r[i] = x[i];
    }
    for (var i = 0; i < leny; i++) {
        r[i + lenx] = y[i];
    }
    return r;
};
/**
 * Returns a `Monoid` for `ReadonlyArray<A>`
 *
 * @example
 * import { getMonoid } from 'fp-ts/ReadonlyArray'
 *
 * const M = getMonoid<number>()
 * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])
 *
 * @category instances
 * @since 2.5.0
 */
function getMonoid() {
    return {
        concat: concat,
        empty: empty
    };
}
/**
 * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two
 * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of
 * different lengths, the result is non equality.
 *
 * @example
 * import { eqString } from 'fp-ts/Eq'
 * import { getEq } from 'fp-ts/ReadonlyArray'
 *
 * const E = getEq(eqString)
 * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)
 * assert.strictEqual(E.equals(['a'], []), false)
 *
 * @category instances
 * @since 2.5.0
 */
function getEq(E) {
    return {
        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }
    };
}
/**
 * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such
 * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in
 * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have
 * the same length, the result is equality.
 *
 * @example
 * import { getOrd } from 'fp-ts/ReadonlyArray'
 * import { ordString } from 'fp-ts/Ord'
 *
 * const O = getOrd(ordString)
 * assert.strictEqual(O.compare(['b'], ['a']), 1)
 * assert.strictEqual(O.compare(['a'], ['a']), 0)
 * assert.strictEqual(O.compare(['a'], ['b']), -1)
 *
 *
 * @category instances
 * @since 2.5.0
 */
function getOrd(O) {
    return (0,_Ord__WEBPACK_IMPORTED_MODULE_0__.fromCompare)(function (a, b) {
        var aLen = a.length;
        var bLen = b.length;
        var len = Math.min(aLen, bLen);
        for (var i = 0; i < len; i++) {
            var ordering = O.compare(a[i], b[i]);
            if (ordering !== 0) {
                return ordering;
            }
        }
        return _Ord__WEBPACK_IMPORTED_MODULE_0__.ordNumber.compare(aLen, bLen);
    });
}
/**
 * Return a list of length `n` with element `i` initialized with `f(i)`
 *
 * @example
 * import { makeBy } from 'fp-ts/ReadonlyArray'
 *
 * const double = (n: number): number => n * 2
 * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])
 *
 * @category constructors
 * @since 2.5.0
 */
function makeBy(n, f) {
    // tslint:disable-next-line: readonly-array
    var r = [];
    for (var i = 0; i < n; i++) {
        r.push(f(i));
    }
    return r;
}
/**
 * Create an array containing a range of integers, including both endpoints
 *
 * @example
 * import { range } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])
 *
 * @category constructors
 * @since 2.5.0
 */
function range(start, end) {
    return makeBy(end - start + 1, function (i) { return start + i; });
}
/**
 * Create an array containing a value repeated the specified number of times
 *
 * @example
 * import { replicate } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])
 *
 * @category constructors
 * @since 2.5.0
 */
function replicate(n, a) {
    return makeBy(n, function () { return a; });
}
/**
 * Removes one level of nesting
 *
 * Derivable from `Monad`.
 *
 * @example
 * import { flatten } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
function flatten(mma) {
    var rLen = 0;
    var len = mma.length;
    for (var i = 0; i < len; i++) {
        rLen += mma[i].length;
    }
    var r = Array(rLen);
    var start = 0;
    for (var i = 0; i < len; i++) {
        var arr = mma[i];
        var l = arr.length;
        for (var j = 0; j < l; j++) {
            r[j + start] = arr[j];
        }
        start += l;
    }
    return r;
}
/**
 * Break an array into its first element and remaining elements
 *
 * @example
 * import { foldLeft } from 'fp-ts/ReadonlyArray'
 *
 * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))
 * assert.strictEqual(len([1, 2, 3]), 3)
 *
 * @category destructors
 * @since 2.5.0
 */
function foldLeft(onEmpty, onCons) {
    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };
}
/**
 * Break an array into its initial elements and the last element
 *
 * @category destructors
 * @since 2.5.0
 */
function foldRight(onEmpty, onCons) {
    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };
}
/**
 * Same as `reduce` but it carries over the intermediate steps
 *
 * @example
 * import { scanLeft } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])
 *
 * @category combinators
 * @since 2.5.0
 */
function scanLeft(b, f) {
    return function (as) {
        var l = as.length;
        var r = new Array(l + 1);
        r[0] = b;
        for (var i = 0; i < l; i++) {
            r[i + 1] = f(r[i], as[i]);
        }
        return r;
    };
}
/**
 * Fold an array from the right, keeping all intermediate results instead of only the final result
 *
 * @example
 * import { scanRight } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])
 *
 * @category combinators
 * @since 2.5.0
 */
function scanRight(b, f) {
    return function (as) {
        var l = as.length;
        var r = new Array(l + 1);
        r[l] = b;
        for (var i = l - 1; i >= 0; i--) {
            r[i] = f(as[i], r[i + 1]);
        }
        return r;
    };
}
/**
 * Test whether an array is empty
 *
 * @example
 * import { isEmpty } from 'fp-ts/ReadonlyArray'
 *
 * assert.strictEqual(isEmpty([]), true)
 *
 * @since 2.5.0
 */
function isEmpty(as) {
    return as.length === 0;
}
/**
 * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`
 *
 * @category guards
 * @since 2.5.0
 */
function isNonEmpty(as) {
    return as.length > 0;
}
/**
 * Test whether an array contains a particular index
 *
 * @since 2.5.0
 */
function isOutOfBound(i, as) {
    return i < 0 || i >= as.length;
}
function lookup(i, as) {
    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(as[i]);
}
function cons(head, tail) {
    if (tail === undefined) {
        return function (tail) { return cons(head, tail); };
    }
    var len = tail.length;
    var r = Array(len + 1);
    for (var i = 0; i < len; i++) {
        r[i + 1] = tail[i];
    }
    r[0] = head;
    return r;
}
// TODO: curry and make data-last in v3
/**
 * Append an element to the end of an array, creating a new non empty array
 *
 * @example
 * import { snoc } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.5.0
 */
function snoc(init, end) {
    var len = init.length;
    var r = Array(len + 1);
    for (var i = 0; i < len; i++) {
        r[i] = init[i];
    }
    r[len] = end;
    return r;
}
/**
 * Get the first element in an array, or `None` if the array is empty
 *
 * @example
 * import { head } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(head([1, 2, 3]), some(1))
 * assert.deepStrictEqual(head([]), none)
 *
 * @since 2.5.0
 */
function head(as) {
    return isEmpty(as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(as[0]);
}
/**
 * Get the last element in an array, or `None` if the array is empty
 *
 * @example
 * import { last } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(last([1, 2, 3]), some(3))
 * assert.deepStrictEqual(last([]), none)
 *
 * @since 2.5.0
 */
function last(as) {
    return lookup(as.length - 1, as);
}
/**
 * Get all but the first element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { tail } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(tail([]), none)
 *
 * @since 2.5.0
 */
function tail(as) {
    return isEmpty(as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(as.slice(1));
}
/**
 * Get all but the last element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { init } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))
 * assert.deepStrictEqual(init([]), none)
 *
 * @since 2.5.0
 */
function init(as) {
    var len = as.length;
    return len === 0 ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(as.slice(0, len - 1));
}
/**
 * Keep only a number of elements from the start of an array, creating a new array.
 * `n` must be a natural number
 *
 * @example
 * import { takeLeft } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])
 *
 * @category combinators
 * @since 2.5.0
 */
function takeLeft(n) {
    return function (as) { return as.slice(0, n); };
}
/**
 * Keep only a number of elements from the end of an array, creating a new array.
 * `n` must be a natural number
 *
 * @example
 * import { takeRight } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])
 *
 * @since 2.5.0
 */
function takeRight(n) {
    return function (as) { return (n === 0 ? empty : as.slice(-n)); };
}
function takeLeftWhile(predicate) {
    return function (as) {
        var i = spanIndexUncurry(as, predicate);
        var init = Array(i);
        for (var j = 0; j < i; j++) {
            init[j] = as[j];
        }
        return init;
    };
}
var spanIndexUncurry = function (as, predicate) {
    var l = as.length;
    var i = 0;
    for (; i < l; i++) {
        if (!predicate(as[i])) {
            break;
        }
    }
    return i;
};
function spanLeft(predicate) {
    return function (as) {
        var i = spanIndexUncurry(as, predicate);
        var init = Array(i);
        for (var j = 0; j < i; j++) {
            init[j] = as[j];
        }
        var l = as.length;
        var rest = Array(l - i);
        for (var j = i; j < l; j++) {
            rest[j - i] = as[j];
        }
        return { init: init, rest: rest };
    };
}
/**
 * Drop a number of elements from the start of an array, creating a new array
 *
 * @example
 * import { dropLeft } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])
 *
 * @category combinators
 * @since 2.5.0
 */
function dropLeft(n) {
    return function (as) { return as.slice(n, as.length); };
}
/**
 * Drop a number of elements from the end of an array, creating a new array
 *
 * @example
 * import { dropRight } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
function dropRight(n) {
    return function (as) { return as.slice(0, as.length - n); };
}
/**
 * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array
 *
 * @example
 * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])
 *
 * @category combinators
 * @since 2.5.0
 */
function dropLeftWhile(predicate) {
    return function (as) {
        var i = spanIndexUncurry(as, predicate);
        var l = as.length;
        var rest = Array(l - i);
        for (var j = i; j < l; j++) {
            rest[j - i] = as[j];
        }
        return rest;
    };
}
/**
 * Find the first index for which a predicate holds
 *
 * @example
 * import { findIndex } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)
 *
 * @since 2.5.0
 */
function findIndex(predicate) {
    return function (as) {
        var len = as.length;
        for (var i = 0; i < len; i++) {
            if (predicate(as[i])) {
                return _Option__WEBPACK_IMPORTED_MODULE_1__.some(i);
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
function findFirst(predicate) {
    return function (as) {
        var len = as.length;
        for (var i = 0; i < len; i++) {
            if (predicate(as[i])) {
                return _Option__WEBPACK_IMPORTED_MODULE_1__.some(as[i]);
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
/**
 * Find the first element returned by an option based selector function
 *
 * @example
 * import { findFirstMap } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   name: string
 *   age?: number
 * }
 *
 * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the first person that has an age
 * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))
 *
 * @since 2.5.0
 */
function findFirstMap(f) {
    return function (as) {
        var len = as.length;
        for (var i = 0; i < len; i++) {
            var v = f(as[i]);
            if (_Option__WEBPACK_IMPORTED_MODULE_1__.isSome(v)) {
                return v;
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
function findLast(predicate) {
    return function (as) {
        var len = as.length;
        for (var i = len - 1; i >= 0; i--) {
            if (predicate(as[i])) {
                return _Option__WEBPACK_IMPORTED_MODULE_1__.some(as[i]);
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
/**
 * Find the last element returned by an option based selector function
 *
 * @example
 * import { findLastMap } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   name: string
 *   age?: number
 * }
 *
 * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the last person that has an age
 * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))
 *
 * @since 2.5.0
 */
function findLastMap(f) {
    return function (as) {
        var len = as.length;
        for (var i = len - 1; i >= 0; i--) {
            var v = f(as[i]);
            if (_Option__WEBPACK_IMPORTED_MODULE_1__.isSome(v)) {
                return v;
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
/**
 * Returns the index of the last element of the list which matches the predicate
 *
 * @example
 * import { findLastIndex } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface X {
 *   a: number
 *   b: number
 * }
 * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]
 * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))
 * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)
 *
 *
 * @since 2.5.0
 */
function findLastIndex(predicate) {
    return function (as) {
        var len = as.length;
        for (var i = len - 1; i >= 0; i--) {
            if (predicate(as[i])) {
                return _Option__WEBPACK_IMPORTED_MODULE_1__.some(i);
            }
        }
        return _Option__WEBPACK_IMPORTED_MODULE_1__.none;
    };
}
/**
 * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { insertAt } from 'fp-ts/ReadonlyArray'
 * import { some } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))
 *
 * @since 2.5.0
 */
function insertAt(i, a) {
    return function (as) { return (i < 0 || i > as.length ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(unsafeInsertAt(i, a, as))); };
}
/**
 * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { updateAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))
 * assert.deepStrictEqual(updateAt(1, 1)([]), none)
 *
 * @since 2.5.0
 */
function updateAt(i, a) {
    return function (as) { return (isOutOfBound(i, as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(unsafeUpdateAt(i, a, as))); };
}
/**
 * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { deleteAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(deleteAt(1)([]), none)
 *
 * @since 2.5.0
 */
function deleteAt(i) {
    return function (as) { return (isOutOfBound(i, as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(unsafeDeleteAt(i, as))); };
}
/**
 * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out
 * of bounds
 *
 * @example
 * import { modifyAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * const double = (x: number): number => x * 2
 * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))
 * assert.deepStrictEqual(modifyAt(1, double)([]), none)
 *
 * @since 2.5.0
 */
function modifyAt(i, f) {
    return function (as) { return (isOutOfBound(i, as) ? _Option__WEBPACK_IMPORTED_MODULE_1__.none : _Option__WEBPACK_IMPORTED_MODULE_1__.some(unsafeUpdateAt(i, f(as[i]), as))); };
}
/**
 * Reverse an array, creating a new array
 *
 * @example
 * import { reverse } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])
 *
 * @category combinators
 * @since 2.5.0
 */
function reverse(as) {
    if (isEmpty(as)) {
        return as;
    }
    return as.slice().reverse();
}
/**
 * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order
 *
 * @example
 * import { rights } from 'fp-ts/ReadonlyArray'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])
 *
 * @category combinators
 * @since 2.5.0
 */
function rights(as) {
    // tslint:disable-next-line: readonly-array
    var r = [];
    var len = as.length;
    for (var i = 0; i < len; i++) {
        var a = as[i];
        if (a._tag === 'Right') {
            r.push(a.right);
        }
    }
    return r;
}
/**
 * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order
 *
 * @example
 * import { lefts } from 'fp-ts/ReadonlyArray'
 * import { left, right } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])
 *
 * @since 2.5.0
 */
function lefts(as) {
    // tslint:disable-next-line: readonly-array
    var r = [];
    var len = as.length;
    for (var i = 0; i < len; i++) {
        var a = as[i];
        if (a._tag === 'Left') {
            r.push(a.left);
        }
    }
    return r;
}
/**
 * Sort the elements of an array in increasing order, creating a new array
 *
 * @example
 * import { sort } from 'fp-ts/ReadonlyArray'
 * import { ordNumber } from 'fp-ts/Ord'
 *
 * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
var sort = function (O) { return function (as) {
    return as.length <= 1 ? as : as.slice().sort(O.compare);
}; };
// TODO: curry and make data-last in v3
/**
 * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one
 * input array is short, excess elements of the longer array are discarded.
 *
 * @example
 * import { zipWith } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])
 *
 * @category combinators
 * @since 2.5.0
 */
function zipWith(fa, fb, f) {
    // tslint:disable-next-line: readonly-array
    var fc = [];
    var len = Math.min(fa.length, fb.length);
    for (var i = 0; i < len; i++) {
        fc[i] = f(fa[i], fb[i]);
    }
    return fc;
}
function zip(as, bs) {
    if (bs === undefined) {
        return function (bs) { return zip(bs, as); };
    }
    return zipWith(as, bs, function (a, b) { return [a, b]; });
}
/**
 * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays
 *
 * @example
 * import { unzip } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])
 *
 * @since 2.5.0
 */
function unzip(as) {
    // tslint:disable-next-line: readonly-array
    var fa = [];
    // tslint:disable-next-line: readonly-array
    var fb = [];
    for (var i = 0; i < as.length; i++) {
        fa[i] = as[i][0];
        fb[i] = as[i][1];
    }
    return [fa, fb];
}
/**
 * Prepend an element to every member of an array
 *
 * @example
 * import { prependToAll } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var prependToAll = function (e) { return function (xs) {
    // tslint:disable-next-line: readonly-array
    var ys = [];
    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {
        var x = xs_1[_i];
        ys.push(e, x);
    }
    return ys;
}; };
/**
 * Places an element in between members of an array
 *
 * @example
 * import { intersperse } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
function intersperse(e) {
    return function (as) {
        var length = as.length;
        if (length === 0) {
            return as;
        }
        return cons(as[0], prependToAll(e)(as.slice(1, as.length)));
    };
}
/**
 * Rotate an array to the right by `n` steps
 *
 * @example
 * import { rotate } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
function rotate(n) {
    return function (as) {
        var len = as.length;
        if (n === 0 || len <= 1 || len === Math.abs(n)) {
            return as;
        }
        else if (n < 0) {
            return rotate(len + n)(as);
        }
        else {
            return as.slice(-n).concat(as.slice(0, len - n));
        }
    };
}
function elem(E) {
    return function (a, as) {
        if (as === undefined) {
            var elemE_1 = elem(E);
            return function (as) { return elemE_1(a, as); };
        }
        var predicate = function (element) { return E.equals(element, a); };
        var i = 0;
        var len = as.length;
        for (; i < len; i++) {
            if (predicate(as[i])) {
                return true;
            }
        }
        return false;
    };
}
/**
 * Remove duplicates from an array, keeping the first occurrence of an element.
 *
 * @example
 * import { uniq } from 'fp-ts/ReadonlyArray'
 * import { eqNumber } from 'fp-ts/Eq'
 *
 * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])
 *
 * @category combinators
 * @since 2.5.0
 */
function uniq(E) {
    var elemS = elem(E);
    return function (as) {
        var len = as.length;
        if (len <= 1) {
            return as;
        }
        // tslint:disable-next-line: readonly-array
        var r = [];
        var i = 0;
        for (; i < len; i++) {
            var a = as[i];
            if (!elemS(a, r)) {
                r.push(a);
            }
        }
        return len === r.length ? as : r;
    };
}
/**
 * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,
 * etc...
 *
 * @example
 * import { sortBy } from 'fp-ts/ReadonlyArray'
 * import { ord, ordString, ordNumber } from 'fp-ts/Ord'
 *
 * interface Person {
 *   name: string
 *   age: number
 * }
 * const byName = ord.contramap(ordString, (p: Person) => p.name)
 * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)
 *
 * const sortByNameByAge = sortBy([byName, byAge])
 *
 * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]
 * assert.deepStrictEqual(sortByNameByAge(persons), [
 *   { name: 'a', age: 1 },
 *   { name: 'b', age: 2 },
 *   { name: 'b', age: 3 },
 *   { name: 'c', age: 2 }
 * ])
 *
 * @category combinators
 * @since 2.5.0
 */
function sortBy(ords) {
    var M = (0,_Ord__WEBPACK_IMPORTED_MODULE_0__.getMonoid)();
    return sort(ords.reduce(M.concat, M.empty));
}
/**
 * A useful recursion pattern for processing an array to produce a new array, often used for "chopping" up the input
 * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a
 * value and the rest of the array.
 *
 * @example
 * import { Eq, eqNumber } from 'fp-ts/Eq'
 * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'
 *
 * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {
 *   return chop(as => {
 *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)
 *     return [init, rest]
 *   })
 * }
 * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])
 *
 * @category combinators
 * @since 2.5.0
 */
var chop = function (f) { return function (as) {
    // tslint:disable-next-line: readonly-array
    var result = [];
    var cs = as;
    while (isNonEmpty(cs)) {
        var _a = f(cs), b = _a[0], c = _a[1];
        result.push(b);
        cs = c;
    }
    return result;
}; };
/**
 * Splits an array into two pieces, the first piece has `n` elements.
 *
 * @example
 * import { splitAt } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])
 *
 * @since 2.5.0
 */
function splitAt(n) {
    return function (as) { return [as.slice(0, n), as.slice(n)]; };
}
/**
 * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of
 * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive
 * definition of `chunksOf`; it satisfies the property that
 *
 * ```ts
 * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))
 * ```
 *
 * whenever `n` evenly divides the length of `xs`.
 *
 * @example
 * import { chunksOf } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])
 *
 *
 * @since 2.5.0
 */
function chunksOf(n) {
    var f = chop(splitAt(n));
    return function (as) { return (as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };
}
function comprehension(input, f, g) {
    if (g === void 0) { g = function () { return true; }; }
    var go = function (scope, input) {
        if (input.length === 0) {
            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;
        }
        else {
            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });
        }
    };
    return go(empty, input);
}
function union(E) {
    var elemE = elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var unionE_1 = union(E);
            return function (ys) { return unionE_1(ys, xs); };
        }
        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));
    };
}
function intersection(E) {
    var elemE = elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var intersectionE_1 = intersection(E);
            return function (ys) { return intersectionE_1(ys, xs); };
        }
        return xs.filter(function (a) { return elemE(a, ys); });
    };
}
function difference(E) {
    var elemE = elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var differenceE_1 = difference(E);
            return function (ys) { return differenceE_1(ys, xs); };
        }
        return xs.filter(function (a) { return !elemE(a, ys); });
    };
}
/**
 * Wrap a value into the type constructor.
 *
 * @category Applicative
 * @since 2.5.0
 */
var of = function (a) { return [a]; };
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = function () { return empty; };
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var map_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, map(f)); };
var mapWithIndex_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, mapWithIndex(f)); };
var ap_ = function (fab, fa) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fab, ap(fa)); };
var chain_ = function (ma, f) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(ma, chain(f));
};
var filter_ = function (fa, predicate) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, filter(predicate)); };
var filterMap_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, filterMap(f)); };
var partitionWithIndex_ = function (fa, predicateWithIndex) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, partitionWithIndex(predicateWithIndex)); };
var partition_ = function (fa, predicate) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, partition(predicate)); };
var partitionMap_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, partitionMap(f)); };
var partitionMapWithIndex_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, partitionMapWithIndex(f)); };
var alt_ = function (fa, that) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, alt(that)); };
var reduce_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, reduce(b, f)); };
var foldMap_ = function (M) {
    var foldMapM = foldMap(M);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, foldMapM(f)); };
};
var reduceRight_ = function (fa, b, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, reduceRight(b, f)); };
var reduceWithIndex_ = function (fa, b, f) {
    var l = fa.length;
    var r = b;
    for (var i = 0; i < l; i++) {
        r = f(i, r, fa[i]);
    }
    return r;
};
var foldMapWithIndex_ = function (M) { return function (fa, f) {
    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);
}; };
var reduceRightWithIndex_ = function (fa, b, f) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, reduceRightWithIndex(b, f));
};
var filterMapWithIndex_ = function (fa, f) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, filterMapWithIndex(f));
};
var filterWithIndex_ = function (fa, predicateWithIndex) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, filterWithIndex(predicateWithIndex)); };
var extend_ = function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, extend(f)); };
var traverse_ = function (F) {
    var traverseF = traverse(F);
    return function (ta, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(ta, traverseF(f)); };
};
/* istanbul ignore next */
var traverseWithIndex_ = function (F) {
    var traverseWithIndexF = traverseWithIndex(F);
    return function (ta, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(ta, traverseWithIndexF(f)); };
};
/* istanbul ignore next */
var wither_ = function (F) {
    var witherF = wither(F);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, witherF(f)); };
};
/* istanbul ignore next */
var wilt_ = function (F) {
    var wiltF = wilt(F);
    return function (fa, f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, wiltF(f)); };
};
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) { return concat(fa, that()); }; };
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.5.0
 */
var alt = altW;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.5.0
 */
var ap = function (fa) {
    return chain(function (f) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, map(f)); });
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
var apFirst = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.flow)(map(function (a) { return function () { return a; }; }), ap(fb));
};
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
var apSecond = function (fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.flow)(map(function () { return function (b) { return b; }; }), ap(fb));
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.5.0
 */
var chain = function (f) { return function (ma) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(ma, chainWithIndex(function (_, a) { return f(a); }));
}; };
/**
 * @since 2.7.0
 */
var chainWithIndex = function (f) { return function (ma) {
    var outLen = 0;
    var l = ma.length;
    var temp = new Array(l);
    for (var i = 0; i < l; i++) {
        var e = ma[i];
        var arr = f(i, e);
        outLen += arr.length;
        temp[i] = arr;
    }
    var out = Array(outLen);
    var start = 0;
    for (var i = 0; i < l; i++) {
        var arr = temp[i];
        var l_1 = arr.length;
        for (var j = 0; j < l_1; j++) {
            out[j + start] = arr[j];
        }
        start += l_1;
    }
    return out;
}; };
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Monad`.
 *
 * @category combinators
 * @since 2.5.0
 */
var chainFirst = function (f) {
    return chain(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(f(a), map(function () { return a; }));
    });
};
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.5.0
 */
var map = function (f) { return function (fa) {
    return fa.map(function (a) { return f(a); });
}; };
/**
 * @category FunctorWithIndex
 * @since 2.5.0
 */
var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };
/**
 * @category Compactable
 * @since 2.5.0
 */
var separate = function (fa) {
    // tslint:disable-next-line: readonly-array
    var left = [];
    // tslint:disable-next-line: readonly-array
    var right = [];
    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {
        var e = fa_1[_i];
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return {
        left: left,
        right: right
    };
};
/**
 * @category Filterable
 * @since 2.5.0
 */
var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var filterMapWithIndex = function (f) { return function (fa) {
    // tslint:disable-next-line: readonly-array
    var result = [];
    for (var i = 0; i < fa.length; i++) {
        var optionB = f(i, fa[i]);
        if (_Option__WEBPACK_IMPORTED_MODULE_1__.isSome(optionB)) {
            result.push(optionB.value);
        }
    }
    return result;
}; };
/**
 * @category Filterable
 * @since 2.5.0
 */
var filterMap = function (f) {
    return filterMapWithIndex(function (_, a) { return f(a); });
};
/**
 * @category Compactable
 * @since 2.5.0
 */
var compact = 
/*#__PURE__*/
filterMap(_function__WEBPACK_IMPORTED_MODULE_2__.identity);
/**
 * @category Filterable
 * @since 2.5.0
 */
var partition = function (predicate) {
    return partitionWithIndex(function (_, a) { return predicate(a); });
};
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var partitionWithIndex = function (predicateWithIndex) { return function (fa) {
    // tslint:disable-next-line: readonly-array
    var left = [];
    // tslint:disable-next-line: readonly-array
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var a = fa[i];
        if (predicateWithIndex(i, a)) {
            right.push(a);
        }
        else {
            left.push(a);
        }
    }
    return {
        left: left,
        right: right
    };
}; };
/**
 * @category Filterable
 * @since 2.5.0
 */
var partitionMap = function (f) {
    return partitionMapWithIndex(function (_, a) { return f(a); });
};
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var partitionMapWithIndex = function (f) { return function (fa) {
    // tslint:disable-next-line: readonly-array
    var left = [];
    // tslint:disable-next-line: readonly-array
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var e = f(i, fa[i]);
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return {
        left: left,
        right: right
    };
}; };
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var filterWithIndex = function (predicateWithIndex) { return function (fa) {
    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });
}; };
/**
 * @category Extend
 * @since 2.5.0
 */
var extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.5.0
 */
var duplicate = 
/*#__PURE__*/
extend(_function__WEBPACK_IMPORTED_MODULE_2__.identity);
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var foldMapWithIndex = function (M) {
    var foldMapWithIndexM = foldMapWithIndex_(M);
    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };
};
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduce = function (b, f) {
    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });
};
/**
 * @category Foldable
 * @since 2.5.0
 */
var foldMap = function (M) {
    var foldMapWithIndexM = foldMapWithIndex(M);
    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };
};
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduceRight = function (b, f) {
    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });
};
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };
/**
 * **for optimized and stack safe version check the data types `traverseArray` function**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) {
    var traverseWithIndexF = traverseWithIndex(F);
    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };
};
/**
 * **for optimized and stack safe version check the data types `sequenceArray` function**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ta) {
    return reduce_(ta, F.of(zero()), function (fas, fa) {
        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);
    });
}; };
/**
 * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**
 * @category TraversableWithIndex
 * @since 2.6.3
 */
var traverseWithIndex = function (F) { return function (f) {
    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {
        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));
    });
}; };
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = function (F) {
    var traverseF = traverse(F);
    return function (f) { return function (fa) { return F.map((0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, traverseF(f)), compact); }; };
};
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = function (F) {
    var traverseF = traverse(F);
    return function (f) { return function (fa) { return F.map((0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(fa, traverseF(f)), separate); }; };
};
/**
 * @category Unfoldable
 * @since 2.6.6
 */
var unfold = function (b, f) {
    // tslint:disable-next-line: readonly-array
    var ret = [];
    var bb = b;
    while (true) {
        var mt = f(bb);
        if (_Option__WEBPACK_IMPORTED_MODULE_1__.isSome(mt)) {
            var _a = mt.value, a = _a[0], b_1 = _a[1];
            ret.push(a);
            bb = b_1;
        }
        else {
            break;
        }
    }
    return ret;
};
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.5.0
 */
var URI = 'ReadonlyArray';
/**
 * @category instances
 * @since 2.7.0
 */
var Functor = {
    URI: URI,
    map: map_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FunctorWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Applicative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of
};
/**
 * @category instances
 * @since 2.7.0
 */
var Monad = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Unfoldable = {
    URI: URI,
    unfold: unfold
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alt = {
    URI: URI,
    map: map_,
    alt: alt_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Alternative = {
    URI: URI,
    map: map_,
    ap: ap_,
    of: of,
    alt: alt_,
    zero: zero
};
/**
 * @category instances
 * @since 2.7.0
 */
var Extend = {
    URI: URI,
    map: map_,
    extend: extend_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Compactable = {
    URI: URI,
    compact: compact,
    separate: separate
};
/**
 * @category instances
 * @since 2.7.0
 */
var Filterable = {
    URI: URI,
    map: map_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FilterableWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    partitionMapWithIndex: partitionMapWithIndex_,
    partitionWithIndex: partitionWithIndex_,
    filterMapWithIndex: filterMapWithIndex_,
    filterWithIndex: filterWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Foldable = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_
};
/**
 * @category instances
 * @since 2.7.0
 */
var FoldableWithIndex = {
    URI: URI,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Traversable = {
    URI: URI,
    map: map_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
var TraversableWithIndex = {
    URI: URI,
    map: map_,
    mapWithIndex: mapWithIndex_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_,
    traverse: traverse_,
    sequence: sequence,
    traverseWithIndex: traverseWithIndex_
};
/**
 * @category instances
 * @since 2.7.0
 */
var Witherable = {
    URI: URI,
    map: map_,
    compact: compact,
    separate: separate,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    wither: wither_,
    wilt: wilt_
};
// TODO: remove in v3
/**
 * @category instances
 * @since 2.5.0
 */
var readonlyArray = {
    URI: URI,
    compact: compact,
    separate: separate,
    map: map_,
    ap: ap_,
    of: of,
    chain: chain_,
    filter: filter_,
    filterMap: filterMap_,
    partition: partition_,
    partitionMap: partitionMap_,
    mapWithIndex: mapWithIndex_,
    partitionMapWithIndex: partitionMapWithIndex_,
    partitionWithIndex: partitionWithIndex_,
    filterMapWithIndex: filterMapWithIndex_,
    filterWithIndex: filterWithIndex_,
    alt: alt_,
    zero: zero,
    unfold: unfold,
    reduce: reduce_,
    foldMap: foldMap_,
    reduceRight: reduceRight_,
    traverse: traverse_,
    sequence: sequence,
    reduceWithIndex: reduceWithIndex_,
    foldMapWithIndex: foldMapWithIndex_,
    reduceRightWithIndex: reduceRightWithIndex_,
    traverseWithIndex: traverseWithIndex_,
    extend: extend_,
    wither: wither_,
    wilt: wilt_
};
// -------------------------------------------------------------------------------------
// unsafe
// -------------------------------------------------------------------------------------
/**
 * @category unsafe
 * @since 2.5.0
 */
function unsafeInsertAt(i, a, as) {
    var xs = as.slice();
    xs.splice(i, 0, a);
    return xs;
}
/**
 * @category unsafe
 * @since 2.5.0
 */
function unsafeUpdateAt(i, a, as) {
    if (as[i] === a) {
        return as;
    }
    else {
        var xs = as.slice();
        xs[i] = a;
        return xs;
    }
}
/**
 * @category unsafe
 * @since 2.5.0
 */
function unsafeDeleteAt(i, as) {
    var xs = as.slice();
    xs.splice(i, 1);
    return xs;
}
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * An empty array
 *
 * @since 2.5.0
 */
var empty = [];
/**
 * Check if a predicate holds true for every array member.
 *
 * @example
 * import { every } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const isPositive = (n: number): boolean => n > 0
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)
 * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)
 *
 * @since 2.9.0
 */
var every = function (predicate) { return function (as) { return as.every(predicate); }; };
/**
 * Check if a predicate holds true for any array member.
 *
 * @example
 * import { some } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const isPositive = (n: number): boolean => n > 0
 *
 * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)
 * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)
 *
 * @since 2.9.0
 */
var some = function (predicate) { return function (as) { return as.some(predicate); }; };
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
var Do = 
/*#__PURE__*/
of({});
/**
 * @since 2.8.0
 */
var bindTo = function (name) {
    return map((0,_function__WEBPACK_IMPORTED_MODULE_2__.bindTo_)(name));
};
/**
 * @since 2.8.0
 */
var bind = function (name, f) {
    return chain(function (a) {
        return (0,_function__WEBPACK_IMPORTED_MODULE_2__.pipe)(f(a), map(function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.bind_)(a, name, b); }));
    });
};
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
var apS = function (name, fb) {
    return (0,_function__WEBPACK_IMPORTED_MODULE_2__.flow)(map(function (a) { return function (b) { return (0,_function__WEBPACK_IMPORTED_MODULE_2__.bind_)(a, name, b); }; }), ap(fb));
};


/***/ }),

/***/ "./node_modules/fp-ts/es6/function.js":
/*!********************************************!*\
  !*** ./node_modules/fp-ts/es6/function.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => (/* binding */ identity),
/* harmony export */   "unsafeCoerce": () => (/* binding */ unsafeCoerce),
/* harmony export */   "not": () => (/* binding */ not),
/* harmony export */   "constant": () => (/* binding */ constant),
/* harmony export */   "constTrue": () => (/* binding */ constTrue),
/* harmony export */   "constFalse": () => (/* binding */ constFalse),
/* harmony export */   "constNull": () => (/* binding */ constNull),
/* harmony export */   "constUndefined": () => (/* binding */ constUndefined),
/* harmony export */   "constVoid": () => (/* binding */ constVoid),
/* harmony export */   "flip": () => (/* binding */ flip),
/* harmony export */   "flow": () => (/* binding */ flow),
/* harmony export */   "tuple": () => (/* binding */ tuple),
/* harmony export */   "increment": () => (/* binding */ increment),
/* harmony export */   "decrement": () => (/* binding */ decrement),
/* harmony export */   "absurd": () => (/* binding */ absurd),
/* harmony export */   "tupled": () => (/* binding */ tupled),
/* harmony export */   "untupled": () => (/* binding */ untupled),
/* harmony export */   "pipe": () => (/* binding */ pipe),
/* harmony export */   "hole": () => (/* binding */ hole),
/* harmony export */   "bind_": () => (/* binding */ bind_),
/* harmony export */   "bindTo_": () => (/* binding */ bindTo_)
/* harmony export */ });
/**
 * @since 2.0.0
 */
/**
 * @since 2.0.0
 */
function identity(a) {
    return a;
}
/**
 * @since 2.0.0
 */
var unsafeCoerce = identity;
/**
 * @since 2.0.0
 */
function not(predicate) {
    return function (a) { return !predicate(a); };
}
/**
 * @since 2.0.0
 */
function constant(a) {
    return function () { return a; };
}
/**
 * A thunk that returns always `true`.
 *
 * @since 2.0.0
 */
var constTrue = 
/*#__PURE__*/
constant(true);
/**
 * A thunk that returns always `false`.
 *
 * @since 2.0.0
 */
var constFalse = 
/*#__PURE__*/
constant(false);
/**
 * A thunk that returns always `null`.
 *
 * @since 2.0.0
 */
var constNull = 
/*#__PURE__*/
constant(null);
/**
 * A thunk that returns always `undefined`.
 *
 * @since 2.0.0
 */
var constUndefined = 
/*#__PURE__*/
constant(undefined);
/**
 * A thunk that returns always `void`.
 *
 * @since 2.0.0
 */
var constVoid = constUndefined;
// TODO: remove in v3
/**
 * Flips the order of the arguments of a function of two arguments.
 *
 * @since 2.0.0
 */
function flip(f) {
    return function (b, a) { return f(a, b); };
}
function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {
    switch (arguments.length) {
        case 1:
            return ab;
        case 2:
            return function () {
                return bc(ab.apply(this, arguments));
            };
        case 3:
            return function () {
                return cd(bc(ab.apply(this, arguments)));
            };
        case 4:
            return function () {
                return de(cd(bc(ab.apply(this, arguments))));
            };
        case 5:
            return function () {
                return ef(de(cd(bc(ab.apply(this, arguments)))));
            };
        case 6:
            return function () {
                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));
            };
        case 7:
            return function () {
                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));
            };
        case 8:
            return function () {
                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));
            };
        case 9:
            return function () {
                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));
            };
    }
    return;
}
/**
 * @since 2.0.0
 */
function tuple() {
    var t = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        t[_i] = arguments[_i];
    }
    return t;
}
/**
 * @since 2.0.0
 */
function increment(n) {
    return n + 1;
}
/**
 * @since 2.0.0
 */
function decrement(n) {
    return n - 1;
}
/**
 * @since 2.0.0
 */
function absurd(_) {
    throw new Error('Called `absurd` function which should be uncallable');
}
/**
 * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.
 *
 * @example
 * import { tupled } from 'fp-ts/function'
 *
 * const add = tupled((x: number, y: number): number => x + y)
 *
 * assert.strictEqual(add([1, 2]), 3)
 *
 * @since 2.4.0
 */
function tupled(f) {
    return function (a) { return f.apply(void 0, a); };
}
/**
 * Inverse function of `tupled`
 *
 * @since 2.4.0
 */
function untupled(f) {
    return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return f(a);
    };
}
function pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {
    switch (arguments.length) {
        case 1:
            return a;
        case 2:
            return ab(a);
        case 3:
            return bc(ab(a));
        case 4:
            return cd(bc(ab(a)));
        case 5:
            return de(cd(bc(ab(a))));
        case 6:
            return ef(de(cd(bc(ab(a)))));
        case 7:
            return fg(ef(de(cd(bc(ab(a))))));
        case 8:
            return gh(fg(ef(de(cd(bc(ab(a)))))));
        case 9:
            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));
        case 10:
            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));
        case 11:
            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));
        case 12:
            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));
        case 13:
            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));
        case 14:
            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));
        case 15:
            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));
        case 16:
            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));
        case 17:
            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));
        case 18:
            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));
        case 19:
            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));
        case 20:
            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));
    }
    return;
}
/**
 * Type hole simulation
 *
 * @since 2.7.0
 */
var hole = absurd;
/**
 * @internal
 */
var bind_ = function (a, name, b) {
    var _a;
    return Object.assign({}, a, (_a = {}, _a[name] = b, _a));
};
/**
 * @internal
 */
var bindTo_ = function (name) { return function (b) {
    var _a;
    return (_a = {}, _a[name] = b, _a);
}; };


/***/ }),

/***/ "./node_modules/fp-ts/es6/pipeable.js":
/*!********************************************!*\
  !*** ./node_modules/fp-ts/es6/pipeable.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pipe": () => (/* binding */ pipe),
/* harmony export */   "pipeable": () => (/* binding */ pipeable)
/* harmony export */ });
/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./function */ "./node_modules/fp-ts/es6/function.js");

// TODO: remove module in v3
/**
 * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#flow) from `function` module instead.
 *
 * @since 2.0.0
 */
var pipe = _function__WEBPACK_IMPORTED_MODULE_0__.pipe;
var isFunctor = function (I) { return typeof I.map === 'function'; };
var isContravariant = function (I) { return typeof I.contramap === 'function'; };
var isFunctorWithIndex = function (I) { return typeof I.mapWithIndex === 'function'; };
var isApply = function (I) { return typeof I.ap === 'function'; };
var isChain = function (I) { return typeof I.chain === 'function'; };
var isBifunctor = function (I) { return typeof I.bimap === 'function'; };
var isExtend = function (I) { return typeof I.extend === 'function'; };
var isFoldable = function (I) { return typeof I.reduce === 'function'; };
var isFoldableWithIndex = function (I) { return typeof I.reduceWithIndex === 'function'; };
var isAlt = function (I) { return typeof I.alt === 'function'; };
var isCompactable = function (I) { return typeof I.compact === 'function'; };
var isFilterable = function (I) { return typeof I.filter === 'function'; };
var isFilterableWithIndex = function (I) {
    return typeof I.filterWithIndex === 'function';
};
var isProfunctor = function (I) { return typeof I.promap === 'function'; };
var isSemigroupoid = function (I) { return typeof I.compose === 'function'; };
var isMonadThrow = function (I) { return typeof I.throwError === 'function'; };
function pipeable(I) {
    var r = {};
    if (isFunctor(I)) {
        var map = function (f) { return function (fa) { return I.map(fa, f); }; };
        r.map = map;
    }
    if (isContravariant(I)) {
        var contramap = function (f) { return function (fa) { return I.contramap(fa, f); }; };
        r.contramap = contramap;
    }
    if (isFunctorWithIndex(I)) {
        var mapWithIndex = function (f) { return function (fa) { return I.mapWithIndex(fa, f); }; };
        r.mapWithIndex = mapWithIndex;
    }
    if (isApply(I)) {
        var ap = function (fa) { return function (fab) { return I.ap(fab, fa); }; };
        var apFirst = function (fb) { return function (fa) {
            return I.ap(I.map(fa, function (a) { return function () { return a; }; }), fb);
        }; };
        r.ap = ap;
        r.apFirst = apFirst;
        r.apSecond = function (fb) { return function (fa) {
            return I.ap(I.map(fa, function () { return function (b) { return b; }; }), fb);
        }; };
    }
    if (isChain(I)) {
        var chain = function (f) { return function (ma) { return I.chain(ma, f); }; };
        var chainFirst = function (f) { return function (ma) { return I.chain(ma, function (a) { return I.map(f(a), function () { return a; }); }); }; };
        var flatten = function (mma) { return I.chain(mma, _function__WEBPACK_IMPORTED_MODULE_0__.identity); };
        r.chain = chain;
        r.chainFirst = chainFirst;
        r.flatten = flatten;
    }
    if (isBifunctor(I)) {
        var bimap = function (f, g) { return function (fa) { return I.bimap(fa, f, g); }; };
        var mapLeft = function (f) { return function (fa) { return I.mapLeft(fa, f); }; };
        r.bimap = bimap;
        r.mapLeft = mapLeft;
    }
    if (isExtend(I)) {
        var extend = function (f) { return function (wa) { return I.extend(wa, f); }; };
        var duplicate = function (wa) { return I.extend(wa, _function__WEBPACK_IMPORTED_MODULE_0__.identity); };
        r.extend = extend;
        r.duplicate = duplicate;
    }
    if (isFoldable(I)) {
        var reduce = function (b, f) { return function (fa) { return I.reduce(fa, b, f); }; };
        var foldMap = function (M) {
            var foldMapM = I.foldMap(M);
            return function (f) { return function (fa) { return foldMapM(fa, f); }; };
        };
        var reduceRight = function (b, f) { return function (fa) { return I.reduceRight(fa, b, f); }; };
        r.reduce = reduce;
        r.foldMap = foldMap;
        r.reduceRight = reduceRight;
    }
    if (isFoldableWithIndex(I)) {
        var reduceWithIndex = function (b, f) { return function (fa) {
            return I.reduceWithIndex(fa, b, f);
        }; };
        var foldMapWithIndex = function (M) {
            var foldMapM = I.foldMapWithIndex(M);
            return function (f) { return function (fa) { return foldMapM(fa, f); }; };
        };
        var reduceRightWithIndex = function (b, f) { return function (fa) {
            return I.reduceRightWithIndex(fa, b, f);
        }; };
        r.reduceWithIndex = reduceWithIndex;
        r.foldMapWithIndex = foldMapWithIndex;
        r.reduceRightWithIndex = reduceRightWithIndex;
    }
    if (isAlt(I)) {
        var alt = function (that) { return function (fa) { return I.alt(fa, that); }; };
        r.alt = alt;
    }
    if (isCompactable(I)) {
        r.compact = I.compact;
        r.separate = I.separate;
    }
    if (isFilterable(I)) {
        var filter = function (predicate) { return function (fa) {
            return I.filter(fa, predicate);
        }; };
        var filterMap = function (f) { return function (fa) { return I.filterMap(fa, f); }; };
        var partition = function (predicate) { return function (fa) {
            return I.partition(fa, predicate);
        }; };
        var partitionMap = function (f) { return function (fa) { return I.partitionMap(fa, f); }; };
        r.filter = filter;
        r.filterMap = filterMap;
        r.partition = partition;
        r.partitionMap = partitionMap;
    }
    if (isFilterableWithIndex(I)) {
        var filterWithIndex = function (predicateWithIndex) { return function (fa) { return I.filterWithIndex(fa, predicateWithIndex); }; };
        var filterMapWithIndex = function (f) { return function (fa) {
            return I.filterMapWithIndex(fa, f);
        }; };
        var partitionWithIndex = function (predicateWithIndex) { return function (fa) { return I.partitionWithIndex(fa, predicateWithIndex); }; };
        var partitionMapWithIndex = function (f) { return function (fa) {
            return I.partitionMapWithIndex(fa, f);
        }; };
        r.filterWithIndex = filterWithIndex;
        r.filterMapWithIndex = filterMapWithIndex;
        r.partitionWithIndex = partitionWithIndex;
        r.partitionMapWithIndex = partitionMapWithIndex;
    }
    if (isProfunctor(I)) {
        var promap = function (f, g) { return function (fa) { return I.promap(fa, f, g); }; };
        r.promap = promap;
    }
    if (isSemigroupoid(I)) {
        var compose = function (that) { return function (fa) { return I.compose(fa, that); }; };
        r.compose = compose;
    }
    if (isMonadThrow(I)) {
        var fromOption = function (onNone) { return function (ma) {
            return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);
        }; };
        var fromEither = function (ma) {
            return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);
        };
        var fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); }; };
        var filterOrElse = function (predicate, onFalse) { return function (ma) { return I.chain(ma, function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); }); }; };
        r.fromOption = fromOption;
        r.fromEither = fromEither;
        r.fromPredicate = fromPredicate;
        r.filterOrElse = filterOrElse;
    }
    return r;
}


/***/ }),

/***/ "./node_modules/sanctuary-show/index.js":
/*!**********************************************!*\
  !*** ./node_modules/sanctuary-show/index.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//. # sanctuary-show
//.
//. Haskell has a `show` function which can be applied to a compatible value to
//. produce a descriptive string representation of that value. The idea is that
//. the string representation should, if possible, be an expression which would
//. produce the original value if evaluated.
//.
//. This library provides a similar [`show`](#show) function.
//.
//. In general, this property should hold: `eval (show (x)) = x`. In some cases
//. parens are necessary to ensure correct interpretation (`{}`, for example,
//. is an empty block rather than an empty object in some contexts). Thus the
//. property is more accurately stated `eval ('(' + show (x) + ')') = x`.
//.
//. One can make values of a custom type compatible with [`show`](#show) by
//. defining a `@@show` method. For example:
//.
//. ```javascript
//. //# Maybe#@@show :: Maybe a ~> () -> String
//. //.
//. //. ```javascript
//. //. > show (Nothing)
//. //. 'Nothing'
//. //.
//. //. > show (Just (['foo', 'bar', 'baz']))
//. //. 'Just (["foo", "bar", "baz"])'
//. //. ```
//. Maybe.prototype['@@show'] = function() {
//.   return this.isNothing ? 'Nothing' : 'Just (' + show (this.value) + ')';
//. };
//. ```

(function(f) {

  'use strict';

  /* istanbul ignore else */
  if ( true && typeof module.exports === 'object') {
    module.exports = f ();
  } else if ( true && __webpack_require__.amdO != null) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    self.sanctuaryShow = f ();
  }

} (function() {

  'use strict';

  //  $$show :: String
  var $$show = '@@show';

  //  seen :: Array Any
  var seen = [];

  //  entry :: Object -> String -> String
  function entry(o) {
    return function(k) {
      return show (k) + ': ' + show (o[k]);
    };
  }

  //  sortedKeys :: Object -> Array String
  function sortedKeys(o) {
    return (Object.keys (o)).sort ();
  }

  //# show :: Showable a => a -> String
  //.
  //. Returns a useful string representation of the given value.
  //.
  //. Dispatches to the value's `@@show` method if present.
  //.
  //. Where practical, `show (eval ('(' + show (x) + ')')) = show (x)`.
  //.
  //. ```javascript
  //. > show (null)
  //. 'null'
  //.
  //. > show (undefined)
  //. 'undefined'
  //.
  //. > show (true)
  //. 'true'
  //.
  //. > show (new Boolean (false))
  //. 'new Boolean (false)'
  //.
  //. > show (-0)
  //. '-0'
  //.
  //. > show (NaN)
  //. 'NaN'
  //.
  //. > show (new Number (Infinity))
  //. 'new Number (Infinity)'
  //.
  //. > show ('foo\n"bar"\nbaz\n')
  //. '"foo\\n\\"bar\\"\\nbaz\\n"'
  //.
  //. > show (new String (''))
  //. 'new String ("")'
  //.
  //. > show (['foo', 'bar', 'baz'])
  //. '["foo", "bar", "baz"]'
  //.
  //. > show ([[[[[0]]]]])
  //. '[[[[[0]]]]]'
  //.
  //. > show ({x: [1, 2], y: [3, 4], z: [5, 6]})
  //. '{"x": [1, 2], "y": [3, 4], "z": [5, 6]}'
  //. ```
  function show(x) {
    if (seen.indexOf (x) >= 0) return '<Circular>';

    switch (Object.prototype.toString.call (x)) {

      case '[object Boolean]':
        return typeof x === 'object' ?
          'new Boolean (' + show (x.valueOf ()) + ')' :
          x.toString ();

      case '[object Number]':
        return typeof x === 'object' ?
          'new Number (' + show (x.valueOf ()) + ')' :
          1 / x === -Infinity ? '-0' : x.toString (10);

      case '[object String]':
        return typeof x === 'object' ?
          'new String (' + show (x.valueOf ()) + ')' :
          JSON.stringify (x);

      case '[object Date]':
        return 'new Date (' +
               show (isNaN (x.valueOf ()) ? NaN : x.toISOString ()) +
               ')';

      case '[object Error]':
        return 'new ' + x.name + ' (' + show (x.message) + ')';

      case '[object Arguments]':
        return 'function () { return arguments; } (' +
               (Array.prototype.map.call (x, show)).join (', ') +
               ')';

      case '[object Array]':
        seen.push (x);
        try {
          return '[' + ((x.map (show)).concat (
            sortedKeys (x)
            .filter (function(k) { return !(/^\d+$/.test (k)); })
            .map (entry (x))
          )).join (', ') + ']';
        } finally {
          seen.pop ();
        }

      case '[object Object]':
        seen.push (x);
        try {
          return (
            $$show in x &&
            (x.constructor == null || x.constructor.prototype !== x) ?
              x[$$show] () :
              '{' + ((sortedKeys (x)).map (entry (x))).join (', ') + '}'
          );
        } finally {
          seen.pop ();
        }

      case '[object Set]':
        seen.push (x);
        try {
          return 'new Set (' + show (Array.from (x.values ())) + ')';
        } finally {
          seen.pop ();
        }

      case '[object Map]':
        seen.push (x);
        try {
          return 'new Map (' + show (Array.from (x.entries ())) + ')';
        } finally {
          seen.pop ();
        }

      default:
        return String (x);

    }
  }

  return show;

}));


/***/ }),

/***/ "./node_modules/sanctuary-type-identifiers/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/sanctuary-type-identifiers/index.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
        @@@@@@@            @@@@@@@         @@
      @@       @@        @@       @@      @@@
    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@
   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@
   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@
   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@
    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@
      @@                 @@                           @@  @@
        @@@@@@@            @@@@@@@               @@@@@    @@
                                                          */
//. # sanctuary-type-identifiers
//.
//. A type is a set of values. Boolean, for example, is the type comprising
//. `true` and `false`. A value may be a member of multiple types (`42` is a
//. member of Number, PositiveNumber, Integer, and many other types).
//.
//. In certain situations it is useful to divide JavaScript values into
//. non-overlapping types. The language provides two constructs for this
//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].
//. Each has pros and cons, but neither supports user-defined types.
//.
//. sanctuary-type-identifiers comprises:
//.
//.   - an npm and browser -compatible package for deriving the
//.     _type identifier_ of a JavaScript value; and
//.   - a specification which authors may follow to specify type
//.     identifiers for their types.
//.
//. ### Specification
//.
//. For a type to be compatible with the algorithm:
//.
//.   - every member of the type MUST have a `@@type` property
//.     (the _type identifier_); and
//.
//.   - the type identifier MUST be a string primitive and SHOULD have
//.     format `'<namespace>/<name>[@<version>]'`, where:
//.
//.       - `<namespace>` MUST consist of one or more characters, and
//.         SHOULD equal the name of the npm package which defines the
//.         type (including [scope][3] where appropriate);
//.
//.       - `<name>` MUST consist of one or more characters, and SHOULD
//.         be the unique name of the type; and
//.
//.       - `<version>` MUST consist of one or more digits, and SHOULD
//.         represent the version of the type.
//.
//. If the type identifier does not conform to the format specified above,
//. it is assumed that the entire string represents the _name_ of the type;
//. _namespace_ will be `null` and _version_ will be `0`.
//.
//. If the _version_ is not given, it is assumed to be `0`.

(function(f) {

  'use strict';

  /* istanbul ignore else */
  if ( true && typeof module.exports === 'object') {
    module.exports = f ();
  } else if ( true && __webpack_require__.amdO != null) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    self.sanctuaryTypeIdentifiers = f ();
  }

} (function() {

  'use strict';

  //  $$type :: String
  var $$type = '@@type';

  //  pattern :: RegExp
  var pattern = new RegExp (
    '^'
  + '([\\s\\S]+)'   //  <namespace>
  + '/'             //  SOLIDUS (U+002F)
  + '([\\s\\S]+?)'  //  <name>
  + '(?:'           //  optional non-capturing group {
  +   '@'           //    COMMERCIAL AT (U+0040)
  +   '([0-9]+)'    //    <version>
  + ')?'            //  }
  + '$'
  );

  //. ### Usage
  //.
  //. ```javascript
  //. const type = require ('sanctuary-type-identifiers');
  //. ```
  //.
  //. ```javascript
  //. > const Identity$prototype = {
  //. .   '@@type': 'my-package/Identity@1',
  //. .   '@@show': function() {
  //. .     return 'Identity (' + show (this.value) + ')';
  //. .   }
  //. . }
  //.
  //. > const Identity = value =>
  //. .   Object.assign (Object.create (Identity$prototype), {value})
  //.
  //. > type (Identity (0))
  //. 'my-package/Identity@1'
  //.
  //. > type.parse (type (Identity (0)))
  //. {namespace: 'my-package', name: 'Identity', version: 1}
  //. ```
  //.
  //. ### API
  //.
  //# type :: Any -> String
  //.
  //. Takes any value and returns a string which identifies its type. If the
  //. value conforms to the [specification][4], the custom type identifier is
  //. returned.
  //.
  //. ```javascript
  //. > type (null)
  //. 'Null'
  //.
  //. > type (true)
  //. 'Boolean'
  //.
  //. > type (Identity (0))
  //. 'my-package/Identity@1'
  //. ```
  function type(x) {
    return x != null &&
           x.constructor != null &&
           x.constructor.prototype !== x &&
           typeof x[$$type] === 'string' ?
      x[$$type] :
      (Object.prototype.toString.call (x)).slice ('[object '.length,
                                                  -']'.length);
  }

  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }
  //.
  //. Takes any string and parses it according to the [specification][4],
  //. returning an object with `namespace`, `name`, and `version` fields.
  //.
  //. ```javascript
  //. > type.parse ('my-package/List@2')
  //. {namespace: 'my-package', name: 'List', version: 2}
  //.
  //. > type.parse ('nonsense!')
  //. {namespace: null, name: 'nonsense!', version: 0}
  //.
  //. > type.parse (type (Identity (0)))
  //. {namespace: 'my-package', name: 'Identity', version: 1}
  //. ```
  type.parse = function parse(s) {
    var namespace = null;
    var name = s;
    var version = 0;
    var groups = pattern.exec (s);
    if (groups != null) {
      namespace = groups[1];
      name = groups[2];
      if (groups[3] != null) version = Number (groups[3]);
    }
    return {namespace: namespace, name: name, version: version};
  };

  return type;

}));

//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof
//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString
//. [3]: https://docs.npmjs.com/misc/scope
//. [4]: #specification


/***/ })

}]);